// Code generated by protoc-gen-go.
// source: festival.proto
// DO NOT EDIT!

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type SendFestivalS2C_MsgID int32

const (
	SendFestivalS2C_eMsgID SendFestivalS2C_MsgID = 18433
)

var SendFestivalS2C_MsgID_name = map[int32]string{
	18433: "eMsgID",
}
var SendFestivalS2C_MsgID_value = map[string]int32{
	"eMsgID": 18433,
}

func (x SendFestivalS2C_MsgID) Enum() *SendFestivalS2C_MsgID {
	p := new(SendFestivalS2C_MsgID)
	*p = x
	return p
}
func (x SendFestivalS2C_MsgID) String() string {
	return proto.EnumName(SendFestivalS2C_MsgID_name, int32(x))
}
func (x *SendFestivalS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SendFestivalS2C_MsgID_value, data, "SendFestivalS2C_MsgID")
	if err != nil {
		return err
	}
	*x = SendFestivalS2C_MsgID(value)
	return nil
}
func (SendFestivalS2C_MsgID) EnumDescriptor() ([]byte, []int) { return fileDescriptor22, []int{13, 0} }

type FestivalReqSignC2S_MsgID int32

const (
	FestivalReqSignC2S_eMsgID FestivalReqSignC2S_MsgID = 18434
)

var FestivalReqSignC2S_MsgID_name = map[int32]string{
	18434: "eMsgID",
}
var FestivalReqSignC2S_MsgID_value = map[string]int32{
	"eMsgID": 18434,
}

func (x FestivalReqSignC2S_MsgID) Enum() *FestivalReqSignC2S_MsgID {
	p := new(FestivalReqSignC2S_MsgID)
	*p = x
	return p
}
func (x FestivalReqSignC2S_MsgID) String() string {
	return proto.EnumName(FestivalReqSignC2S_MsgID_name, int32(x))
}
func (x *FestivalReqSignC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(FestivalReqSignC2S_MsgID_value, data, "FestivalReqSignC2S_MsgID")
	if err != nil {
		return err
	}
	*x = FestivalReqSignC2S_MsgID(value)
	return nil
}
func (FestivalReqSignC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor22, []int{14, 0}
}

type FestivalReqSignS2C_MsgID int32

const (
	FestivalReqSignS2C_eMsgID FestivalReqSignS2C_MsgID = 18434
)

var FestivalReqSignS2C_MsgID_name = map[int32]string{
	18434: "eMsgID",
}
var FestivalReqSignS2C_MsgID_value = map[string]int32{
	"eMsgID": 18434,
}

func (x FestivalReqSignS2C_MsgID) Enum() *FestivalReqSignS2C_MsgID {
	p := new(FestivalReqSignS2C_MsgID)
	*p = x
	return p
}
func (x FestivalReqSignS2C_MsgID) String() string {
	return proto.EnumName(FestivalReqSignS2C_MsgID_name, int32(x))
}
func (x *FestivalReqSignS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(FestivalReqSignS2C_MsgID_value, data, "FestivalReqSignS2C_MsgID")
	if err != nil {
		return err
	}
	*x = FestivalReqSignS2C_MsgID(value)
	return nil
}
func (FestivalReqSignS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor22, []int{15, 0}
}

type FestivalTaskRewardC2S_MsgID int32

const (
	FestivalTaskRewardC2S_eMsgID FestivalTaskRewardC2S_MsgID = 18435
)

var FestivalTaskRewardC2S_MsgID_name = map[int32]string{
	18435: "eMsgID",
}
var FestivalTaskRewardC2S_MsgID_value = map[string]int32{
	"eMsgID": 18435,
}

func (x FestivalTaskRewardC2S_MsgID) Enum() *FestivalTaskRewardC2S_MsgID {
	p := new(FestivalTaskRewardC2S_MsgID)
	*p = x
	return p
}
func (x FestivalTaskRewardC2S_MsgID) String() string {
	return proto.EnumName(FestivalTaskRewardC2S_MsgID_name, int32(x))
}
func (x *FestivalTaskRewardC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(FestivalTaskRewardC2S_MsgID_value, data, "FestivalTaskRewardC2S_MsgID")
	if err != nil {
		return err
	}
	*x = FestivalTaskRewardC2S_MsgID(value)
	return nil
}
func (FestivalTaskRewardC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor22, []int{16, 0}
}

type FestivalTaskRewardS2C_MsgID int32

const (
	FestivalTaskRewardS2C_eMsgID FestivalTaskRewardS2C_MsgID = 18435
)

var FestivalTaskRewardS2C_MsgID_name = map[int32]string{
	18435: "eMsgID",
}
var FestivalTaskRewardS2C_MsgID_value = map[string]int32{
	"eMsgID": 18435,
}

func (x FestivalTaskRewardS2C_MsgID) Enum() *FestivalTaskRewardS2C_MsgID {
	p := new(FestivalTaskRewardS2C_MsgID)
	*p = x
	return p
}
func (x FestivalTaskRewardS2C_MsgID) String() string {
	return proto.EnumName(FestivalTaskRewardS2C_MsgID_name, int32(x))
}
func (x *FestivalTaskRewardS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(FestivalTaskRewardS2C_MsgID_value, data, "FestivalTaskRewardS2C_MsgID")
	if err != nil {
		return err
	}
	*x = FestivalTaskRewardS2C_MsgID(value)
	return nil
}
func (FestivalTaskRewardS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor22, []int{17, 0}
}

type FestivalBuyGiftC2S_MsgID int32

const (
	FestivalBuyGiftC2S_eMsgID FestivalBuyGiftC2S_MsgID = 18438
)

var FestivalBuyGiftC2S_MsgID_name = map[int32]string{
	18438: "eMsgID",
}
var FestivalBuyGiftC2S_MsgID_value = map[string]int32{
	"eMsgID": 18438,
}

func (x FestivalBuyGiftC2S_MsgID) Enum() *FestivalBuyGiftC2S_MsgID {
	p := new(FestivalBuyGiftC2S_MsgID)
	*p = x
	return p
}
func (x FestivalBuyGiftC2S_MsgID) String() string {
	return proto.EnumName(FestivalBuyGiftC2S_MsgID_name, int32(x))
}
func (x *FestivalBuyGiftC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(FestivalBuyGiftC2S_MsgID_value, data, "FestivalBuyGiftC2S_MsgID")
	if err != nil {
		return err
	}
	*x = FestivalBuyGiftC2S_MsgID(value)
	return nil
}
func (FestivalBuyGiftC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor22, []int{18, 0}
}

type FestivalBuyGiftS2C_MsgID int32

const (
	FestivalBuyGiftS2C_eMsgID FestivalBuyGiftS2C_MsgID = 18438
)

var FestivalBuyGiftS2C_MsgID_name = map[int32]string{
	18438: "eMsgID",
}
var FestivalBuyGiftS2C_MsgID_value = map[string]int32{
	"eMsgID": 18438,
}

func (x FestivalBuyGiftS2C_MsgID) Enum() *FestivalBuyGiftS2C_MsgID {
	p := new(FestivalBuyGiftS2C_MsgID)
	*p = x
	return p
}
func (x FestivalBuyGiftS2C_MsgID) String() string {
	return proto.EnumName(FestivalBuyGiftS2C_MsgID_name, int32(x))
}
func (x *FestivalBuyGiftS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(FestivalBuyGiftS2C_MsgID_value, data, "FestivalBuyGiftS2C_MsgID")
	if err != nil {
		return err
	}
	*x = FestivalBuyGiftS2C_MsgID(value)
	return nil
}
func (FestivalBuyGiftS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor22, []int{19, 0}
}

type FestivalPayGiftS2C_MsgID int32

const (
	FestivalPayGiftS2C_eMsgID FestivalPayGiftS2C_MsgID = 18439
)

var FestivalPayGiftS2C_MsgID_name = map[int32]string{
	18439: "eMsgID",
}
var FestivalPayGiftS2C_MsgID_value = map[string]int32{
	"eMsgID": 18439,
}

func (x FestivalPayGiftS2C_MsgID) Enum() *FestivalPayGiftS2C_MsgID {
	p := new(FestivalPayGiftS2C_MsgID)
	*p = x
	return p
}
func (x FestivalPayGiftS2C_MsgID) String() string {
	return proto.EnumName(FestivalPayGiftS2C_MsgID_name, int32(x))
}
func (x *FestivalPayGiftS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(FestivalPayGiftS2C_MsgID_value, data, "FestivalPayGiftS2C_MsgID")
	if err != nil {
		return err
	}
	*x = FestivalPayGiftS2C_MsgID(value)
	return nil
}
func (FestivalPayGiftS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor22, []int{20, 0}
}

type FestivalReqDrawC2S_MsgID int32

const (
	FestivalReqDrawC2S_eMsgID FestivalReqDrawC2S_MsgID = 18436
)

var FestivalReqDrawC2S_MsgID_name = map[int32]string{
	18436: "eMsgID",
}
var FestivalReqDrawC2S_MsgID_value = map[string]int32{
	"eMsgID": 18436,
}

func (x FestivalReqDrawC2S_MsgID) Enum() *FestivalReqDrawC2S_MsgID {
	p := new(FestivalReqDrawC2S_MsgID)
	*p = x
	return p
}
func (x FestivalReqDrawC2S_MsgID) String() string {
	return proto.EnumName(FestivalReqDrawC2S_MsgID_name, int32(x))
}
func (x *FestivalReqDrawC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(FestivalReqDrawC2S_MsgID_value, data, "FestivalReqDrawC2S_MsgID")
	if err != nil {
		return err
	}
	*x = FestivalReqDrawC2S_MsgID(value)
	return nil
}
func (FestivalReqDrawC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor22, []int{21, 0}
}

type FestivalReqDrawS2C_MsgID int32

const (
	FestivalReqDrawS2C_eMsgID FestivalReqDrawS2C_MsgID = 18436
)

var FestivalReqDrawS2C_MsgID_name = map[int32]string{
	18436: "eMsgID",
}
var FestivalReqDrawS2C_MsgID_value = map[string]int32{
	"eMsgID": 18436,
}

func (x FestivalReqDrawS2C_MsgID) Enum() *FestivalReqDrawS2C_MsgID {
	p := new(FestivalReqDrawS2C_MsgID)
	*p = x
	return p
}
func (x FestivalReqDrawS2C_MsgID) String() string {
	return proto.EnumName(FestivalReqDrawS2C_MsgID_name, int32(x))
}
func (x *FestivalReqDrawS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(FestivalReqDrawS2C_MsgID_value, data, "FestivalReqDrawS2C_MsgID")
	if err != nil {
		return err
	}
	*x = FestivalReqDrawS2C_MsgID(value)
	return nil
}
func (FestivalReqDrawS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor22, []int{22, 0}
}

type FestivalExchangItemC2S_MsgID int32

const (
	FestivalExchangItemC2S_eMsgID FestivalExchangItemC2S_MsgID = 18437
)

var FestivalExchangItemC2S_MsgID_name = map[int32]string{
	18437: "eMsgID",
}
var FestivalExchangItemC2S_MsgID_value = map[string]int32{
	"eMsgID": 18437,
}

func (x FestivalExchangItemC2S_MsgID) Enum() *FestivalExchangItemC2S_MsgID {
	p := new(FestivalExchangItemC2S_MsgID)
	*p = x
	return p
}
func (x FestivalExchangItemC2S_MsgID) String() string {
	return proto.EnumName(FestivalExchangItemC2S_MsgID_name, int32(x))
}
func (x *FestivalExchangItemC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(FestivalExchangItemC2S_MsgID_value, data, "FestivalExchangItemC2S_MsgID")
	if err != nil {
		return err
	}
	*x = FestivalExchangItemC2S_MsgID(value)
	return nil
}
func (FestivalExchangItemC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor22, []int{23, 0}
}

type FestivalExchangItemS2C_MsgID int32

const (
	FestivalExchangItemS2C_eMsgID FestivalExchangItemS2C_MsgID = 18437
)

var FestivalExchangItemS2C_MsgID_name = map[int32]string{
	18437: "eMsgID",
}
var FestivalExchangItemS2C_MsgID_value = map[string]int32{
	"eMsgID": 18437,
}

func (x FestivalExchangItemS2C_MsgID) Enum() *FestivalExchangItemS2C_MsgID {
	p := new(FestivalExchangItemS2C_MsgID)
	*p = x
	return p
}
func (x FestivalExchangItemS2C_MsgID) String() string {
	return proto.EnumName(FestivalExchangItemS2C_MsgID_name, int32(x))
}
func (x *FestivalExchangItemS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(FestivalExchangItemS2C_MsgID_value, data, "FestivalExchangItemS2C_MsgID")
	if err != nil {
		return err
	}
	*x = FestivalExchangItemS2C_MsgID(value)
	return nil
}
func (FestivalExchangItemS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor22, []int{24, 0}
}

type UpdateFestivalAccumulateDataS2C_MsgID int32

const (
	UpdateFestivalAccumulateDataS2C_eMsgID UpdateFestivalAccumulateDataS2C_MsgID = 18440
)

var UpdateFestivalAccumulateDataS2C_MsgID_name = map[int32]string{
	18440: "eMsgID",
}
var UpdateFestivalAccumulateDataS2C_MsgID_value = map[string]int32{
	"eMsgID": 18440,
}

func (x UpdateFestivalAccumulateDataS2C_MsgID) Enum() *UpdateFestivalAccumulateDataS2C_MsgID {
	p := new(UpdateFestivalAccumulateDataS2C_MsgID)
	*p = x
	return p
}
func (x UpdateFestivalAccumulateDataS2C_MsgID) String() string {
	return proto.EnumName(UpdateFestivalAccumulateDataS2C_MsgID_name, int32(x))
}
func (x *UpdateFestivalAccumulateDataS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(UpdateFestivalAccumulateDataS2C_MsgID_value, data, "UpdateFestivalAccumulateDataS2C_MsgID")
	if err != nil {
		return err
	}
	*x = UpdateFestivalAccumulateDataS2C_MsgID(value)
	return nil
}
func (UpdateFestivalAccumulateDataS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor22, []int{25, 0}
}

// 活动主界面
type FestivalEntry struct {
	TimeInfo         *FestivalTime           `protobuf:"bytes,1,opt,name=timeInfo" json:"timeInfo,omitempty"`
	Ui               *int32                  `protobuf:"varint,2,opt,name=ui" json:"ui,omitempty"`
	Switch           *FestivalSwitch         `protobuf:"bytes,3,opt,name=switch" json:"switch,omitempty"`
	Data             *FestivalAccumulateData `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *FestivalEntry) Reset()                    { *m = FestivalEntry{} }
func (m *FestivalEntry) String() string            { return proto.CompactTextString(m) }
func (*FestivalEntry) ProtoMessage()               {}
func (*FestivalEntry) Descriptor() ([]byte, []int) { return fileDescriptor22, []int{0} }

func (m *FestivalEntry) GetTimeInfo() *FestivalTime {
	if m != nil {
		return m.TimeInfo
	}
	return nil
}

func (m *FestivalEntry) GetUi() int32 {
	if m != nil && m.Ui != nil {
		return *m.Ui
	}
	return 0
}

func (m *FestivalEntry) GetSwitch() *FestivalSwitch {
	if m != nil {
		return m.Switch
	}
	return nil
}

func (m *FestivalEntry) GetData() *FestivalAccumulateData {
	if m != nil {
		return m.Data
	}
	return nil
}

// 活动期间累计数据
type FestivalAccumulateData struct {
	Diamond          *int32 `protobuf:"varint,1,opt,name=diamond" json:"diamond,omitempty"`
	DrawTimes        *int32 `protobuf:"varint,2,opt,name=drawTimes" json:"drawTimes,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *FestivalAccumulateData) Reset()                    { *m = FestivalAccumulateData{} }
func (m *FestivalAccumulateData) String() string            { return proto.CompactTextString(m) }
func (*FestivalAccumulateData) ProtoMessage()               {}
func (*FestivalAccumulateData) Descriptor() ([]byte, []int) { return fileDescriptor22, []int{1} }

func (m *FestivalAccumulateData) GetDiamond() int32 {
	if m != nil && m.Diamond != nil {
		return *m.Diamond
	}
	return 0
}

func (m *FestivalAccumulateData) GetDrawTimes() int32 {
	if m != nil && m.DrawTimes != nil {
		return *m.DrawTimes
	}
	return 0
}

// 节日活动时间
type FestivalTime struct {
	BeginShow        *int64 `protobuf:"varint,1,opt,name=beginShow" json:"beginShow,omitempty"`
	Begin            *int64 `protobuf:"varint,2,opt,name=begin" json:"begin,omitempty"`
	End              *int64 `protobuf:"varint,3,opt,name=End" json:"End,omitempty"`
	EndShow          *int64 `protobuf:"varint,4,opt,name=endShow" json:"endShow,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *FestivalTime) Reset()                    { *m = FestivalTime{} }
func (m *FestivalTime) String() string            { return proto.CompactTextString(m) }
func (*FestivalTime) ProtoMessage()               {}
func (*FestivalTime) Descriptor() ([]byte, []int) { return fileDescriptor22, []int{2} }

func (m *FestivalTime) GetBeginShow() int64 {
	if m != nil && m.BeginShow != nil {
		return *m.BeginShow
	}
	return 0
}

func (m *FestivalTime) GetBegin() int64 {
	if m != nil && m.Begin != nil {
		return *m.Begin
	}
	return 0
}

func (m *FestivalTime) GetEnd() int64 {
	if m != nil && m.End != nil {
		return *m.End
	}
	return 0
}

func (m *FestivalTime) GetEndShow() int64 {
	if m != nil && m.EndShow != nil {
		return *m.EndShow
	}
	return 0
}

// 子活动开关
type FestivalSwitch struct {
	SignSwitch       *bool  `protobuf:"varint,1,opt,name=signSwitch" json:"signSwitch,omitempty"`
	TaskSwitch       *bool  `protobuf:"varint,2,opt,name=taskSwitch" json:"taskSwitch,omitempty"`
	GiftSwitch       *bool  `protobuf:"varint,3,opt,name=giftSwitch" json:"giftSwitch,omitempty"`
	ExchangeSwitch   *bool  `protobuf:"varint,4,opt,name=exchangeSwitch" json:"exchangeSwitch,omitempty"`
	DrawSwitch       *bool  `protobuf:"varint,5,opt,name=drawSwitch" json:"drawSwitch,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *FestivalSwitch) Reset()                    { *m = FestivalSwitch{} }
func (m *FestivalSwitch) String() string            { return proto.CompactTextString(m) }
func (*FestivalSwitch) ProtoMessage()               {}
func (*FestivalSwitch) Descriptor() ([]byte, []int) { return fileDescriptor22, []int{3} }

func (m *FestivalSwitch) GetSignSwitch() bool {
	if m != nil && m.SignSwitch != nil {
		return *m.SignSwitch
	}
	return false
}

func (m *FestivalSwitch) GetTaskSwitch() bool {
	if m != nil && m.TaskSwitch != nil {
		return *m.TaskSwitch
	}
	return false
}

func (m *FestivalSwitch) GetGiftSwitch() bool {
	if m != nil && m.GiftSwitch != nil {
		return *m.GiftSwitch
	}
	return false
}

func (m *FestivalSwitch) GetExchangeSwitch() bool {
	if m != nil && m.ExchangeSwitch != nil {
		return *m.ExchangeSwitch
	}
	return false
}

func (m *FestivalSwitch) GetDrawSwitch() bool {
	if m != nil && m.DrawSwitch != nil {
		return *m.DrawSwitch
	}
	return false
}

// 签到
type FestivalSign struct {
	TimeInfo         *FestivalTime         `protobuf:"bytes,1,opt,name=timeInfo" json:"timeInfo,omitempty"`
	IsTodaySign      *bool                 `protobuf:"varint,2,opt,name=isTodaySign" json:"isTodaySign,omitempty"`
	SignDay          *int32                `protobuf:"varint,3,opt,name=signDay" json:"signDay,omitempty"`
	DayRewards       []*FestivalSignReward `protobuf:"bytes,4,rep,name=dayRewards" json:"dayRewards,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *FestivalSign) Reset()                    { *m = FestivalSign{} }
func (m *FestivalSign) String() string            { return proto.CompactTextString(m) }
func (*FestivalSign) ProtoMessage()               {}
func (*FestivalSign) Descriptor() ([]byte, []int) { return fileDescriptor22, []int{4} }

func (m *FestivalSign) GetTimeInfo() *FestivalTime {
	if m != nil {
		return m.TimeInfo
	}
	return nil
}

func (m *FestivalSign) GetIsTodaySign() bool {
	if m != nil && m.IsTodaySign != nil {
		return *m.IsTodaySign
	}
	return false
}

func (m *FestivalSign) GetSignDay() int32 {
	if m != nil && m.SignDay != nil {
		return *m.SignDay
	}
	return 0
}

func (m *FestivalSign) GetDayRewards() []*FestivalSignReward {
	if m != nil {
		return m.DayRewards
	}
	return nil
}

// 签到当天奖励
type FestivalSignReward struct {
	Day              *int32            `protobuf:"varint,1,opt,name=day" json:"day,omitempty"`
	Rewards          []*ItemVaryConfig `protobuf:"bytes,2,rep,name=rewards" json:"rewards,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *FestivalSignReward) Reset()                    { *m = FestivalSignReward{} }
func (m *FestivalSignReward) String() string            { return proto.CompactTextString(m) }
func (*FestivalSignReward) ProtoMessage()               {}
func (*FestivalSignReward) Descriptor() ([]byte, []int) { return fileDescriptor22, []int{5} }

func (m *FestivalSignReward) GetDay() int32 {
	if m != nil && m.Day != nil {
		return *m.Day
	}
	return 0
}

func (m *FestivalSignReward) GetRewards() []*ItemVaryConfig {
	if m != nil {
		return m.Rewards
	}
	return nil
}

// 任务
type FestivalTask struct {
	TimeInfo         *FestivalTime `protobuf:"bytes,1,opt,name=timeInfo" json:"timeInfo,omitempty"`
	Tasks            []*TaskItem   `protobuf:"bytes,2,rep,name=tasks" json:"tasks,omitempty"`
	CurrDay          *int32        `protobuf:"varint,3,opt,name=currDay" json:"currDay,omitempty"`
	Score            *int32        `protobuf:"varint,4,opt,name=score" json:"score,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *FestivalTask) Reset()                    { *m = FestivalTask{} }
func (m *FestivalTask) String() string            { return proto.CompactTextString(m) }
func (*FestivalTask) ProtoMessage()               {}
func (*FestivalTask) Descriptor() ([]byte, []int) { return fileDescriptor22, []int{6} }

func (m *FestivalTask) GetTimeInfo() *FestivalTime {
	if m != nil {
		return m.TimeInfo
	}
	return nil
}

func (m *FestivalTask) GetTasks() []*TaskItem {
	if m != nil {
		return m.Tasks
	}
	return nil
}

func (m *FestivalTask) GetCurrDay() int32 {
	if m != nil && m.CurrDay != nil {
		return *m.CurrDay
	}
	return 0
}

func (m *FestivalTask) GetScore() int32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

// 礼包
type FestivalGift struct {
	TimeInfo         *FestivalTime       `protobuf:"bytes,1,opt,name=timeInfo" json:"timeInfo,omitempty"`
	Slots            []*FestivalGiftSlot `protobuf:"bytes,2,rep,name=slots" json:"slots,omitempty"`
	CurrDay          *int32              `protobuf:"varint,3,opt,name=currDay" json:"currDay,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *FestivalGift) Reset()                    { *m = FestivalGift{} }
func (m *FestivalGift) String() string            { return proto.CompactTextString(m) }
func (*FestivalGift) ProtoMessage()               {}
func (*FestivalGift) Descriptor() ([]byte, []int) { return fileDescriptor22, []int{7} }

func (m *FestivalGift) GetTimeInfo() *FestivalTime {
	if m != nil {
		return m.TimeInfo
	}
	return nil
}

func (m *FestivalGift) GetSlots() []*FestivalGiftSlot {
	if m != nil {
		return m.Slots
	}
	return nil
}

func (m *FestivalGift) GetCurrDay() int32 {
	if m != nil && m.CurrDay != nil {
		return *m.CurrDay
	}
	return 0
}

// 每个礼包配置
type FestivalGiftSlot struct {
	Id               *int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Limit            *int32  `protobuf:"varint,2,opt,name=limit" json:"limit,omitempty"`
	Count            *int32  `protobuf:"varint,3,opt,name=count" json:"count,omitempty"`
	Price            *int32  `protobuf:"varint,4,opt,name=price" json:"price,omitempty"`
	PurchaseType     *int32  `protobuf:"varint,5,opt,name=purchaseType" json:"purchaseType,omitempty"`
	Tab              *int32  `protobuf:"varint,6,opt,name=tab" json:"tab,omitempty"`
	Discount         *int32  `protobuf:"varint,7,opt,name=discount" json:"discount,omitempty"`
	Reward           *int32  `protobuf:"varint,8,opt,name=reward" json:"reward,omitempty"`
	Refresh          *int64  `protobuf:"varint,9,opt,name=refresh" json:"refresh,omitempty"`
	RefreshInterval  *int32  `protobuf:"varint,10,opt,name=refreshInterval" json:"refreshInterval,omitempty"`
	OpenDays         []int32 `protobuf:"varint,11,rep,name=openDays" json:"openDays,omitempty"`
	ChargeId         *int32  `protobuf:"varint,12,opt,name=chargeId" json:"chargeId,omitempty"`
	Icon             *int32  `protobuf:"varint,13,opt,name=icon" json:"icon,omitempty"`
	Name             *string `protobuf:"bytes,14,opt,name=name" json:"name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *FestivalGiftSlot) Reset()                    { *m = FestivalGiftSlot{} }
func (m *FestivalGiftSlot) String() string            { return proto.CompactTextString(m) }
func (*FestivalGiftSlot) ProtoMessage()               {}
func (*FestivalGiftSlot) Descriptor() ([]byte, []int) { return fileDescriptor22, []int{8} }

func (m *FestivalGiftSlot) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *FestivalGiftSlot) GetLimit() int32 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

func (m *FestivalGiftSlot) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func (m *FestivalGiftSlot) GetPrice() int32 {
	if m != nil && m.Price != nil {
		return *m.Price
	}
	return 0
}

func (m *FestivalGiftSlot) GetPurchaseType() int32 {
	if m != nil && m.PurchaseType != nil {
		return *m.PurchaseType
	}
	return 0
}

func (m *FestivalGiftSlot) GetTab() int32 {
	if m != nil && m.Tab != nil {
		return *m.Tab
	}
	return 0
}

func (m *FestivalGiftSlot) GetDiscount() int32 {
	if m != nil && m.Discount != nil {
		return *m.Discount
	}
	return 0
}

func (m *FestivalGiftSlot) GetReward() int32 {
	if m != nil && m.Reward != nil {
		return *m.Reward
	}
	return 0
}

func (m *FestivalGiftSlot) GetRefresh() int64 {
	if m != nil && m.Refresh != nil {
		return *m.Refresh
	}
	return 0
}

func (m *FestivalGiftSlot) GetRefreshInterval() int32 {
	if m != nil && m.RefreshInterval != nil {
		return *m.RefreshInterval
	}
	return 0
}

func (m *FestivalGiftSlot) GetOpenDays() []int32 {
	if m != nil {
		return m.OpenDays
	}
	return nil
}

func (m *FestivalGiftSlot) GetChargeId() int32 {
	if m != nil && m.ChargeId != nil {
		return *m.ChargeId
	}
	return 0
}

func (m *FestivalGiftSlot) GetIcon() int32 {
	if m != nil && m.Icon != nil {
		return *m.Icon
	}
	return 0
}

func (m *FestivalGiftSlot) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

// 转盘
type FestivalDraw struct {
	TimeInfo         *FestivalTime       `protobuf:"bytes,1,opt,name=timeInfo" json:"timeInfo,omitempty"`
	FreeCount        *int32              `protobuf:"varint,2,opt,name=freeCount" json:"freeCount,omitempty"`
	Slots            []*FestivalDrawSlot `protobuf:"bytes,3,rep,name=slots" json:"slots,omitempty"`
	FreeLimit        *int32              `protobuf:"varint,4,opt,name=freeLimit" json:"freeLimit,omitempty"`
	OnceCost         []*ItemVaryConfig   `protobuf:"bytes,5,rep,name=onceCost" json:"onceCost,omitempty"`
	TenCost          []*ItemVaryConfig   `protobuf:"bytes,6,rep,name=tenCost" json:"tenCost,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *FestivalDraw) Reset()                    { *m = FestivalDraw{} }
func (m *FestivalDraw) String() string            { return proto.CompactTextString(m) }
func (*FestivalDraw) ProtoMessage()               {}
func (*FestivalDraw) Descriptor() ([]byte, []int) { return fileDescriptor22, []int{9} }

func (m *FestivalDraw) GetTimeInfo() *FestivalTime {
	if m != nil {
		return m.TimeInfo
	}
	return nil
}

func (m *FestivalDraw) GetFreeCount() int32 {
	if m != nil && m.FreeCount != nil {
		return *m.FreeCount
	}
	return 0
}

func (m *FestivalDraw) GetSlots() []*FestivalDrawSlot {
	if m != nil {
		return m.Slots
	}
	return nil
}

func (m *FestivalDraw) GetFreeLimit() int32 {
	if m != nil && m.FreeLimit != nil {
		return *m.FreeLimit
	}
	return 0
}

func (m *FestivalDraw) GetOnceCost() []*ItemVaryConfig {
	if m != nil {
		return m.OnceCost
	}
	return nil
}

func (m *FestivalDraw) GetTenCost() []*ItemVaryConfig {
	if m != nil {
		return m.TenCost
	}
	return nil
}

type FestivalDrawSlot struct {
	Weight           *int32            `protobuf:"varint,1,opt,name=weight" json:"weight,omitempty"`
	Reward           []*ItemVaryConfig `protobuf:"bytes,2,rep,name=reward" json:"reward,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *FestivalDrawSlot) Reset()                    { *m = FestivalDrawSlot{} }
func (m *FestivalDrawSlot) String() string            { return proto.CompactTextString(m) }
func (*FestivalDrawSlot) ProtoMessage()               {}
func (*FestivalDrawSlot) Descriptor() ([]byte, []int) { return fileDescriptor22, []int{10} }

func (m *FestivalDrawSlot) GetWeight() int32 {
	if m != nil && m.Weight != nil {
		return *m.Weight
	}
	return 0
}

func (m *FestivalDrawSlot) GetReward() []*ItemVaryConfig {
	if m != nil {
		return m.Reward
	}
	return nil
}

// 兑换商店
type FestivalExchange struct {
	TimeInfo         *FestivalTime           `protobuf:"bytes,1,opt,name=timeInfo" json:"timeInfo,omitempty"`
	Slots            []*FestivalExchangeSlot `protobuf:"bytes,2,rep,name=slots" json:"slots,omitempty"`
	CurrDay          *int32                  `protobuf:"varint,3,opt,name=currDay" json:"currDay,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *FestivalExchange) Reset()                    { *m = FestivalExchange{} }
func (m *FestivalExchange) String() string            { return proto.CompactTextString(m) }
func (*FestivalExchange) ProtoMessage()               {}
func (*FestivalExchange) Descriptor() ([]byte, []int) { return fileDescriptor22, []int{11} }

func (m *FestivalExchange) GetTimeInfo() *FestivalTime {
	if m != nil {
		return m.TimeInfo
	}
	return nil
}

func (m *FestivalExchange) GetSlots() []*FestivalExchangeSlot {
	if m != nil {
		return m.Slots
	}
	return nil
}

func (m *FestivalExchange) GetCurrDay() int32 {
	if m != nil && m.CurrDay != nil {
		return *m.CurrDay
	}
	return 0
}

// 每个兑换配置
type FestivalExchangeSlot struct {
	Id               *int32            `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Limit            *int32            `protobuf:"varint,2,opt,name=limit" json:"limit,omitempty"`
	Count            *int32            `protobuf:"varint,3,opt,name=count" json:"count,omitempty"`
	Rewards          []*ItemVaryConfig `protobuf:"bytes,4,rep,name=rewards" json:"rewards,omitempty"`
	Cost             []*ItemVaryConfig `protobuf:"bytes,5,rep,name=cost" json:"cost,omitempty"`
	OpenDays         []int32           `protobuf:"varint,6,rep,name=openDays" json:"openDays,omitempty"`
	Level            *int32            `protobuf:"varint,7,opt,name=level" json:"level,omitempty"`
	Diamond          *int32            `protobuf:"varint,8,opt,name=diamond" json:"diamond,omitempty"`
	Draw             *int32            `protobuf:"varint,9,opt,name=draw" json:"draw,omitempty"`
	Refresh          *int64            `protobuf:"varint,10,opt,name=refresh" json:"refresh,omitempty"`
	RefreshInterval  *int32            `protobuf:"varint,11,opt,name=refreshInterval" json:"refreshInterval,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *FestivalExchangeSlot) Reset()                    { *m = FestivalExchangeSlot{} }
func (m *FestivalExchangeSlot) String() string            { return proto.CompactTextString(m) }
func (*FestivalExchangeSlot) ProtoMessage()               {}
func (*FestivalExchangeSlot) Descriptor() ([]byte, []int) { return fileDescriptor22, []int{12} }

func (m *FestivalExchangeSlot) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *FestivalExchangeSlot) GetLimit() int32 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

func (m *FestivalExchangeSlot) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func (m *FestivalExchangeSlot) GetRewards() []*ItemVaryConfig {
	if m != nil {
		return m.Rewards
	}
	return nil
}

func (m *FestivalExchangeSlot) GetCost() []*ItemVaryConfig {
	if m != nil {
		return m.Cost
	}
	return nil
}

func (m *FestivalExchangeSlot) GetOpenDays() []int32 {
	if m != nil {
		return m.OpenDays
	}
	return nil
}

func (m *FestivalExchangeSlot) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *FestivalExchangeSlot) GetDiamond() int32 {
	if m != nil && m.Diamond != nil {
		return *m.Diamond
	}
	return 0
}

func (m *FestivalExchangeSlot) GetDraw() int32 {
	if m != nil && m.Draw != nil {
		return *m.Draw
	}
	return 0
}

func (m *FestivalExchangeSlot) GetRefresh() int64 {
	if m != nil && m.Refresh != nil {
		return *m.Refresh
	}
	return 0
}

func (m *FestivalExchangeSlot) GetRefreshInterval() int32 {
	if m != nil && m.RefreshInterval != nil {
		return *m.RefreshInterval
	}
	return 0
}

// 上线下发数据
type SendFestivalS2C struct {
	Entry            *FestivalEntry    `protobuf:"bytes,1,opt,name=entry" json:"entry,omitempty"`
	Sign             *FestivalSign     `protobuf:"bytes,2,opt,name=sign" json:"sign,omitempty"`
	Task             *FestivalTask     `protobuf:"bytes,3,opt,name=task" json:"task,omitempty"`
	Gift             *FestivalGift     `protobuf:"bytes,4,opt,name=gift" json:"gift,omitempty"`
	Draw             *FestivalDraw     `protobuf:"bytes,5,opt,name=draw" json:"draw,omitempty"`
	Exchange         *FestivalExchange `protobuf:"bytes,6,opt,name=exchange" json:"exchange,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *SendFestivalS2C) Reset()                    { *m = SendFestivalS2C{} }
func (m *SendFestivalS2C) String() string            { return proto.CompactTextString(m) }
func (*SendFestivalS2C) ProtoMessage()               {}
func (*SendFestivalS2C) Descriptor() ([]byte, []int) { return fileDescriptor22, []int{13} }

func (m *SendFestivalS2C) GetEntry() *FestivalEntry {
	if m != nil {
		return m.Entry
	}
	return nil
}

func (m *SendFestivalS2C) GetSign() *FestivalSign {
	if m != nil {
		return m.Sign
	}
	return nil
}

func (m *SendFestivalS2C) GetTask() *FestivalTask {
	if m != nil {
		return m.Task
	}
	return nil
}

func (m *SendFestivalS2C) GetGift() *FestivalGift {
	if m != nil {
		return m.Gift
	}
	return nil
}

func (m *SendFestivalS2C) GetDraw() *FestivalDraw {
	if m != nil {
		return m.Draw
	}
	return nil
}

func (m *SendFestivalS2C) GetExchange() *FestivalExchange {
	if m != nil {
		return m.Exchange
	}
	return nil
}

// 请求签到
type FestivalReqSignC2S struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *FestivalReqSignC2S) Reset()                    { *m = FestivalReqSignC2S{} }
func (m *FestivalReqSignC2S) String() string            { return proto.CompactTextString(m) }
func (*FestivalReqSignC2S) ProtoMessage()               {}
func (*FestivalReqSignC2S) Descriptor() ([]byte, []int) { return fileDescriptor22, []int{14} }

type FestivalReqSignS2C struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *FestivalReqSignS2C) Reset()                    { *m = FestivalReqSignS2C{} }
func (m *FestivalReqSignS2C) String() string            { return proto.CompactTextString(m) }
func (*FestivalReqSignS2C) ProtoMessage()               {}
func (*FestivalReqSignS2C) Descriptor() ([]byte, []int) { return fileDescriptor22, []int{15} }

// 任务领奖
type FestivalTaskRewardC2S struct {
	Id               *int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *FestivalTaskRewardC2S) Reset()                    { *m = FestivalTaskRewardC2S{} }
func (m *FestivalTaskRewardC2S) String() string            { return proto.CompactTextString(m) }
func (*FestivalTaskRewardC2S) ProtoMessage()               {}
func (*FestivalTaskRewardC2S) Descriptor() ([]byte, []int) { return fileDescriptor22, []int{16} }

func (m *FestivalTaskRewardC2S) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

type FestivalTaskRewardS2C struct {
	Id               *int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *FestivalTaskRewardS2C) Reset()                    { *m = FestivalTaskRewardS2C{} }
func (m *FestivalTaskRewardS2C) String() string            { return proto.CompactTextString(m) }
func (*FestivalTaskRewardS2C) ProtoMessage()               {}
func (*FestivalTaskRewardS2C) Descriptor() ([]byte, []int) { return fileDescriptor22, []int{17} }

func (m *FestivalTaskRewardS2C) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

// 购买礼包
type FestivalBuyGiftC2S struct {
	Id               *int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *FestivalBuyGiftC2S) Reset()                    { *m = FestivalBuyGiftC2S{} }
func (m *FestivalBuyGiftC2S) String() string            { return proto.CompactTextString(m) }
func (*FestivalBuyGiftC2S) ProtoMessage()               {}
func (*FestivalBuyGiftC2S) Descriptor() ([]byte, []int) { return fileDescriptor22, []int{18} }

func (m *FestivalBuyGiftC2S) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

type FestivalBuyGiftS2C struct {
	Id               *int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *FestivalBuyGiftS2C) Reset()                    { *m = FestivalBuyGiftS2C{} }
func (m *FestivalBuyGiftS2C) String() string            { return proto.CompactTextString(m) }
func (*FestivalBuyGiftS2C) ProtoMessage()               {}
func (*FestivalBuyGiftS2C) Descriptor() ([]byte, []int) { return fileDescriptor22, []int{19} }

func (m *FestivalBuyGiftS2C) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

// 充值礼包发货通知
type FestivalPayGiftS2C struct {
	Id               *int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *FestivalPayGiftS2C) Reset()                    { *m = FestivalPayGiftS2C{} }
func (m *FestivalPayGiftS2C) String() string            { return proto.CompactTextString(m) }
func (*FestivalPayGiftS2C) ProtoMessage()               {}
func (*FestivalPayGiftS2C) Descriptor() ([]byte, []int) { return fileDescriptor22, []int{20} }

func (m *FestivalPayGiftS2C) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

// 转盘抽奖
type FestivalReqDrawC2S struct {
	Times            *int32 `protobuf:"varint,1,opt,name=times" json:"times,omitempty"`
	Free             *bool  `protobuf:"varint,2,opt,name=free" json:"free,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *FestivalReqDrawC2S) Reset()                    { *m = FestivalReqDrawC2S{} }
func (m *FestivalReqDrawC2S) String() string            { return proto.CompactTextString(m) }
func (*FestivalReqDrawC2S) ProtoMessage()               {}
func (*FestivalReqDrawC2S) Descriptor() ([]byte, []int) { return fileDescriptor22, []int{21} }

func (m *FestivalReqDrawC2S) GetTimes() int32 {
	if m != nil && m.Times != nil {
		return *m.Times
	}
	return 0
}

func (m *FestivalReqDrawC2S) GetFree() bool {
	if m != nil && m.Free != nil {
		return *m.Free
	}
	return false
}

type FestivalReqDrawS2C struct {
	Times            *int32  `protobuf:"varint,1,opt,name=times" json:"times,omitempty"`
	Slots            []int32 `protobuf:"varint,2,rep,name=slots" json:"slots,omitempty"`
	Free             *bool   `protobuf:"varint,3,opt,name=free" json:"free,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *FestivalReqDrawS2C) Reset()                    { *m = FestivalReqDrawS2C{} }
func (m *FestivalReqDrawS2C) String() string            { return proto.CompactTextString(m) }
func (*FestivalReqDrawS2C) ProtoMessage()               {}
func (*FestivalReqDrawS2C) Descriptor() ([]byte, []int) { return fileDescriptor22, []int{22} }

func (m *FestivalReqDrawS2C) GetTimes() int32 {
	if m != nil && m.Times != nil {
		return *m.Times
	}
	return 0
}

func (m *FestivalReqDrawS2C) GetSlots() []int32 {
	if m != nil {
		return m.Slots
	}
	return nil
}

func (m *FestivalReqDrawS2C) GetFree() bool {
	if m != nil && m.Free != nil {
		return *m.Free
	}
	return false
}

// 兑换道具
type FestivalExchangItemC2S struct {
	Id               *int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Count            *int32 `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *FestivalExchangItemC2S) Reset()                    { *m = FestivalExchangItemC2S{} }
func (m *FestivalExchangItemC2S) String() string            { return proto.CompactTextString(m) }
func (*FestivalExchangItemC2S) ProtoMessage()               {}
func (*FestivalExchangItemC2S) Descriptor() ([]byte, []int) { return fileDescriptor22, []int{23} }

func (m *FestivalExchangItemC2S) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *FestivalExchangItemC2S) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

type FestivalExchangItemS2C struct {
	Id               *int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Count            *int32 `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *FestivalExchangItemS2C) Reset()                    { *m = FestivalExchangItemS2C{} }
func (m *FestivalExchangItemS2C) String() string            { return proto.CompactTextString(m) }
func (*FestivalExchangItemS2C) ProtoMessage()               {}
func (*FestivalExchangItemS2C) Descriptor() ([]byte, []int) { return fileDescriptor22, []int{24} }

func (m *FestivalExchangItemS2C) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *FestivalExchangItemS2C) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

// 累计数据变化通知
type UpdateFestivalAccumulateDataS2C struct {
	Data             *FestivalAccumulateData `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *UpdateFestivalAccumulateDataS2C) Reset()         { *m = UpdateFestivalAccumulateDataS2C{} }
func (m *UpdateFestivalAccumulateDataS2C) String() string { return proto.CompactTextString(m) }
func (*UpdateFestivalAccumulateDataS2C) ProtoMessage()    {}
func (*UpdateFestivalAccumulateDataS2C) Descriptor() ([]byte, []int) {
	return fileDescriptor22, []int{25}
}

func (m *UpdateFestivalAccumulateDataS2C) GetData() *FestivalAccumulateData {
	if m != nil {
		return m.Data
	}
	return nil
}

// 玩家兑换数据
type GamerFestivalExchangeItem struct {
	Id               *int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Count            *int32 `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	Refresh          *int64 `protobuf:"varint,3,opt,name=refresh" json:"refresh,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GamerFestivalExchangeItem) Reset()                    { *m = GamerFestivalExchangeItem{} }
func (m *GamerFestivalExchangeItem) String() string            { return proto.CompactTextString(m) }
func (*GamerFestivalExchangeItem) ProtoMessage()               {}
func (*GamerFestivalExchangeItem) Descriptor() ([]byte, []int) { return fileDescriptor22, []int{26} }

func (m *GamerFestivalExchangeItem) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *GamerFestivalExchangeItem) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func (m *GamerFestivalExchangeItem) GetRefresh() int64 {
	if m != nil && m.Refresh != nil {
		return *m.Refresh
	}
	return 0
}

// 玩家礼包数据
type GamerFestivalGiftItem struct {
	Id               *int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Count            *int32 `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	Refresh          *int64 `protobuf:"varint,3,opt,name=refresh" json:"refresh,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GamerFestivalGiftItem) Reset()                    { *m = GamerFestivalGiftItem{} }
func (m *GamerFestivalGiftItem) String() string            { return proto.CompactTextString(m) }
func (*GamerFestivalGiftItem) ProtoMessage()               {}
func (*GamerFestivalGiftItem) Descriptor() ([]byte, []int) { return fileDescriptor22, []int{27} }

func (m *GamerFestivalGiftItem) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *GamerFestivalGiftItem) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func (m *GamerFestivalGiftItem) GetRefresh() int64 {
	if m != nil && m.Refresh != nil {
		return *m.Refresh
	}
	return 0
}

// gm后台主活动配置
type GMFestivalMainConfig struct {
	Name             *string           `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	UI               *int32            `protobuf:"varint,2,opt,name=UI" json:"UI,omitempty"`
	Switch           *FestivalSwitch   `protobuf:"bytes,3,opt,name=switch" json:"switch,omitempty"`
	FreeDraw         *int32            `protobuf:"varint,4,opt,name=FreeDraw" json:"FreeDraw,omitempty"`
	OnceCost         []*ItemVaryConfig `protobuf:"bytes,5,rep,name=onceCost" json:"onceCost,omitempty"`
	TenCost          []*ItemVaryConfig `protobuf:"bytes,6,rep,name=tenCost" json:"tenCost,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *GMFestivalMainConfig) Reset()                    { *m = GMFestivalMainConfig{} }
func (m *GMFestivalMainConfig) String() string            { return proto.CompactTextString(m) }
func (*GMFestivalMainConfig) ProtoMessage()               {}
func (*GMFestivalMainConfig) Descriptor() ([]byte, []int) { return fileDescriptor22, []int{28} }

func (m *GMFestivalMainConfig) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *GMFestivalMainConfig) GetUI() int32 {
	if m != nil && m.UI != nil {
		return *m.UI
	}
	return 0
}

func (m *GMFestivalMainConfig) GetSwitch() *FestivalSwitch {
	if m != nil {
		return m.Switch
	}
	return nil
}

func (m *GMFestivalMainConfig) GetFreeDraw() int32 {
	if m != nil && m.FreeDraw != nil {
		return *m.FreeDraw
	}
	return 0
}

func (m *GMFestivalMainConfig) GetOnceCost() []*ItemVaryConfig {
	if m != nil {
		return m.OnceCost
	}
	return nil
}

func (m *GMFestivalMainConfig) GetTenCost() []*ItemVaryConfig {
	if m != nil {
		return m.TenCost
	}
	return nil
}

// gm后台签到配置
type GMFestivalSignConfig struct {
	Id               *int32                `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	DayRewards       []*FestivalSignReward `protobuf:"bytes,3,rep,name=dayRewards" json:"dayRewards,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *GMFestivalSignConfig) Reset()                    { *m = GMFestivalSignConfig{} }
func (m *GMFestivalSignConfig) String() string            { return proto.CompactTextString(m) }
func (*GMFestivalSignConfig) ProtoMessage()               {}
func (*GMFestivalSignConfig) Descriptor() ([]byte, []int) { return fileDescriptor22, []int{29} }

func (m *GMFestivalSignConfig) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *GMFestivalSignConfig) GetDayRewards() []*FestivalSignReward {
	if m != nil {
		return m.DayRewards
	}
	return nil
}

// gm后台抽奖配置
type GMFestivalDrawConfig struct {
	Id               *int32            `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Rewards          []*ItemVaryConfig `protobuf:"bytes,2,rep,name=rewards" json:"rewards,omitempty"`
	Odds             *int32            `protobuf:"varint,3,opt,name=odds" json:"odds,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *GMFestivalDrawConfig) Reset()                    { *m = GMFestivalDrawConfig{} }
func (m *GMFestivalDrawConfig) String() string            { return proto.CompactTextString(m) }
func (*GMFestivalDrawConfig) ProtoMessage()               {}
func (*GMFestivalDrawConfig) Descriptor() ([]byte, []int) { return fileDescriptor22, []int{30} }

func (m *GMFestivalDrawConfig) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *GMFestivalDrawConfig) GetRewards() []*ItemVaryConfig {
	if m != nil {
		return m.Rewards
	}
	return nil
}

func (m *GMFestivalDrawConfig) GetOdds() int32 {
	if m != nil && m.Odds != nil {
		return *m.Odds
	}
	return 0
}

// gm后台任务配置
type GMFestivalTaskConfig struct {
	Id               *int32            `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Rewards          []*ItemVaryConfig `protobuf:"bytes,2,rep,name=rewards" json:"rewards,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *GMFestivalTaskConfig) Reset()                    { *m = GMFestivalTaskConfig{} }
func (m *GMFestivalTaskConfig) String() string            { return proto.CompactTextString(m) }
func (*GMFestivalTaskConfig) ProtoMessage()               {}
func (*GMFestivalTaskConfig) Descriptor() ([]byte, []int) { return fileDescriptor22, []int{31} }

func (m *GMFestivalTaskConfig) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *GMFestivalTaskConfig) GetRewards() []*ItemVaryConfig {
	if m != nil {
		return m.Rewards
	}
	return nil
}

// gm后台兑换配置
type GMFestivalExchangeConfig struct {
	Id               *int32            `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Limit            *int32            `protobuf:"varint,2,opt,name=limit" json:"limit,omitempty"`
	RefreshInterval  *int32            `protobuf:"varint,3,opt,name=refreshInterval" json:"refreshInterval,omitempty"`
	Cost             []*ItemVaryConfig `protobuf:"bytes,4,rep,name=cost" json:"cost,omitempty"`
	Rewards          []*ItemVaryConfig `protobuf:"bytes,5,rep,name=rewards" json:"rewards,omitempty"`
	OpenDays         []int32           `protobuf:"varint,6,rep,name=openDays" json:"openDays,omitempty"`
	Level            *int32            `protobuf:"varint,7,opt,name=level" json:"level,omitempty"`
	Diamond          *int32            `protobuf:"varint,8,opt,name=diamond" json:"diamond,omitempty"`
	Draw             *int32            `protobuf:"varint,9,opt,name=draw" json:"draw,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *GMFestivalExchangeConfig) Reset()                    { *m = GMFestivalExchangeConfig{} }
func (m *GMFestivalExchangeConfig) String() string            { return proto.CompactTextString(m) }
func (*GMFestivalExchangeConfig) ProtoMessage()               {}
func (*GMFestivalExchangeConfig) Descriptor() ([]byte, []int) { return fileDescriptor22, []int{32} }

func (m *GMFestivalExchangeConfig) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *GMFestivalExchangeConfig) GetLimit() int32 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

func (m *GMFestivalExchangeConfig) GetRefreshInterval() int32 {
	if m != nil && m.RefreshInterval != nil {
		return *m.RefreshInterval
	}
	return 0
}

func (m *GMFestivalExchangeConfig) GetCost() []*ItemVaryConfig {
	if m != nil {
		return m.Cost
	}
	return nil
}

func (m *GMFestivalExchangeConfig) GetRewards() []*ItemVaryConfig {
	if m != nil {
		return m.Rewards
	}
	return nil
}

func (m *GMFestivalExchangeConfig) GetOpenDays() []int32 {
	if m != nil {
		return m.OpenDays
	}
	return nil
}

func (m *GMFestivalExchangeConfig) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *GMFestivalExchangeConfig) GetDiamond() int32 {
	if m != nil && m.Diamond != nil {
		return *m.Diamond
	}
	return 0
}

func (m *GMFestivalExchangeConfig) GetDraw() int32 {
	if m != nil && m.Draw != nil {
		return *m.Draw
	}
	return 0
}

// gm后台礼包配置
type GMFestivalGiftConfig struct {
	Id               *int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Limit            *int32  `protobuf:"varint,2,opt,name=limit" json:"limit,omitempty"`
	RefreshInterval  *int32  `protobuf:"varint,3,opt,name=refreshInterval" json:"refreshInterval,omitempty"`
	Price            *int32  `protobuf:"varint,4,opt,name=price" json:"price,omitempty"`
	Currency         *int32  `protobuf:"varint,6,opt,name=currency" json:"currency,omitempty"`
	Tab              *int32  `protobuf:"varint,7,opt,name=tab" json:"tab,omitempty"`
	Rewards          *int32  `protobuf:"varint,8,opt,name=rewards" json:"rewards,omitempty"`
	OpenDays         []int32 `protobuf:"varint,9,rep,name=openDays" json:"openDays,omitempty"`
	Discount         *int32  `protobuf:"varint,10,opt,name=discount" json:"discount,omitempty"`
	ChargeId         *int32  `protobuf:"varint,11,opt,name=chargeId" json:"chargeId,omitempty"`
	Icon             *int32  `protobuf:"varint,13,opt,name=icon" json:"icon,omitempty"`
	Name             *string `protobuf:"bytes,14,opt,name=name" json:"name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GMFestivalGiftConfig) Reset()                    { *m = GMFestivalGiftConfig{} }
func (m *GMFestivalGiftConfig) String() string            { return proto.CompactTextString(m) }
func (*GMFestivalGiftConfig) ProtoMessage()               {}
func (*GMFestivalGiftConfig) Descriptor() ([]byte, []int) { return fileDescriptor22, []int{33} }

func (m *GMFestivalGiftConfig) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *GMFestivalGiftConfig) GetLimit() int32 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

func (m *GMFestivalGiftConfig) GetRefreshInterval() int32 {
	if m != nil && m.RefreshInterval != nil {
		return *m.RefreshInterval
	}
	return 0
}

func (m *GMFestivalGiftConfig) GetPrice() int32 {
	if m != nil && m.Price != nil {
		return *m.Price
	}
	return 0
}

func (m *GMFestivalGiftConfig) GetCurrency() int32 {
	if m != nil && m.Currency != nil {
		return *m.Currency
	}
	return 0
}

func (m *GMFestivalGiftConfig) GetTab() int32 {
	if m != nil && m.Tab != nil {
		return *m.Tab
	}
	return 0
}

func (m *GMFestivalGiftConfig) GetRewards() int32 {
	if m != nil && m.Rewards != nil {
		return *m.Rewards
	}
	return 0
}

func (m *GMFestivalGiftConfig) GetOpenDays() []int32 {
	if m != nil {
		return m.OpenDays
	}
	return nil
}

func (m *GMFestivalGiftConfig) GetDiscount() int32 {
	if m != nil && m.Discount != nil {
		return *m.Discount
	}
	return 0
}

func (m *GMFestivalGiftConfig) GetChargeId() int32 {
	if m != nil && m.ChargeId != nil {
		return *m.ChargeId
	}
	return 0
}

func (m *GMFestivalGiftConfig) GetIcon() int32 {
	if m != nil && m.Icon != nil {
		return *m.Icon
	}
	return 0
}

func (m *GMFestivalGiftConfig) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*FestivalEntry)(nil), "FestivalEntry")
	proto.RegisterType((*FestivalAccumulateData)(nil), "FestivalAccumulateData")
	proto.RegisterType((*FestivalTime)(nil), "FestivalTime")
	proto.RegisterType((*FestivalSwitch)(nil), "FestivalSwitch")
	proto.RegisterType((*FestivalSign)(nil), "FestivalSign")
	proto.RegisterType((*FestivalSignReward)(nil), "FestivalSignReward")
	proto.RegisterType((*FestivalTask)(nil), "FestivalTask")
	proto.RegisterType((*FestivalGift)(nil), "FestivalGift")
	proto.RegisterType((*FestivalGiftSlot)(nil), "FestivalGiftSlot")
	proto.RegisterType((*FestivalDraw)(nil), "FestivalDraw")
	proto.RegisterType((*FestivalDrawSlot)(nil), "FestivalDrawSlot")
	proto.RegisterType((*FestivalExchange)(nil), "FestivalExchange")
	proto.RegisterType((*FestivalExchangeSlot)(nil), "FestivalExchangeSlot")
	proto.RegisterType((*SendFestivalS2C)(nil), "SendFestivalS2C")
	proto.RegisterType((*FestivalReqSignC2S)(nil), "FestivalReqSignC2S")
	proto.RegisterType((*FestivalReqSignS2C)(nil), "FestivalReqSignS2C")
	proto.RegisterType((*FestivalTaskRewardC2S)(nil), "FestivalTaskRewardC2S")
	proto.RegisterType((*FestivalTaskRewardS2C)(nil), "FestivalTaskRewardS2C")
	proto.RegisterType((*FestivalBuyGiftC2S)(nil), "FestivalBuyGiftC2S")
	proto.RegisterType((*FestivalBuyGiftS2C)(nil), "FestivalBuyGiftS2C")
	proto.RegisterType((*FestivalPayGiftS2C)(nil), "FestivalPayGiftS2C")
	proto.RegisterType((*FestivalReqDrawC2S)(nil), "FestivalReqDrawC2S")
	proto.RegisterType((*FestivalReqDrawS2C)(nil), "FestivalReqDrawS2C")
	proto.RegisterType((*FestivalExchangItemC2S)(nil), "FestivalExchangItemC2S")
	proto.RegisterType((*FestivalExchangItemS2C)(nil), "FestivalExchangItemS2C")
	proto.RegisterType((*UpdateFestivalAccumulateDataS2C)(nil), "UpdateFestivalAccumulateDataS2C")
	proto.RegisterType((*GamerFestivalExchangeItem)(nil), "GamerFestivalExchangeItem")
	proto.RegisterType((*GamerFestivalGiftItem)(nil), "GamerFestivalGiftItem")
	proto.RegisterType((*GMFestivalMainConfig)(nil), "GMFestivalMainConfig")
	proto.RegisterType((*GMFestivalSignConfig)(nil), "GMFestivalSignConfig")
	proto.RegisterType((*GMFestivalDrawConfig)(nil), "GMFestivalDrawConfig")
	proto.RegisterType((*GMFestivalTaskConfig)(nil), "GMFestivalTaskConfig")
	proto.RegisterType((*GMFestivalExchangeConfig)(nil), "GMFestivalExchangeConfig")
	proto.RegisterType((*GMFestivalGiftConfig)(nil), "GMFestivalGiftConfig")
	proto.RegisterEnum("SendFestivalS2C_MsgID", SendFestivalS2C_MsgID_name, SendFestivalS2C_MsgID_value)
	proto.RegisterEnum("FestivalReqSignC2S_MsgID", FestivalReqSignC2S_MsgID_name, FestivalReqSignC2S_MsgID_value)
	proto.RegisterEnum("FestivalReqSignS2C_MsgID", FestivalReqSignS2C_MsgID_name, FestivalReqSignS2C_MsgID_value)
	proto.RegisterEnum("FestivalTaskRewardC2S_MsgID", FestivalTaskRewardC2S_MsgID_name, FestivalTaskRewardC2S_MsgID_value)
	proto.RegisterEnum("FestivalTaskRewardS2C_MsgID", FestivalTaskRewardS2C_MsgID_name, FestivalTaskRewardS2C_MsgID_value)
	proto.RegisterEnum("FestivalBuyGiftC2S_MsgID", FestivalBuyGiftC2S_MsgID_name, FestivalBuyGiftC2S_MsgID_value)
	proto.RegisterEnum("FestivalBuyGiftS2C_MsgID", FestivalBuyGiftS2C_MsgID_name, FestivalBuyGiftS2C_MsgID_value)
	proto.RegisterEnum("FestivalPayGiftS2C_MsgID", FestivalPayGiftS2C_MsgID_name, FestivalPayGiftS2C_MsgID_value)
	proto.RegisterEnum("FestivalReqDrawC2S_MsgID", FestivalReqDrawC2S_MsgID_name, FestivalReqDrawC2S_MsgID_value)
	proto.RegisterEnum("FestivalReqDrawS2C_MsgID", FestivalReqDrawS2C_MsgID_name, FestivalReqDrawS2C_MsgID_value)
	proto.RegisterEnum("FestivalExchangItemC2S_MsgID", FestivalExchangItemC2S_MsgID_name, FestivalExchangItemC2S_MsgID_value)
	proto.RegisterEnum("FestivalExchangItemS2C_MsgID", FestivalExchangItemS2C_MsgID_name, FestivalExchangItemS2C_MsgID_value)
	proto.RegisterEnum("UpdateFestivalAccumulateDataS2C_MsgID", UpdateFestivalAccumulateDataS2C_MsgID_name, UpdateFestivalAccumulateDataS2C_MsgID_value)
}

func init() { proto.RegisterFile("festival.proto", fileDescriptor22) }

var fileDescriptor22 = []byte{
	// 1162 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xb4, 0x56, 0xcd, 0x8e, 0xe3, 0x44,
	0x10, 0x96, 0xe3, 0x38, 0x93, 0x74, 0x26, 0xc9, 0xac, 0x77, 0x67, 0xd7, 0x80, 0xd0, 0x0c, 0x06,
	0x04, 0x12, 0x52, 0x0e, 0x73, 0x41, 0x42, 0x5c, 0x20, 0x33, 0x3b, 0x04, 0x18, 0x84, 0x26, 0xb3,
	0x70, 0x44, 0x1e, 0xbb, 0x93, 0x34, 0x24, 0x76, 0xb0, 0x3b, 0x9b, 0xcd, 0x05, 0x09, 0x58, 0x7e,
	0x8e, 0x3c, 0x06, 0x0f, 0xc1, 0x3b, 0xf0, 0x00, 0x5c, 0xb8, 0xf3, 0x06, 0x9c, 0xa8, 0x2a, 0x77,
	0xc7, 0x8e, 0xe3, 0x6c, 0xc2, 0x0a, 0x6e, 0x76, 0x77, 0xd5, 0x57, 0x55, 0x5f, 0x7f, 0x5d, 0x5d,
	0xac, 0x3d, 0xe4, 0x89, 0x14, 0x8f, 0xbd, 0x49, 0x77, 0x16, 0x47, 0x32, 0x7a, 0xf1, 0xd0, 0x8f,
	0xa6, 0xd3, 0x28, 0x54, 0x7f, 0xcc, 0x8f, 0xc2, 0xa1, 0xfa, 0x6e, 0x4e, 0x3d, 0x3f, 0x8e, 0xf4,
	0x86, 0xf4, 0x92, 0xaf, 0xd2, 0x6f, 0xf7, 0xa9, 0xc1, 0x5a, 0x0f, 0x15, 0xca, 0x45, 0x28, 0xe3,
	0xa5, 0x7d, 0xc2, 0xea, 0x52, 0x4c, 0x79, 0x3f, 0x1c, 0x46, 0x8e, 0x71, 0x6a, 0xbc, 0xd9, 0x3c,
	0x6b, 0x75, 0xb5, 0xc5, 0x0d, 0x6c, 0xd8, 0x8c, 0x55, 0xe6, 0xc2, 0xa9, 0xc0, 0x96, 0x05, 0xc6,
	0xb5, 0x64, 0x21, 0xa4, 0x3f, 0x76, 0x4c, 0x32, 0xed, 0xac, 0x4c, 0x07, 0xb4, 0x6c, 0xbf, 0xce,
	0xaa, 0x81, 0x27, 0x3d, 0xa7, 0x4a, 0xdb, 0x0f, 0x56, 0xdb, 0xef, 0xf9, 0xfe, 0x7c, 0x3a, 0x9f,
	0x78, 0x92, 0x9f, 0xc3, 0xb6, 0xfb, 0x2e, 0xbb, 0x5f, 0xbe, 0x63, 0x77, 0xd8, 0x41, 0x20, 0x3c,
	0xa8, 0x2a, 0xa0, 0x6c, 0x2c, 0xfb, 0x0e, 0x6b, 0x04, 0xb1, 0xb7, 0xc0, 0x54, 0x92, 0x34, 0x0b,
	0xf7, 0x13, 0x76, 0xb8, 0x96, 0x21, 0x98, 0xdc, 0xf2, 0x91, 0x08, 0x07, 0xe3, 0x68, 0x41, 0x5e,
	0xa6, 0xdd, 0x62, 0x16, 0x2d, 0x91, 0x87, 0x69, 0x37, 0x99, 0x79, 0x01, 0x88, 0x26, 0xfd, 0x40,
	0x08, 0x1e, 0x06, 0x64, 0x8c, 0x69, 0x9a, 0xee, 0x13, 0xd6, 0x2e, 0x94, 0x01, 0x45, 0x27, 0x62,
	0x14, 0xa6, 0x7f, 0x04, 0x59, 0xc7, 0x35, 0x24, 0x52, 0xad, 0x55, 0xf4, 0xda, 0x48, 0x0c, 0xe5,
	0x20, 0xe3, 0xa4, 0x6e, 0xdf, 0x67, 0x6d, 0xfe, 0xc4, 0x1f, 0x7b, 0xe1, 0x88, 0xab, 0xf5, 0xaa,
	0xb6, 0xc5, 0x42, 0xd4, 0x9a, 0x85, 0x6b, 0xee, 0x37, 0x59, 0x25, 0x03, 0x88, 0xb7, 0xfb, 0x30,
	0xee, 0xb2, 0xa6, 0x48, 0x6e, 0xa2, 0xc0, 0x5b, 0xa2, 0xbd, 0xca, 0x02, 0x0a, 0xc2, 0x6c, 0xcf,
	0xbd, 0x25, 0xa5, 0x60, 0xd9, 0x6f, 0x40, 0x28, 0x6f, 0x79, 0xcd, 0x17, 0x5e, 0x1c, 0x24, 0x10,
	0xde, 0x04, 0xa0, 0xbb, 0xdd, 0x7c, 0xa4, 0x74, 0xcf, 0xed, 0x31, 0x7b, 0x73, 0x15, 0xd9, 0x02,
	0x77, 0xc5, 0xff, 0x29, 0x3b, 0x88, 0x15, 0x50, 0x85, 0x80, 0x3a, 0xdd, 0xbe, 0xe4, 0xd3, 0xcf,
	0xbc, 0x78, 0xd9, 0x03, 0xc1, 0x89, 0x91, 0x2b, 0x72, 0xc7, 0x01, 0x04, 0xed, 0x2e, 0xc2, 0x61,
	0x16, 0x32, 0xa9, 0x01, 0x1b, 0x5d, 0x74, 0x43, 0x50, 0xac, 0xc4, 0x9f, 0xc7, 0x71, 0x56, 0x09,
	0x9c, 0x63, 0xe2, 0x47, 0x31, 0x27, 0x0e, 0x2d, 0xf7, 0x36, 0x0b, 0x75, 0x09, 0xbc, 0xef, 0x0e,
	0x75, 0x0a, 0xfe, 0x93, 0x48, 0xea, 0x50, 0x77, 0xba, 0x79, 0xf7, 0x01, 0xec, 0x6c, 0x84, 0x74,
	0xff, 0x36, 0xd8, 0xd1, 0x86, 0x15, 0x5c, 0x02, 0xa1, 0x15, 0x09, 0x39, 0x4d, 0xc4, 0x54, 0x48,
	0x75, 0x27, 0xe0, 0xd7, 0x8f, 0xe6, 0xa1, 0xcc, 0x32, 0x9e, 0xc5, 0xc2, 0x57, 0x19, 0xdb, 0xf7,
	0xd8, 0xe1, 0x6c, 0x1e, 0x83, 0x1c, 0x12, 0x7e, 0xb3, 0x9c, 0x71, 0x3a, 0x77, 0x0b, 0x19, 0x96,
	0xde, 0xad, 0x53, 0xa3, 0x9f, 0x23, 0x56, 0x0f, 0x44, 0x92, 0x62, 0x1c, 0xd0, 0x4a, 0x9b, 0xd5,
	0x52, 0xce, 0x9d, 0x3a, 0xfd, 0x77, 0xf0, 0x0c, 0x86, 0x31, 0x4f, 0xc6, 0x4e, 0x83, 0x24, 0xfc,
	0x80, 0x75, 0xd4, 0x42, 0x3f, 0x94, 0x3c, 0x86, 0x4c, 0x1d, 0xa6, 0xb1, 0xa2, 0x19, 0x47, 0x29,
	0x24, 0x4e, 0x13, 0x4a, 0xa6, 0x15, 0x88, 0x1e, 0x8f, 0x78, 0x3f, 0x70, 0x0e, 0xc9, 0xe6, 0x90,
	0x55, 0x05, 0xf4, 0x0a, 0xa7, 0xa5, 0xff, 0x42, 0x6f, 0xca, 0x9d, 0x36, 0xfc, 0x35, 0xdc, 0xdf,
	0x8c, 0x8c, 0xe1, 0x73, 0x50, 0xeb, 0x6e, 0x86, 0xe1, 0xf2, 0x41, 0x22, 0xbc, 0x47, 0xe9, 0x57,
	0x94, 0x64, 0x14, 0xe9, 0x66, 0x81, 0x74, 0x44, 0x24, 0x3a, 0x95, 0xd3, 0xc7, 0x44, 0x63, 0x4a,
	0xd4, 0x2b, 0x90, 0x79, 0xe8, 0x03, 0x4e, 0x22, 0x81, 0xa4, 0x32, 0xa1, 0xa1, 0x14, 0x25, 0x0f,
	0xc9, 0xa2, 0x56, 0x2e, 0xc5, 0x5e, 0x76, 0x74, 0xab, 0x58, 0x40, 0xe6, 0x82, 0x8b, 0xd1, 0x58,
	0xaa, 0xe3, 0x3b, 0x59, 0x91, 0xbb, 0x45, 0xcf, 0x5f, 0x66, 0x20, 0x17, 0xea, 0x22, 0xef, 0xa6,
	0xe1, 0xb5, 0x75, 0xa1, 0x1d, 0x77, 0x8b, 0x10, 0xe5, 0x62, 0xfb, 0xcb, 0x60, 0xf7, 0x4a, 0x2d,
	0xf7, 0x17, 0x5c, 0xee, 0x82, 0x56, 0xcb, 0x79, 0x7b, 0x99, 0x55, 0xfd, 0x67, 0xd0, 0x9a, 0xd7,
	0x4c, 0x8d, 0x34, 0x83, 0x01, 0xf9, 0x63, 0x3e, 0x51, 0x72, 0xcc, 0xf5, 0xe4, 0xba, 0xd6, 0x0c,
	0xb6, 0x32, 0x12, 0xe3, 0x9a, 0x3a, 0xd9, 0x36, 0x75, 0x36, 0xa9, 0xda, 0x3f, 0x0d, 0xd6, 0x19,
	0x40, 0xef, 0x5d, 0xf5, 0x9c, 0xb3, 0x1e, 0x24, 0x67, 0x71, 0x7c, 0x88, 0x14, 0xad, 0xed, 0xee,
	0xfa, 0xf3, 0xf4, 0x12, 0xab, 0x26, 0xba, 0xd3, 0xe5, 0x49, 0xa7, 0x76, 0x09, 0x9b, 0xd8, 0x48,
	0xd4, 0x63, 0x94, 0x3b, 0x11, 0x6c, 0x43, 0xb0, 0x89, 0xbd, 0x59, 0x3d, 0x45, 0xad, 0xb5, 0x9b,
	0x8f, 0x9b, 0x54, 0x81, 0x55, 0xd8, 0x24, 0xcd, 0xbf, 0xca, 0xea, 0xba, 0x83, 0xd3, 0x15, 0xcd,
	0x4b, 0x58, 0x1f, 0x92, 0x7b, 0xcc, 0xac, 0xab, 0x64, 0xd4, 0x3f, 0x07, 0x32, 0x6a, 0x9c, 0xbe,
	0x8e, 0xbe, 0xfd, 0xc5, 0x70, 0xdf, 0xca, 0x3a, 0xea, 0x35, 0xff, 0x1a, 0xb3, 0xec, 0x9d, 0x0d,
	0xca, 0x8c, 0xbf, 0x2b, 0x35, 0x06, 0x46, 0xb6, 0x19, 0xbf, 0xc3, 0x8e, 0xf3, 0xf5, 0xa5, 0xbd,
	0x1a, 0xc0, 0xf3, 0x52, 0x29, 0xf3, 0xfd, 0x7e, 0x9b, 0x2f, 0xb2, 0xbf, 0x87, 0xef, 0xdb, 0x59,
	0x92, 0xef, 0xcf, 0x97, 0xc8, 0xde, 0x1e, 0x41, 0x7f, 0x2c, 0x75, 0xdc, 0x23, 0x62, 0xc1, 0xf1,
	0x53, 0x6f, 0x5f, 0xc7, 0x9f, 0xc0, 0xf1, 0x83, 0x35, 0x3e, 0xf1, 0x2c, 0x31, 0x55, 0x50, 0xb3,
	0xa4, 0xe9, 0xc1, 0xd0, 0xe2, 0xc5, 0xde, 0x93, 0xbe, 0x9d, 0x65, 0x48, 0x4f, 0x01, 0xe9, 0xf3,
	0x0d, 0x24, 0x4c, 0xa1, 0x80, 0xd4, 0xca, 0xdf, 0xf9, 0x0c, 0xd8, 0x7c, 0x16, 0xf0, 0x87, 0xd9,
	0xe4, 0xa3, 0xa4, 0x84, 0xb7, 0xb1, 0xc0, 0x68, 0x76, 0xc5, 0x2b, 0xdb, 0xca, 0xfd, 0x61, 0x2b,
	0x56, 0x81, 0xab, 0x3d, 0xb1, 0xbe, 0x60, 0x27, 0x8f, 0x66, 0x30, 0xba, 0xf1, 0xf2, 0xb9, 0x0c,
	0x41, 0xf7, 0x9c, 0xed, 0x4a, 0x02, 0xfc, 0x0c, 0x01, 0x2e, 0xd9, 0x0b, 0x97, 0xf0, 0xce, 0xc4,
	0xc5, 0x8b, 0x44, 0xef, 0xfe, 0xf6, 0x7c, 0xf3, 0xdd, 0x85, 0xc6, 0x37, 0xe8, 0xf1, 0xc7, 0x6b,
	0x40, 0xa8, 0x8f, 0x7f, 0x0d, 0xf2, 0x2b, 0xf4, 0xdd, 0xcb, 0x2b, 0x0d, 0x71, 0xe5, 0x89, 0x50,
	0x35, 0x43, 0xfd, 0x1c, 0x22, 0x4c, 0x03, 0x21, 0x1f, 0xf5, 0xf7, 0x9d, 0x7d, 0xa1, 0x8f, 0x3e,
	0x84, 0xf3, 0x47, 0xb1, 0xfc, 0x97, 0x6f, 0xda, 0x47, 0xf9, 0x4c, 0xa9, 0xa1, 0xa4, 0x9e, 0xf9,
	0x72, 0xd7, 0x07, 0x3e, 0x73, 0xfb, 0xc0, 0x77, 0x9d, 0x07, 0xa3, 0x0b, 0xb2, 0x09, 0xb6, 0x73,
	0xe2, 0x43, 0x92, 0xa2, 0x80, 0x02, 0xa1, 0xa2, 0xce, 0xf3, 0x98, 0xd8, 0x5e, 0x9e, 0x07, 0xd3,
	0xfd, 0xdd, 0x60, 0x4e, 0x06, 0xa3, 0xd5, 0x51, 0x02, 0x55, 0x78, 0x0d, 0x4b, 0x1e, 0x9b, 0xf4,
	0x5d, 0xd4, 0xaf, 0x5e, 0x75, 0x2b, 0xf1, 0x3a, 0xa3, 0xff, 0xe7, 0x5d, 0x74, 0xff, 0x58, 0xd3,
	0x18, 0x35, 0xce, 0xe7, 0xaf, 0xa6, 0x30, 0x56, 0xe2, 0x54, 0x07, 0x83, 0x04, 0x0f, 0xfd, 0xa5,
	0x9a, 0x22, 0xd5, 0x48, 0x79, 0x90, 0xe9, 0x3d, 0x2d, 0xae, 0xbe, 0x31, 0x17, 0x36, 0xf4, 0x5c,
	0xb8, 0x9a, 0x3a, 0x57, 0xb3, 0xe3, 0x6a, 0x52, 0x6c, 0xee, 0x9a, 0x14, 0xff, 0x09, 0x00, 0x00,
	0xff, 0xff, 0x6a, 0xf7, 0x41, 0x20, 0x8d, 0x0e, 0x00, 0x00,
}
