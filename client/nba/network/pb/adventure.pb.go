// Code generated by protoc-gen-go.
// source: adventure.proto
// DO NOT EDIT!

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type AdventureGetDataS2C_MsgID int32

const (
	AdventureGetDataS2C_eMsgID AdventureGetDataS2C_MsgID = 799
)

var AdventureGetDataS2C_MsgID_name = map[int32]string{
	799: "eMsgID",
}
var AdventureGetDataS2C_MsgID_value = map[string]int32{
	"eMsgID": 799,
}

func (x AdventureGetDataS2C_MsgID) Enum() *AdventureGetDataS2C_MsgID {
	p := new(AdventureGetDataS2C_MsgID)
	*p = x
	return p
}
func (x AdventureGetDataS2C_MsgID) String() string {
	return proto.EnumName(AdventureGetDataS2C_MsgID_name, int32(x))
}
func (x *AdventureGetDataS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AdventureGetDataS2C_MsgID_value, data, "AdventureGetDataS2C_MsgID")
	if err != nil {
		return err
	}
	*x = AdventureGetDataS2C_MsgID(value)
	return nil
}
func (AdventureGetDataS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor2, []int{10, 0}
}

type AdventureDiffRefreshC2S_MsgID int32

const (
	AdventureDiffRefreshC2S_eMsgID AdventureDiffRefreshC2S_MsgID = 800
)

var AdventureDiffRefreshC2S_MsgID_name = map[int32]string{
	800: "eMsgID",
}
var AdventureDiffRefreshC2S_MsgID_value = map[string]int32{
	"eMsgID": 800,
}

func (x AdventureDiffRefreshC2S_MsgID) Enum() *AdventureDiffRefreshC2S_MsgID {
	p := new(AdventureDiffRefreshC2S_MsgID)
	*p = x
	return p
}
func (x AdventureDiffRefreshC2S_MsgID) String() string {
	return proto.EnumName(AdventureDiffRefreshC2S_MsgID_name, int32(x))
}
func (x *AdventureDiffRefreshC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AdventureDiffRefreshC2S_MsgID_value, data, "AdventureDiffRefreshC2S_MsgID")
	if err != nil {
		return err
	}
	*x = AdventureDiffRefreshC2S_MsgID(value)
	return nil
}
func (AdventureDiffRefreshC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor2, []int{11, 0}
}

type AdventureDiffRefreshS2C_MsgID int32

const (
	AdventureDiffRefreshS2C_eMsgID AdventureDiffRefreshS2C_MsgID = 800
)

var AdventureDiffRefreshS2C_MsgID_name = map[int32]string{
	800: "eMsgID",
}
var AdventureDiffRefreshS2C_MsgID_value = map[string]int32{
	"eMsgID": 800,
}

func (x AdventureDiffRefreshS2C_MsgID) Enum() *AdventureDiffRefreshS2C_MsgID {
	p := new(AdventureDiffRefreshS2C_MsgID)
	*p = x
	return p
}
func (x AdventureDiffRefreshS2C_MsgID) String() string {
	return proto.EnumName(AdventureDiffRefreshS2C_MsgID_name, int32(x))
}
func (x *AdventureDiffRefreshS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AdventureDiffRefreshS2C_MsgID_value, data, "AdventureDiffRefreshS2C_MsgID")
	if err != nil {
		return err
	}
	*x = AdventureDiffRefreshS2C_MsgID(value)
	return nil
}
func (AdventureDiffRefreshS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor2, []int{12, 0}
}

type AdventureResetDiffS2C_MsgID int32

const (
	AdventureResetDiffS2C_eMsgID AdventureResetDiffS2C_MsgID = 801
)

var AdventureResetDiffS2C_MsgID_name = map[int32]string{
	801: "eMsgID",
}
var AdventureResetDiffS2C_MsgID_value = map[string]int32{
	"eMsgID": 801,
}

func (x AdventureResetDiffS2C_MsgID) Enum() *AdventureResetDiffS2C_MsgID {
	p := new(AdventureResetDiffS2C_MsgID)
	*p = x
	return p
}
func (x AdventureResetDiffS2C_MsgID) String() string {
	return proto.EnumName(AdventureResetDiffS2C_MsgID_name, int32(x))
}
func (x *AdventureResetDiffS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AdventureResetDiffS2C_MsgID_value, data, "AdventureResetDiffS2C_MsgID")
	if err != nil {
		return err
	}
	*x = AdventureResetDiffS2C_MsgID(value)
	return nil
}
func (AdventureResetDiffS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor2, []int{13, 0}
}

type AdventureSetLevelC2S_MsgID int32

const (
	AdventureSetLevelC2S_eMsgID AdventureSetLevelC2S_MsgID = 802
)

var AdventureSetLevelC2S_MsgID_name = map[int32]string{
	802: "eMsgID",
}
var AdventureSetLevelC2S_MsgID_value = map[string]int32{
	"eMsgID": 802,
}

func (x AdventureSetLevelC2S_MsgID) Enum() *AdventureSetLevelC2S_MsgID {
	p := new(AdventureSetLevelC2S_MsgID)
	*p = x
	return p
}
func (x AdventureSetLevelC2S_MsgID) String() string {
	return proto.EnumName(AdventureSetLevelC2S_MsgID_name, int32(x))
}
func (x *AdventureSetLevelC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AdventureSetLevelC2S_MsgID_value, data, "AdventureSetLevelC2S_MsgID")
	if err != nil {
		return err
	}
	*x = AdventureSetLevelC2S_MsgID(value)
	return nil
}
func (AdventureSetLevelC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor2, []int{14, 0}
}

type AdventureSetLevelS2C_MsgID int32

const (
	AdventureSetLevelS2C_eMsgID AdventureSetLevelS2C_MsgID = 802
)

var AdventureSetLevelS2C_MsgID_name = map[int32]string{
	802: "eMsgID",
}
var AdventureSetLevelS2C_MsgID_value = map[string]int32{
	"eMsgID": 802,
}

func (x AdventureSetLevelS2C_MsgID) Enum() *AdventureSetLevelS2C_MsgID {
	p := new(AdventureSetLevelS2C_MsgID)
	*p = x
	return p
}
func (x AdventureSetLevelS2C_MsgID) String() string {
	return proto.EnumName(AdventureSetLevelS2C_MsgID_name, int32(x))
}
func (x *AdventureSetLevelS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AdventureSetLevelS2C_MsgID_value, data, "AdventureSetLevelS2C_MsgID")
	if err != nil {
		return err
	}
	*x = AdventureSetLevelS2C_MsgID(value)
	return nil
}
func (AdventureSetLevelS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor2, []int{15, 0}
}

type AdventureEnterC2S_MsgID int32

const (
	AdventureEnterC2S_eMsgID AdventureEnterC2S_MsgID = 804
)

var AdventureEnterC2S_MsgID_name = map[int32]string{
	804: "eMsgID",
}
var AdventureEnterC2S_MsgID_value = map[string]int32{
	"eMsgID": 804,
}

func (x AdventureEnterC2S_MsgID) Enum() *AdventureEnterC2S_MsgID {
	p := new(AdventureEnterC2S_MsgID)
	*p = x
	return p
}
func (x AdventureEnterC2S_MsgID) String() string {
	return proto.EnumName(AdventureEnterC2S_MsgID_name, int32(x))
}
func (x *AdventureEnterC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AdventureEnterC2S_MsgID_value, data, "AdventureEnterC2S_MsgID")
	if err != nil {
		return err
	}
	*x = AdventureEnterC2S_MsgID(value)
	return nil
}
func (AdventureEnterC2S_MsgID) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{17, 0} }

type AdventureEnterS2C_MsgID int32

const (
	AdventureEnterS2C_eMsgID AdventureEnterS2C_MsgID = 804
)

var AdventureEnterS2C_MsgID_name = map[int32]string{
	804: "eMsgID",
}
var AdventureEnterS2C_MsgID_value = map[string]int32{
	"eMsgID": 804,
}

func (x AdventureEnterS2C_MsgID) Enum() *AdventureEnterS2C_MsgID {
	p := new(AdventureEnterS2C_MsgID)
	*p = x
	return p
}
func (x AdventureEnterS2C_MsgID) String() string {
	return proto.EnumName(AdventureEnterS2C_MsgID_name, int32(x))
}
func (x *AdventureEnterS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AdventureEnterS2C_MsgID_value, data, "AdventureEnterS2C_MsgID")
	if err != nil {
		return err
	}
	*x = AdventureEnterS2C_MsgID(value)
	return nil
}
func (AdventureEnterS2C_MsgID) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{18, 0} }

type AdventureMoveC2S_MsgID int32

const (
	AdventureMoveC2S_eMsgID AdventureMoveC2S_MsgID = 805
)

var AdventureMoveC2S_MsgID_name = map[int32]string{
	805: "eMsgID",
}
var AdventureMoveC2S_MsgID_value = map[string]int32{
	"eMsgID": 805,
}

func (x AdventureMoveC2S_MsgID) Enum() *AdventureMoveC2S_MsgID {
	p := new(AdventureMoveC2S_MsgID)
	*p = x
	return p
}
func (x AdventureMoveC2S_MsgID) String() string {
	return proto.EnumName(AdventureMoveC2S_MsgID_name, int32(x))
}
func (x *AdventureMoveC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AdventureMoveC2S_MsgID_value, data, "AdventureMoveC2S_MsgID")
	if err != nil {
		return err
	}
	*x = AdventureMoveC2S_MsgID(value)
	return nil
}
func (AdventureMoveC2S_MsgID) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{19, 0} }

type AdventureMoveS2C_MsgID int32

const (
	AdventureMoveS2C_eMsgID AdventureMoveS2C_MsgID = 805
)

var AdventureMoveS2C_MsgID_name = map[int32]string{
	805: "eMsgID",
}
var AdventureMoveS2C_MsgID_value = map[string]int32{
	"eMsgID": 805,
}

func (x AdventureMoveS2C_MsgID) Enum() *AdventureMoveS2C_MsgID {
	p := new(AdventureMoveS2C_MsgID)
	*p = x
	return p
}
func (x AdventureMoveS2C_MsgID) String() string {
	return proto.EnumName(AdventureMoveS2C_MsgID_name, int32(x))
}
func (x *AdventureMoveS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AdventureMoveS2C_MsgID_value, data, "AdventureMoveS2C_MsgID")
	if err != nil {
		return err
	}
	*x = AdventureMoveS2C_MsgID(value)
	return nil
}
func (AdventureMoveS2C_MsgID) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{20, 0} }

type AdventurePlayC2S_MsgID int32

const (
	AdventurePlayC2S_eMsgID AdventurePlayC2S_MsgID = 806
)

var AdventurePlayC2S_MsgID_name = map[int32]string{
	806: "eMsgID",
}
var AdventurePlayC2S_MsgID_value = map[string]int32{
	"eMsgID": 806,
}

func (x AdventurePlayC2S_MsgID) Enum() *AdventurePlayC2S_MsgID {
	p := new(AdventurePlayC2S_MsgID)
	*p = x
	return p
}
func (x AdventurePlayC2S_MsgID) String() string {
	return proto.EnumName(AdventurePlayC2S_MsgID_name, int32(x))
}
func (x *AdventurePlayC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AdventurePlayC2S_MsgID_value, data, "AdventurePlayC2S_MsgID")
	if err != nil {
		return err
	}
	*x = AdventurePlayC2S_MsgID(value)
	return nil
}
func (AdventurePlayC2S_MsgID) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{21, 0} }

type AdventurePlayS2C_MsgID int32

const (
	AdventurePlayS2C_eMsgID AdventurePlayS2C_MsgID = 806
)

var AdventurePlayS2C_MsgID_name = map[int32]string{
	806: "eMsgID",
}
var AdventurePlayS2C_MsgID_value = map[string]int32{
	"eMsgID": 806,
}

func (x AdventurePlayS2C_MsgID) Enum() *AdventurePlayS2C_MsgID {
	p := new(AdventurePlayS2C_MsgID)
	*p = x
	return p
}
func (x AdventurePlayS2C_MsgID) String() string {
	return proto.EnumName(AdventurePlayS2C_MsgID_name, int32(x))
}
func (x *AdventurePlayS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AdventurePlayS2C_MsgID_value, data, "AdventurePlayS2C_MsgID")
	if err != nil {
		return err
	}
	*x = AdventurePlayS2C_MsgID(value)
	return nil
}
func (AdventurePlayS2C_MsgID) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{22, 0} }

type AdventurePickUpItemS2C_MsgID int32

const (
	AdventurePickUpItemS2C_eMsgID AdventurePickUpItemS2C_MsgID = 807
)

var AdventurePickUpItemS2C_MsgID_name = map[int32]string{
	807: "eMsgID",
}
var AdventurePickUpItemS2C_MsgID_value = map[string]int32{
	"eMsgID": 807,
}

func (x AdventurePickUpItemS2C_MsgID) Enum() *AdventurePickUpItemS2C_MsgID {
	p := new(AdventurePickUpItemS2C_MsgID)
	*p = x
	return p
}
func (x AdventurePickUpItemS2C_MsgID) String() string {
	return proto.EnumName(AdventurePickUpItemS2C_MsgID_name, int32(x))
}
func (x *AdventurePickUpItemS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AdventurePickUpItemS2C_MsgID_value, data, "AdventurePickUpItemS2C_MsgID")
	if err != nil {
		return err
	}
	*x = AdventurePickUpItemS2C_MsgID(value)
	return nil
}
func (AdventurePickUpItemS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor2, []int{24, 0}
}

type AdventureSettlementC2S_MsgID int32

const (
	AdventureSettlementC2S_eMsgID AdventureSettlementC2S_MsgID = 808
)

var AdventureSettlementC2S_MsgID_name = map[int32]string{
	808: "eMsgID",
}
var AdventureSettlementC2S_MsgID_value = map[string]int32{
	"eMsgID": 808,
}

func (x AdventureSettlementC2S_MsgID) Enum() *AdventureSettlementC2S_MsgID {
	p := new(AdventureSettlementC2S_MsgID)
	*p = x
	return p
}
func (x AdventureSettlementC2S_MsgID) String() string {
	return proto.EnumName(AdventureSettlementC2S_MsgID_name, int32(x))
}
func (x *AdventureSettlementC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AdventureSettlementC2S_MsgID_value, data, "AdventureSettlementC2S_MsgID")
	if err != nil {
		return err
	}
	*x = AdventureSettlementC2S_MsgID(value)
	return nil
}
func (AdventureSettlementC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor2, []int{27, 0}
}

type AdventureSettlementS2C_MsgID int32

const (
	AdventureSettlementS2C_eMsgID AdventureSettlementS2C_MsgID = 808
)

var AdventureSettlementS2C_MsgID_name = map[int32]string{
	808: "eMsgID",
}
var AdventureSettlementS2C_MsgID_value = map[string]int32{
	"eMsgID": 808,
}

func (x AdventureSettlementS2C_MsgID) Enum() *AdventureSettlementS2C_MsgID {
	p := new(AdventureSettlementS2C_MsgID)
	*p = x
	return p
}
func (x AdventureSettlementS2C_MsgID) String() string {
	return proto.EnumName(AdventureSettlementS2C_MsgID_name, int32(x))
}
func (x *AdventureSettlementS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AdventureSettlementS2C_MsgID_value, data, "AdventureSettlementS2C_MsgID")
	if err != nil {
		return err
	}
	*x = AdventureSettlementS2C_MsgID(value)
	return nil
}
func (AdventureSettlementS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor2, []int{28, 0}
}

type AdventureNotifyInfoS2C_MsgID int32

const (
	AdventureNotifyInfoS2C_eMsgID AdventureNotifyInfoS2C_MsgID = 809
)

var AdventureNotifyInfoS2C_MsgID_name = map[int32]string{
	809: "eMsgID",
}
var AdventureNotifyInfoS2C_MsgID_value = map[string]int32{
	"eMsgID": 809,
}

func (x AdventureNotifyInfoS2C_MsgID) Enum() *AdventureNotifyInfoS2C_MsgID {
	p := new(AdventureNotifyInfoS2C_MsgID)
	*p = x
	return p
}
func (x AdventureNotifyInfoS2C_MsgID) String() string {
	return proto.EnumName(AdventureNotifyInfoS2C_MsgID_name, int32(x))
}
func (x *AdventureNotifyInfoS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AdventureNotifyInfoS2C_MsgID_value, data, "AdventureNotifyInfoS2C_MsgID")
	if err != nil {
		return err
	}
	*x = AdventureNotifyInfoS2C_MsgID(value)
	return nil
}
func (AdventureNotifyInfoS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor2, []int{29, 0}
}

type AdventureNotifyPlaceS2C_MsgID int32

const (
	AdventureNotifyPlaceS2C_eMsgID AdventureNotifyPlaceS2C_MsgID = 810
)

var AdventureNotifyPlaceS2C_MsgID_name = map[int32]string{
	810: "eMsgID",
}
var AdventureNotifyPlaceS2C_MsgID_value = map[string]int32{
	"eMsgID": 810,
}

func (x AdventureNotifyPlaceS2C_MsgID) Enum() *AdventureNotifyPlaceS2C_MsgID {
	p := new(AdventureNotifyPlaceS2C_MsgID)
	*p = x
	return p
}
func (x AdventureNotifyPlaceS2C_MsgID) String() string {
	return proto.EnumName(AdventureNotifyPlaceS2C_MsgID_name, int32(x))
}
func (x *AdventureNotifyPlaceS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AdventureNotifyPlaceS2C_MsgID_value, data, "AdventureNotifyPlaceS2C_MsgID")
	if err != nil {
		return err
	}
	*x = AdventureNotifyPlaceS2C_MsgID(value)
	return nil
}
func (AdventureNotifyPlaceS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor2, []int{30, 0}
}

type AdventureFightResS2C_MsgID int32

const (
	AdventureFightResS2C_eMsgID AdventureFightResS2C_MsgID = 811
)

var AdventureFightResS2C_MsgID_name = map[int32]string{
	811: "eMsgID",
}
var AdventureFightResS2C_MsgID_value = map[string]int32{
	"eMsgID": 811,
}

func (x AdventureFightResS2C_MsgID) Enum() *AdventureFightResS2C_MsgID {
	p := new(AdventureFightResS2C_MsgID)
	*p = x
	return p
}
func (x AdventureFightResS2C_MsgID) String() string {
	return proto.EnumName(AdventureFightResS2C_MsgID_name, int32(x))
}
func (x *AdventureFightResS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AdventureFightResS2C_MsgID_value, data, "AdventureFightResS2C_MsgID")
	if err != nil {
		return err
	}
	*x = AdventureFightResS2C_MsgID(value)
	return nil
}
func (AdventureFightResS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor2, []int{32, 0}
}

type AdventureGetFansBoxC2S_MsgID int32

const (
	AdventureGetFansBoxC2S_eMsgID AdventureGetFansBoxC2S_MsgID = 814
)

var AdventureGetFansBoxC2S_MsgID_name = map[int32]string{
	814: "eMsgID",
}
var AdventureGetFansBoxC2S_MsgID_value = map[string]int32{
	"eMsgID": 814,
}

func (x AdventureGetFansBoxC2S_MsgID) Enum() *AdventureGetFansBoxC2S_MsgID {
	p := new(AdventureGetFansBoxC2S_MsgID)
	*p = x
	return p
}
func (x AdventureGetFansBoxC2S_MsgID) String() string {
	return proto.EnumName(AdventureGetFansBoxC2S_MsgID_name, int32(x))
}
func (x *AdventureGetFansBoxC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AdventureGetFansBoxC2S_MsgID_value, data, "AdventureGetFansBoxC2S_MsgID")
	if err != nil {
		return err
	}
	*x = AdventureGetFansBoxC2S_MsgID(value)
	return nil
}
func (AdventureGetFansBoxC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor2, []int{34, 0}
}

type AdventureGetFansBoxS2C_MsgID int32

const (
	AdventureGetFansBoxS2C_eMsgID AdventureGetFansBoxS2C_MsgID = 814
)

var AdventureGetFansBoxS2C_MsgID_name = map[int32]string{
	814: "eMsgID",
}
var AdventureGetFansBoxS2C_MsgID_value = map[string]int32{
	"eMsgID": 814,
}

func (x AdventureGetFansBoxS2C_MsgID) Enum() *AdventureGetFansBoxS2C_MsgID {
	p := new(AdventureGetFansBoxS2C_MsgID)
	*p = x
	return p
}
func (x AdventureGetFansBoxS2C_MsgID) String() string {
	return proto.EnumName(AdventureGetFansBoxS2C_MsgID_name, int32(x))
}
func (x *AdventureGetFansBoxS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AdventureGetFansBoxS2C_MsgID_value, data, "AdventureGetFansBoxS2C_MsgID")
	if err != nil {
		return err
	}
	*x = AdventureGetFansBoxS2C_MsgID(value)
	return nil
}
func (AdventureGetFansBoxS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor2, []int{35, 0}
}

type NotifyFormTeamInfoS2C_MsgID int32

const (
	NotifyFormTeamInfoS2C_eMsgID NotifyFormTeamInfoS2C_MsgID = 64818
)

var NotifyFormTeamInfoS2C_MsgID_name = map[int32]string{
	64818: "eMsgID",
}
var NotifyFormTeamInfoS2C_MsgID_value = map[string]int32{
	"eMsgID": 64818,
}

func (x NotifyFormTeamInfoS2C_MsgID) Enum() *NotifyFormTeamInfoS2C_MsgID {
	p := new(NotifyFormTeamInfoS2C_MsgID)
	*p = x
	return p
}
func (x NotifyFormTeamInfoS2C_MsgID) String() string {
	return proto.EnumName(NotifyFormTeamInfoS2C_MsgID_name, int32(x))
}
func (x *NotifyFormTeamInfoS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(NotifyFormTeamInfoS2C_MsgID_value, data, "NotifyFormTeamInfoS2C_MsgID")
	if err != nil {
		return err
	}
	*x = NotifyFormTeamInfoS2C_MsgID(value)
	return nil
}
func (NotifyFormTeamInfoS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor2, []int{36, 0}
}

type NotifyPassChapterS2C_MsgID int32

const (
	NotifyPassChapterS2C_eMsgID NotifyPassChapterS2C_MsgID = 64819
)

var NotifyPassChapterS2C_MsgID_name = map[int32]string{
	64819: "eMsgID",
}
var NotifyPassChapterS2C_MsgID_value = map[string]int32{
	"eMsgID": 64819,
}

func (x NotifyPassChapterS2C_MsgID) Enum() *NotifyPassChapterS2C_MsgID {
	p := new(NotifyPassChapterS2C_MsgID)
	*p = x
	return p
}
func (x NotifyPassChapterS2C_MsgID) String() string {
	return proto.EnumName(NotifyPassChapterS2C_MsgID_name, int32(x))
}
func (x *NotifyPassChapterS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(NotifyPassChapterS2C_MsgID_value, data, "NotifyPassChapterS2C_MsgID")
	if err != nil {
		return err
	}
	*x = NotifyPassChapterS2C_MsgID(value)
	return nil
}
func (NotifyPassChapterS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor2, []int{37, 0}
}

type AdventureOnlineStatusC2S_MsgID int32

const (
	AdventureOnlineStatusC2S_eMsgID AdventureOnlineStatusC2S_MsgID = 815
)

var AdventureOnlineStatusC2S_MsgID_name = map[int32]string{
	815: "eMsgID",
}
var AdventureOnlineStatusC2S_MsgID_value = map[string]int32{
	"eMsgID": 815,
}

func (x AdventureOnlineStatusC2S_MsgID) Enum() *AdventureOnlineStatusC2S_MsgID {
	p := new(AdventureOnlineStatusC2S_MsgID)
	*p = x
	return p
}
func (x AdventureOnlineStatusC2S_MsgID) String() string {
	return proto.EnumName(AdventureOnlineStatusC2S_MsgID_name, int32(x))
}
func (x *AdventureOnlineStatusC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AdventureOnlineStatusC2S_MsgID_value, data, "AdventureOnlineStatusC2S_MsgID")
	if err != nil {
		return err
	}
	*x = AdventureOnlineStatusC2S_MsgID(value)
	return nil
}
func (AdventureOnlineStatusC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor2, []int{38, 0}
}

type NotifyAdventureOnLineStatusS2C_MsgID int32

const (
	NotifyAdventureOnLineStatusS2C_eMsgID NotifyAdventureOnLineStatusS2C_MsgID = 815
)

var NotifyAdventureOnLineStatusS2C_MsgID_name = map[int32]string{
	815: "eMsgID",
}
var NotifyAdventureOnLineStatusS2C_MsgID_value = map[string]int32{
	"eMsgID": 815,
}

func (x NotifyAdventureOnLineStatusS2C_MsgID) Enum() *NotifyAdventureOnLineStatusS2C_MsgID {
	p := new(NotifyAdventureOnLineStatusS2C_MsgID)
	*p = x
	return p
}
func (x NotifyAdventureOnLineStatusS2C_MsgID) String() string {
	return proto.EnumName(NotifyAdventureOnLineStatusS2C_MsgID_name, int32(x))
}
func (x *NotifyAdventureOnLineStatusS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(NotifyAdventureOnLineStatusS2C_MsgID_value, data, "NotifyAdventureOnLineStatusS2C_MsgID")
	if err != nil {
		return err
	}
	*x = NotifyAdventureOnLineStatusS2C_MsgID(value)
	return nil
}
func (NotifyAdventureOnLineStatusS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor2, []int{39, 0}
}

type NotifyInviteInfoS2C_MsgID int32

const (
	NotifyInviteInfoS2C_eMsgID NotifyInviteInfoS2C_MsgID = 817
)

var NotifyInviteInfoS2C_MsgID_name = map[int32]string{
	817: "eMsgID",
}
var NotifyInviteInfoS2C_MsgID_value = map[string]int32{
	"eMsgID": 817,
}

func (x NotifyInviteInfoS2C_MsgID) Enum() *NotifyInviteInfoS2C_MsgID {
	p := new(NotifyInviteInfoS2C_MsgID)
	*p = x
	return p
}
func (x NotifyInviteInfoS2C_MsgID) String() string {
	return proto.EnumName(NotifyInviteInfoS2C_MsgID_name, int32(x))
}
func (x *NotifyInviteInfoS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(NotifyInviteInfoS2C_MsgID_value, data, "NotifyInviteInfoS2C_MsgID")
	if err != nil {
		return err
	}
	*x = NotifyInviteInfoS2C_MsgID(value)
	return nil
}
func (NotifyInviteInfoS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor2, []int{40, 0}
}

type InviteSupplayC2S_MsgID int32

const (
	InviteSupplayC2S_eMsgID InviteSupplayC2S_MsgID = 818
)

var InviteSupplayC2S_MsgID_name = map[int32]string{
	818: "eMsgID",
}
var InviteSupplayC2S_MsgID_value = map[string]int32{
	"eMsgID": 818,
}

func (x InviteSupplayC2S_MsgID) Enum() *InviteSupplayC2S_MsgID {
	p := new(InviteSupplayC2S_MsgID)
	*p = x
	return p
}
func (x InviteSupplayC2S_MsgID) String() string {
	return proto.EnumName(InviteSupplayC2S_MsgID_name, int32(x))
}
func (x *InviteSupplayC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(InviteSupplayC2S_MsgID_value, data, "InviteSupplayC2S_MsgID")
	if err != nil {
		return err
	}
	*x = InviteSupplayC2S_MsgID(value)
	return nil
}
func (InviteSupplayC2S_MsgID) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{41, 0} }

type InviteSupplayS2C_MsgID int32

const (
	InviteSupplayS2C_eMsgID InviteSupplayS2C_MsgID = 818
)

var InviteSupplayS2C_MsgID_name = map[int32]string{
	818: "eMsgID",
}
var InviteSupplayS2C_MsgID_value = map[string]int32{
	"eMsgID": 818,
}

func (x InviteSupplayS2C_MsgID) Enum() *InviteSupplayS2C_MsgID {
	p := new(InviteSupplayS2C_MsgID)
	*p = x
	return p
}
func (x InviteSupplayS2C_MsgID) String() string {
	return proto.EnumName(InviteSupplayS2C_MsgID_name, int32(x))
}
func (x *InviteSupplayS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(InviteSupplayS2C_MsgID_value, data, "InviteSupplayS2C_MsgID")
	if err != nil {
		return err
	}
	*x = InviteSupplayS2C_MsgID(value)
	return nil
}
func (InviteSupplayS2C_MsgID) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{42, 0} }

type UseLinePowerBoxC2S_MsgID int32

const (
	UseLinePowerBoxC2S_eMsgID UseLinePowerBoxC2S_MsgID = 821
)

var UseLinePowerBoxC2S_MsgID_name = map[int32]string{
	821: "eMsgID",
}
var UseLinePowerBoxC2S_MsgID_value = map[string]int32{
	"eMsgID": 821,
}

func (x UseLinePowerBoxC2S_MsgID) Enum() *UseLinePowerBoxC2S_MsgID {
	p := new(UseLinePowerBoxC2S_MsgID)
	*p = x
	return p
}
func (x UseLinePowerBoxC2S_MsgID) String() string {
	return proto.EnumName(UseLinePowerBoxC2S_MsgID_name, int32(x))
}
func (x *UseLinePowerBoxC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(UseLinePowerBoxC2S_MsgID_value, data, "UseLinePowerBoxC2S_MsgID")
	if err != nil {
		return err
	}
	*x = UseLinePowerBoxC2S_MsgID(value)
	return nil
}
func (UseLinePowerBoxC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor2, []int{43, 0}
}

type UseLinePowerBoxS2C_MsgID int32

const (
	UseLinePowerBoxS2C_eMsgID UseLinePowerBoxS2C_MsgID = 821
)

var UseLinePowerBoxS2C_MsgID_name = map[int32]string{
	821: "eMsgID",
}
var UseLinePowerBoxS2C_MsgID_value = map[string]int32{
	"eMsgID": 821,
}

func (x UseLinePowerBoxS2C_MsgID) Enum() *UseLinePowerBoxS2C_MsgID {
	p := new(UseLinePowerBoxS2C_MsgID)
	*p = x
	return p
}
func (x UseLinePowerBoxS2C_MsgID) String() string {
	return proto.EnumName(UseLinePowerBoxS2C_MsgID_name, int32(x))
}
func (x *UseLinePowerBoxS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(UseLinePowerBoxS2C_MsgID_value, data, "UseLinePowerBoxS2C_MsgID")
	if err != nil {
		return err
	}
	*x = UseLinePowerBoxS2C_MsgID(value)
	return nil
}
func (UseLinePowerBoxS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor2, []int{44, 0}
}

type AdventureMapDiff struct {
	// 等级索引
	Lv *int32 `protobuf:"varint,1,opt,name=lv" json:"lv,omitempty"`
	// 难度
	Diff *int32 `protobuf:"varint,2,opt,name=diff" json:"diff,omitempty"`
	// 是否通关
	Pass *bool `protobuf:"varint,3,opt,name=pass" json:"pass,omitempty"`
	// 通关次数
	FinishCount      *int32 `protobuf:"varint,4,opt,name=finishCount" json:"finishCount,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *AdventureMapDiff) Reset()                    { *m = AdventureMapDiff{} }
func (m *AdventureMapDiff) String() string            { return proto.CompactTextString(m) }
func (*AdventureMapDiff) ProtoMessage()               {}
func (*AdventureMapDiff) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *AdventureMapDiff) GetLv() int32 {
	if m != nil && m.Lv != nil {
		return *m.Lv
	}
	return 0
}

func (m *AdventureMapDiff) GetDiff() int32 {
	if m != nil && m.Diff != nil {
		return *m.Diff
	}
	return 0
}

func (m *AdventureMapDiff) GetPass() bool {
	if m != nil && m.Pass != nil {
		return *m.Pass
	}
	return false
}

func (m *AdventureMapDiff) GetFinishCount() int32 {
	if m != nil && m.FinishCount != nil {
		return *m.FinishCount
	}
	return 0
}

// 地图数据
type AdventureMapBase struct {
	// 地图id
	MapId *int32 `protobuf:"varint,1,opt,name=mapId" json:"mapId,omitempty"`
	// 地图难度
	Difficult        []*AdventureMapDiff `protobuf:"bytes,2,rep,name=difficult" json:"difficult,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *AdventureMapBase) Reset()                    { *m = AdventureMapBase{} }
func (m *AdventureMapBase) String() string            { return proto.CompactTextString(m) }
func (*AdventureMapBase) ProtoMessage()               {}
func (*AdventureMapBase) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *AdventureMapBase) GetMapId() int32 {
	if m != nil && m.MapId != nil {
		return *m.MapId
	}
	return 0
}

func (m *AdventureMapBase) GetDifficult() []*AdventureMapDiff {
	if m != nil {
		return m.Difficult
	}
	return nil
}

// 玩家地图数据列表
type AdventureMap struct {
	// 球队等级
	Level *int32 `protobuf:"varint,1,opt,name=level" json:"level,omitempty"`
	// 地图列表
	Bases            []*AdventureMapBase `protobuf:"bytes,2,rep,name=bases" json:"bases,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *AdventureMap) Reset()                    { *m = AdventureMap{} }
func (m *AdventureMap) String() string            { return proto.CompactTextString(m) }
func (*AdventureMap) ProtoMessage()               {}
func (*AdventureMap) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *AdventureMap) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *AdventureMap) GetBases() []*AdventureMapBase {
	if m != nil {
		return m.Bases
	}
	return nil
}

// 比赛跳过状态
type AdventureSkip struct {
	// 是否跳过前3节标记
	IsSkip3Quarter *bool `protobuf:"varint,1,opt,name=isSkip3Quarter" json:"isSkip3Quarter,omitempty"`
	// 是否跳过比赛标记
	IsSkipFight      *bool  `protobuf:"varint,2,opt,name=isSkipFight" json:"isSkipFight,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *AdventureSkip) Reset()                    { *m = AdventureSkip{} }
func (m *AdventureSkip) String() string            { return proto.CompactTextString(m) }
func (*AdventureSkip) ProtoMessage()               {}
func (*AdventureSkip) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

func (m *AdventureSkip) GetIsSkip3Quarter() bool {
	if m != nil && m.IsSkip3Quarter != nil {
		return *m.IsSkip3Quarter
	}
	return false
}

func (m *AdventureSkip) GetIsSkipFight() bool {
	if m != nil && m.IsSkipFight != nil {
		return *m.IsSkipFight
	}
	return false
}

type InviteBaseInfo struct {
	// 索引id
	Index *int32 `protobuf:"varint,1,opt,name=index" json:"index,omitempty"`
	// 配置id
	CfgId *int32 `protobuf:"varint,2,opt,name=cfgId" json:"cfgId,omitempty"`
	// 结束时间
	EndTime *int64 `protobuf:"varint,3,opt,name=endTime" json:"endTime,omitempty"`
	// 补给站补给次数
	SupplyCnt        *int32 `protobuf:"varint,4,opt,name=supplyCnt" json:"supplyCnt,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *InviteBaseInfo) Reset()                    { *m = InviteBaseInfo{} }
func (m *InviteBaseInfo) String() string            { return proto.CompactTextString(m) }
func (*InviteBaseInfo) ProtoMessage()               {}
func (*InviteBaseInfo) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4} }

func (m *InviteBaseInfo) GetIndex() int32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *InviteBaseInfo) GetCfgId() int32 {
	if m != nil && m.CfgId != nil {
		return *m.CfgId
	}
	return 0
}

func (m *InviteBaseInfo) GetEndTime() int64 {
	if m != nil && m.EndTime != nil {
		return *m.EndTime
	}
	return 0
}

func (m *InviteBaseInfo) GetSupplyCnt() int32 {
	if m != nil && m.SupplyCnt != nil {
		return *m.SupplyCnt
	}
	return 0
}

// 商业邀请赛数据
type InviteInfo struct {
	// 比赛数据
	BaseInfos []*InviteBaseInfo `protobuf:"bytes,1,rep,name=baseInfos" json:"baseInfos,omitempty"`
	// 每日已邀请次数
	DayInviteCnt *int32 `protobuf:"varint,2,opt,name=dayInviteCnt" json:"dayInviteCnt,omitempty"`
	// 下次刷新时间
	NextRefTime      *int64 `protobuf:"varint,3,opt,name=nextRefTime" json:"nextRefTime,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *InviteInfo) Reset()                    { *m = InviteInfo{} }
func (m *InviteInfo) String() string            { return proto.CompactTextString(m) }
func (*InviteInfo) ProtoMessage()               {}
func (*InviteInfo) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{5} }

func (m *InviteInfo) GetBaseInfos() []*InviteBaseInfo {
	if m != nil {
		return m.BaseInfos
	}
	return nil
}

func (m *InviteInfo) GetDayInviteCnt() int32 {
	if m != nil && m.DayInviteCnt != nil {
		return *m.DayInviteCnt
	}
	return 0
}

func (m *InviteInfo) GetNextRefTime() int64 {
	if m != nil && m.NextRefTime != nil {
		return *m.NextRefTime
	}
	return 0
}

// 关卡开发情况
type AdventureChapterInfo struct {
	// 关卡位置
	Position *int32 `protobuf:"varint,1,opt,name=position" json:"position,omitempty"`
	// status 0.未被挑战 1.挑战中
	Status *int32 `protobuf:"varint,2,opt,name=status" json:"status,omitempty"`
	// 已获得的粉丝值
	Fans *int32 `protobuf:"varint,3,opt,name=fans" json:"fans,omitempty"`
	// 全额粉丝值
	FillFans *int32 `protobuf:"varint,4,opt,name=fillFans" json:"fillFans,omitempty"`
	// 开发次数(挖矿专用)
	Count *int32 `protobuf:"varint,5,opt,name=count" json:"count,omitempty"`
	// 可开发次数（挖矿专用）
	FillCount *int32 `protobuf:"varint,6,opt,name=fillCount" json:"fillCount,omitempty"`
	// 是否通关
	IsPass *bool `protobuf:"varint,7,opt,name=isPass" json:"isPass,omitempty"`
	// npc战斗力(-1为非战斗关卡)
	NpcBattle *int32 `protobuf:"varint,8,opt,name=npcBattle" json:"npcBattle,omitempty"`
	// 当前关卡挑战中的gid
	Gid              *int32 `protobuf:"varint,9,opt,name=gid" json:"gid,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *AdventureChapterInfo) Reset()                    { *m = AdventureChapterInfo{} }
func (m *AdventureChapterInfo) String() string            { return proto.CompactTextString(m) }
func (*AdventureChapterInfo) ProtoMessage()               {}
func (*AdventureChapterInfo) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{6} }

func (m *AdventureChapterInfo) GetPosition() int32 {
	if m != nil && m.Position != nil {
		return *m.Position
	}
	return 0
}

func (m *AdventureChapterInfo) GetStatus() int32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

func (m *AdventureChapterInfo) GetFans() int32 {
	if m != nil && m.Fans != nil {
		return *m.Fans
	}
	return 0
}

func (m *AdventureChapterInfo) GetFillFans() int32 {
	if m != nil && m.FillFans != nil {
		return *m.FillFans
	}
	return 0
}

func (m *AdventureChapterInfo) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func (m *AdventureChapterInfo) GetFillCount() int32 {
	if m != nil && m.FillCount != nil {
		return *m.FillCount
	}
	return 0
}

func (m *AdventureChapterInfo) GetIsPass() bool {
	if m != nil && m.IsPass != nil {
		return *m.IsPass
	}
	return false
}

func (m *AdventureChapterInfo) GetNpcBattle() int32 {
	if m != nil && m.NpcBattle != nil {
		return *m.NpcBattle
	}
	return 0
}

func (m *AdventureChapterInfo) GetGid() int32 {
	if m != nil && m.Gid != nil {
		return *m.Gid
	}
	return 0
}

// 当前挑战副本的个人数据
type AdventurePersonChallenge struct {
	// 个人id
	Gid *int32 `protobuf:"varint,1,opt,name=gid" json:"gid,omitempty"`
	// 出生地(1,2,3)
	Born *int32 `protobuf:"varint,2,opt,name=born" json:"born,omitempty"`
	// 当前位置
	Position *int32 `protobuf:"varint,3,opt,name=position" json:"position,omitempty"`
	// buff(全员+属性buff)
	Buffs []*TypeValueConfig `protobuf:"bytes,5,rep,name=buffs" json:"buffs,omitempty"`
	// 精力值
	Energy *ItemVaryConfig `protobuf:"bytes,6,opt,name=energy" json:"energy,omitempty"`
	// 当前位置已获得粉丝值
	Fans *int32 `protobuf:"varint,7,opt,name=fans" json:"fans,omitempty"`
	// 是否在线
	OnLine *bool `protobuf:"varint,8,opt,name=onLine" json:"onLine,omitempty"`
	// 挑战中
	Challenging      *bool  `protobuf:"varint,9,opt,name=challenging" json:"challenging,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *AdventurePersonChallenge) Reset()                    { *m = AdventurePersonChallenge{} }
func (m *AdventurePersonChallenge) String() string            { return proto.CompactTextString(m) }
func (*AdventurePersonChallenge) ProtoMessage()               {}
func (*AdventurePersonChallenge) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{7} }

func (m *AdventurePersonChallenge) GetGid() int32 {
	if m != nil && m.Gid != nil {
		return *m.Gid
	}
	return 0
}

func (m *AdventurePersonChallenge) GetBorn() int32 {
	if m != nil && m.Born != nil {
		return *m.Born
	}
	return 0
}

func (m *AdventurePersonChallenge) GetPosition() int32 {
	if m != nil && m.Position != nil {
		return *m.Position
	}
	return 0
}

func (m *AdventurePersonChallenge) GetBuffs() []*TypeValueConfig {
	if m != nil {
		return m.Buffs
	}
	return nil
}

func (m *AdventurePersonChallenge) GetEnergy() *ItemVaryConfig {
	if m != nil {
		return m.Energy
	}
	return nil
}

func (m *AdventurePersonChallenge) GetFans() int32 {
	if m != nil && m.Fans != nil {
		return *m.Fans
	}
	return 0
}

func (m *AdventurePersonChallenge) GetOnLine() bool {
	if m != nil && m.OnLine != nil {
		return *m.OnLine
	}
	return false
}

func (m *AdventurePersonChallenge) GetChallenging() bool {
	if m != nil && m.Challenging != nil {
		return *m.Challenging
	}
	return false
}

// 当前挑战副本的队伍数据
type AdventureTeamChallenge struct {
	// 章节id
	SectionId *int32 `protobuf:"varint,1,opt,name=sectionId" json:"sectionId,omitempty"`
	// 成员数据
	Persons []*AdventurePersonChallenge `protobuf:"bytes,2,rep,name=persons" json:"persons,omitempty"`
	// 关卡列表
	Chapters []*AdventureChapterInfo `protobuf:"bytes,3,rep,name=chapters" json:"chapters,omitempty"`
	// 结算奖池
	RewardPool []*ItemVaryConfig `protobuf:"bytes,4,rep,name=rewardPool" json:"rewardPool,omitempty"`
	// 粉丝值
	FansNumber *int32 `protobuf:"varint,5,opt,name=fansNumber" json:"fansNumber,omitempty"`
	// 已通关的关卡id
	Positions *int64 `protobuf:"varint,6,opt,name=positions" json:"positions,omitempty"`
	// 粉丝宝箱是否已领取
	Received *bool `protobuf:"varint,7,opt,name=received" json:"received,omitempty"`
	// 队伍id
	TeamId           *int64 `protobuf:"varint,8,opt,name=teamId" json:"teamId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *AdventureTeamChallenge) Reset()                    { *m = AdventureTeamChallenge{} }
func (m *AdventureTeamChallenge) String() string            { return proto.CompactTextString(m) }
func (*AdventureTeamChallenge) ProtoMessage()               {}
func (*AdventureTeamChallenge) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{8} }

func (m *AdventureTeamChallenge) GetSectionId() int32 {
	if m != nil && m.SectionId != nil {
		return *m.SectionId
	}
	return 0
}

func (m *AdventureTeamChallenge) GetPersons() []*AdventurePersonChallenge {
	if m != nil {
		return m.Persons
	}
	return nil
}

func (m *AdventureTeamChallenge) GetChapters() []*AdventureChapterInfo {
	if m != nil {
		return m.Chapters
	}
	return nil
}

func (m *AdventureTeamChallenge) GetRewardPool() []*ItemVaryConfig {
	if m != nil {
		return m.RewardPool
	}
	return nil
}

func (m *AdventureTeamChallenge) GetFansNumber() int32 {
	if m != nil && m.FansNumber != nil {
		return *m.FansNumber
	}
	return 0
}

func (m *AdventureTeamChallenge) GetPositions() int64 {
	if m != nil && m.Positions != nil {
		return *m.Positions
	}
	return 0
}

func (m *AdventureTeamChallenge) GetReceived() bool {
	if m != nil && m.Received != nil {
		return *m.Received
	}
	return false
}

func (m *AdventureTeamChallenge) GetTeamId() int64 {
	if m != nil && m.TeamId != nil {
		return *m.TeamId
	}
	return 0
}

// 难度刷新次数
type AdventureRefresh struct {
	// 每天已使用免费刷新次数
	FreeNumber *int32 `protobuf:"varint,1,opt,name=freeNumber" json:"freeNumber,omitempty"`
	// 免费次数刷新时间
	NextTimestamp *int64 `protobuf:"varint,2,opt,name=nextTimestamp" json:"nextTimestamp,omitempty"`
	// 使用货币刷新的次数
	CurrencyNumber *int32 `protobuf:"varint,3,opt,name=currencyNumber" json:"currencyNumber,omitempty"`
	// 每日挑战次数
	ChallengeNumber *int32 `protobuf:"varint,4,opt,name=challengeNumber" json:"challengeNumber,omitempty"`
	// 剩余挑战次数(最大值=订阅特权下最大累计次数-默认挑战次数)
	RemainChaNumber  *int32 `protobuf:"varint,5,opt,name=remainChaNumber" json:"remainChaNumber,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *AdventureRefresh) Reset()                    { *m = AdventureRefresh{} }
func (m *AdventureRefresh) String() string            { return proto.CompactTextString(m) }
func (*AdventureRefresh) ProtoMessage()               {}
func (*AdventureRefresh) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{9} }

func (m *AdventureRefresh) GetFreeNumber() int32 {
	if m != nil && m.FreeNumber != nil {
		return *m.FreeNumber
	}
	return 0
}

func (m *AdventureRefresh) GetNextTimestamp() int64 {
	if m != nil && m.NextTimestamp != nil {
		return *m.NextTimestamp
	}
	return 0
}

func (m *AdventureRefresh) GetCurrencyNumber() int32 {
	if m != nil && m.CurrencyNumber != nil {
		return *m.CurrencyNumber
	}
	return 0
}

func (m *AdventureRefresh) GetChallengeNumber() int32 {
	if m != nil && m.ChallengeNumber != nil {
		return *m.ChallengeNumber
	}
	return 0
}

func (m *AdventureRefresh) GetRemainChaNumber() int32 {
	if m != nil && m.RemainChaNumber != nil {
		return *m.RemainChaNumber
	}
	return 0
}

// 上线同步冒险数据
type AdventureGetDataS2C struct {
	// 难度刷新次数
	RefreshInfo *AdventureRefresh `protobuf:"bytes,1,opt,name=refreshInfo" json:"refreshInfo,omitempty"`
	// 地图数据
	MapInfo *AdventureMap `protobuf:"bytes,2,opt,name=mapInfo" json:"mapInfo,omitempty"`
	// 比赛跳过状态
	SkipInfo *AdventureSkip `protobuf:"bytes,3,opt,name=skipInfo" json:"skipInfo,omitempty"`
	// 邀请赛关卡数据
	BaseInfos        []*InviteBaseInfo `protobuf:"bytes,4,rep,name=baseInfos" json:"baseInfos,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *AdventureGetDataS2C) Reset()                    { *m = AdventureGetDataS2C{} }
func (m *AdventureGetDataS2C) String() string            { return proto.CompactTextString(m) }
func (*AdventureGetDataS2C) ProtoMessage()               {}
func (*AdventureGetDataS2C) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{10} }

func (m *AdventureGetDataS2C) GetRefreshInfo() *AdventureRefresh {
	if m != nil {
		return m.RefreshInfo
	}
	return nil
}

func (m *AdventureGetDataS2C) GetMapInfo() *AdventureMap {
	if m != nil {
		return m.MapInfo
	}
	return nil
}

func (m *AdventureGetDataS2C) GetSkipInfo() *AdventureSkip {
	if m != nil {
		return m.SkipInfo
	}
	return nil
}

func (m *AdventureGetDataS2C) GetBaseInfos() []*InviteBaseInfo {
	if m != nil {
		return m.BaseInfos
	}
	return nil
}

// 难度刷新 (客户端请求)
type AdventureDiffRefreshC2S struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *AdventureDiffRefreshC2S) Reset()                    { *m = AdventureDiffRefreshC2S{} }
func (m *AdventureDiffRefreshC2S) String() string            { return proto.CompactTextString(m) }
func (*AdventureDiffRefreshC2S) ProtoMessage()               {}
func (*AdventureDiffRefreshC2S) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{11} }

type AdventureDiffRefreshS2C struct {
	// 难度刷新次数
	RefreshInfo *AdventureRefresh `protobuf:"bytes,1,opt,name=refreshInfo" json:"refreshInfo,omitempty"`
	// 地图数据
	MapList          *AdventureMap `protobuf:"bytes,2,opt,name=mapList" json:"mapList,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *AdventureDiffRefreshS2C) Reset()                    { *m = AdventureDiffRefreshS2C{} }
func (m *AdventureDiffRefreshS2C) String() string            { return proto.CompactTextString(m) }
func (*AdventureDiffRefreshS2C) ProtoMessage()               {}
func (*AdventureDiffRefreshS2C) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{12} }

func (m *AdventureDiffRefreshS2C) GetRefreshInfo() *AdventureRefresh {
	if m != nil {
		return m.RefreshInfo
	}
	return nil
}

func (m *AdventureDiffRefreshS2C) GetMapList() *AdventureMap {
	if m != nil {
		return m.MapList
	}
	return nil
}

// 重置难度免费刷新次数、每日挑战次数
type AdventureResetDiffS2C struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *AdventureResetDiffS2C) Reset()                    { *m = AdventureResetDiffS2C{} }
func (m *AdventureResetDiffS2C) String() string            { return proto.CompactTextString(m) }
func (*AdventureResetDiffS2C) ProtoMessage()               {}
func (*AdventureResetDiffS2C) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{13} }

// 设置等级(客户端请求)
type AdventureSetLevelC2S struct {
	// 新等级
	Level            *int32 `protobuf:"varint,1,opt,name=level" json:"level,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *AdventureSetLevelC2S) Reset()                    { *m = AdventureSetLevelC2S{} }
func (m *AdventureSetLevelC2S) String() string            { return proto.CompactTextString(m) }
func (*AdventureSetLevelC2S) ProtoMessage()               {}
func (*AdventureSetLevelC2S) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{14} }

func (m *AdventureSetLevelC2S) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

type AdventureSetLevelS2C struct {
	// 地图数据
	MapList          *AdventureMap `protobuf:"bytes,1,opt,name=mapList" json:"mapList,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *AdventureSetLevelS2C) Reset()                    { *m = AdventureSetLevelS2C{} }
func (m *AdventureSetLevelS2C) String() string            { return proto.CompactTextString(m) }
func (*AdventureSetLevelS2C) ProtoMessage()               {}
func (*AdventureSetLevelS2C) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{15} }

func (m *AdventureSetLevelS2C) GetMapList() *AdventureMap {
	if m != nil {
		return m.MapList
	}
	return nil
}

// 开启组队冒险
type AdventureOpenL2R struct {
	// 队伍数据
	TeamInfo *TeamObj `protobuf:"bytes,1,opt,name=teamInfo" json:"teamInfo,omitempty"`
	// gid
	Gid              *int32 `protobuf:"varint,2,opt,name=gid" json:"gid,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *AdventureOpenL2R) Reset()                    { *m = AdventureOpenL2R{} }
func (m *AdventureOpenL2R) String() string            { return proto.CompactTextString(m) }
func (*AdventureOpenL2R) ProtoMessage()               {}
func (*AdventureOpenL2R) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{16} }

func (m *AdventureOpenL2R) GetTeamInfo() *TeamObj {
	if m != nil {
		return m.TeamInfo
	}
	return nil
}

func (m *AdventureOpenL2R) GetGid() int32 {
	if m != nil && m.Gid != nil {
		return *m.Gid
	}
	return 0
}

// 进入地图(客户端请求)
type AdventureEnterC2S struct {
	// 章节id
	SectionId        *int32 `protobuf:"varint,1,opt,name=sectionId" json:"sectionId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *AdventureEnterC2S) Reset()                    { *m = AdventureEnterC2S{} }
func (m *AdventureEnterC2S) String() string            { return proto.CompactTextString(m) }
func (*AdventureEnterC2S) ProtoMessage()               {}
func (*AdventureEnterC2S) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{17} }

func (m *AdventureEnterC2S) GetSectionId() int32 {
	if m != nil && m.SectionId != nil {
		return *m.SectionId
	}
	return 0
}

type AdventureEnterS2C struct {
	// 队伍数据，个人冒险为nil
	TeamInfo *TeamObj `protobuf:"bytes,1,opt,name=teamInfo" json:"teamInfo,omitempty"`
	// 当前挑战中的副本数据
	TeamChallengeInfo *AdventureTeamChallenge `protobuf:"bytes,2,opt,name=teamChallengeInfo" json:"teamChallengeInfo,omitempty"`
	XXX_unrecognized  []byte                  `json:"-"`
}

func (m *AdventureEnterS2C) Reset()                    { *m = AdventureEnterS2C{} }
func (m *AdventureEnterS2C) String() string            { return proto.CompactTextString(m) }
func (*AdventureEnterS2C) ProtoMessage()               {}
func (*AdventureEnterS2C) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{18} }

func (m *AdventureEnterS2C) GetTeamInfo() *TeamObj {
	if m != nil {
		return m.TeamInfo
	}
	return nil
}

func (m *AdventureEnterS2C) GetTeamChallengeInfo() *AdventureTeamChallenge {
	if m != nil {
		return m.TeamChallengeInfo
	}
	return nil
}

// 移动位置(客户端请求)
type AdventureMoveC2S struct {
	// 目标点
	Target *int32 `protobuf:"varint,1,opt,name=target" json:"target,omitempty"`
	// 是否去往最近的可挑战点
	ToNear           *bool  `protobuf:"varint,2,opt,name=toNear" json:"toNear,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *AdventureMoveC2S) Reset()                    { *m = AdventureMoveC2S{} }
func (m *AdventureMoveC2S) String() string            { return proto.CompactTextString(m) }
func (*AdventureMoveC2S) ProtoMessage()               {}
func (*AdventureMoveC2S) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{19} }

func (m *AdventureMoveC2S) GetTarget() int32 {
	if m != nil && m.Target != nil {
		return *m.Target
	}
	return 0
}

func (m *AdventureMoveC2S) GetToNear() bool {
	if m != nil && m.ToNear != nil {
		return *m.ToNear
	}
	return false
}

type AdventureMoveS2C struct {
	// 目标点
	Target *int32 `protobuf:"varint,1,opt,name=target" json:"target,omitempty"`
	// 当前关卡已获得的粉丝值
	Fans *int32 `protobuf:"varint,2,opt,name=fans" json:"fans,omitempty"`
	// npc战斗力
	NpcBattle        *int32 `protobuf:"varint,3,opt,name=npcBattle" json:"npcBattle,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *AdventureMoveS2C) Reset()                    { *m = AdventureMoveS2C{} }
func (m *AdventureMoveS2C) String() string            { return proto.CompactTextString(m) }
func (*AdventureMoveS2C) ProtoMessage()               {}
func (*AdventureMoveS2C) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{20} }

func (m *AdventureMoveS2C) GetTarget() int32 {
	if m != nil && m.Target != nil {
		return *m.Target
	}
	return 0
}

func (m *AdventureMoveS2C) GetFans() int32 {
	if m != nil && m.Fans != nil {
		return *m.Fans
	}
	return 0
}

func (m *AdventureMoveS2C) GetNpcBattle() int32 {
	if m != nil && m.NpcBattle != nil {
		return *m.NpcBattle
	}
	return 0
}

// 开始挑战(客户端请求)
type AdventurePlayC2S struct {
	// 比赛时（如果修改了跳过标记, 需上报）
	Change *bool `protobuf:"varint,1,opt,name=change" json:"change,omitempty"`
	// 跳过标记
	Skip             *AdventureSkip `protobuf:"bytes,2,opt,name=skip" json:"skip,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *AdventurePlayC2S) Reset()                    { *m = AdventurePlayC2S{} }
func (m *AdventurePlayC2S) String() string            { return proto.CompactTextString(m) }
func (*AdventurePlayC2S) ProtoMessage()               {}
func (*AdventurePlayC2S) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{21} }

func (m *AdventurePlayC2S) GetChange() bool {
	if m != nil && m.Change != nil {
		return *m.Change
	}
	return false
}

func (m *AdventurePlayC2S) GetSkip() *AdventureSkip {
	if m != nil {
		return m.Skip
	}
	return nil
}

type AdventurePlayS2C struct {
	// 比赛跳过状态（只有修改才通知）
	SkipInfo         *AdventureSkip `protobuf:"bytes,1,opt,name=skipInfo" json:"skipInfo,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *AdventurePlayS2C) Reset()                    { *m = AdventurePlayS2C{} }
func (m *AdventurePlayS2C) String() string            { return proto.CompactTextString(m) }
func (*AdventurePlayS2C) ProtoMessage()               {}
func (*AdventurePlayS2C) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{22} }

func (m *AdventurePlayS2C) GetSkipInfo() *AdventureSkip {
	if m != nil {
		return m.SkipInfo
	}
	return nil
}

// 比赛
type AdventureFightR2L struct {
	// 关卡npcId
	MatchId *int32 `protobuf:"varint,1,opt,name=matchId" json:"matchId,omitempty"`
	// buffs
	BuffIds []int32 `protobuf:"varint,2,rep,name=buffIds" json:"buffIds,omitempty"`
	// 难度系数(万分比)
	Difficulty *int32 `protobuf:"varint,3,opt,name=difficulty" json:"difficulty,omitempty"`
	// npc战斗力
	NpcBattle *int32 `protobuf:"varint,4,opt,name=npcBattle" json:"npcBattle,omitempty"`
	// 关卡子类型
	SubType          *int32 `protobuf:"varint,5,opt,name=subType" json:"subType,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *AdventureFightR2L) Reset()                    { *m = AdventureFightR2L{} }
func (m *AdventureFightR2L) String() string            { return proto.CompactTextString(m) }
func (*AdventureFightR2L) ProtoMessage()               {}
func (*AdventureFightR2L) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{23} }

func (m *AdventureFightR2L) GetMatchId() int32 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *AdventureFightR2L) GetBuffIds() []int32 {
	if m != nil {
		return m.BuffIds
	}
	return nil
}

func (m *AdventureFightR2L) GetDifficulty() int32 {
	if m != nil && m.Difficulty != nil {
		return *m.Difficulty
	}
	return 0
}

func (m *AdventureFightR2L) GetNpcBattle() int32 {
	if m != nil && m.NpcBattle != nil {
		return *m.NpcBattle
	}
	return 0
}

func (m *AdventureFightR2L) GetSubType() int32 {
	if m != nil && m.SubType != nil {
		return *m.SubType
	}
	return 0
}

// 捡道具
type AdventurePickUpItemS2C struct {
	// 道具
	Reward []*ItemVaryConfig `protobuf:"bytes,1,rep,name=reward" json:"reward,omitempty"`
	// buff
	Buffs            []*TypeValueConfig `protobuf:"bytes,2,rep,name=buffs" json:"buffs,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *AdventurePickUpItemS2C) Reset()                    { *m = AdventurePickUpItemS2C{} }
func (m *AdventurePickUpItemS2C) String() string            { return proto.CompactTextString(m) }
func (*AdventurePickUpItemS2C) ProtoMessage()               {}
func (*AdventurePickUpItemS2C) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{24} }

func (m *AdventurePickUpItemS2C) GetReward() []*ItemVaryConfig {
	if m != nil {
		return m.Reward
	}
	return nil
}

func (m *AdventurePickUpItemS2C) GetBuffs() []*TypeValueConfig {
	if m != nil {
		return m.Buffs
	}
	return nil
}

// 结算冒险-更新玩家冒险奖励、挑战次数等数据
type AdventureSettlementR2L struct {
	// 奖励
	Rewards []*ItemVaryConfig `protobuf:"bytes,1,rep,name=rewards" json:"rewards,omitempty"`
	// mapId
	MapId *int32 `protobuf:"varint,2,opt,name=mapId" json:"mapId,omitempty"`
	// 是否是队长(组队模式下只有队长会设置通关标记)
	IsCaptain *bool `protobuf:"varint,3,opt,name=isCaptain" json:"isCaptain,omitempty"`
	// 是否扣次数
	NeedDesc *bool `protobuf:"varint,4,opt,name=needDesc" json:"needDesc,omitempty"`
	// 结算时间（处理时，跨天不通知客户端）
	SetTime *int64 `protobuf:"varint,6,opt,name=setTime" json:"setTime,omitempty"`
	// 章节id（可以重章节id中解析出等级id、难度id、地图id）
	SectionId        *int32 `protobuf:"varint,7,opt,name=sectionId" json:"sectionId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *AdventureSettlementR2L) Reset()                    { *m = AdventureSettlementR2L{} }
func (m *AdventureSettlementR2L) String() string            { return proto.CompactTextString(m) }
func (*AdventureSettlementR2L) ProtoMessage()               {}
func (*AdventureSettlementR2L) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{25} }

func (m *AdventureSettlementR2L) GetRewards() []*ItemVaryConfig {
	if m != nil {
		return m.Rewards
	}
	return nil
}

func (m *AdventureSettlementR2L) GetMapId() int32 {
	if m != nil && m.MapId != nil {
		return *m.MapId
	}
	return 0
}

func (m *AdventureSettlementR2L) GetIsCaptain() bool {
	if m != nil && m.IsCaptain != nil {
		return *m.IsCaptain
	}
	return false
}

func (m *AdventureSettlementR2L) GetNeedDesc() bool {
	if m != nil && m.NeedDesc != nil {
		return *m.NeedDesc
	}
	return false
}

func (m *AdventureSettlementR2L) GetSetTime() int64 {
	if m != nil && m.SetTime != nil {
		return *m.SetTime
	}
	return 0
}

func (m *AdventureSettlementR2L) GetSectionId() int32 {
	if m != nil && m.SectionId != nil {
		return *m.SectionId
	}
	return 0
}

// 结算冒险-玩家在线通知客户端消息
type AdventureSettlementNotify struct {
	// 奖励
	Rewards []*ItemVaryConfig `protobuf:"bytes,1,rep,name=rewards" json:"rewards,omitempty"`
	// mapId
	MapId *int32 `protobuf:"varint,2,opt,name=mapId" json:"mapId,omitempty"`
	// 关卡id
	SectionId *int32 `protobuf:"varint,3,opt,name=sectionId" json:"sectionId,omitempty"`
	// 组队成员
	TeamMemberIds []int32 `protobuf:"varint,4,rep,name=teamMemberIds" json:"teamMemberIds,omitempty"`
	// 粉丝值
	FansNumber       *int32 `protobuf:"varint,5,opt,name=fansNumber" json:"fansNumber,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *AdventureSettlementNotify) Reset()                    { *m = AdventureSettlementNotify{} }
func (m *AdventureSettlementNotify) String() string            { return proto.CompactTextString(m) }
func (*AdventureSettlementNotify) ProtoMessage()               {}
func (*AdventureSettlementNotify) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{26} }

func (m *AdventureSettlementNotify) GetRewards() []*ItemVaryConfig {
	if m != nil {
		return m.Rewards
	}
	return nil
}

func (m *AdventureSettlementNotify) GetMapId() int32 {
	if m != nil && m.MapId != nil {
		return *m.MapId
	}
	return 0
}

func (m *AdventureSettlementNotify) GetSectionId() int32 {
	if m != nil && m.SectionId != nil {
		return *m.SectionId
	}
	return 0
}

func (m *AdventureSettlementNotify) GetTeamMemberIds() []int32 {
	if m != nil {
		return m.TeamMemberIds
	}
	return nil
}

func (m *AdventureSettlementNotify) GetFansNumber() int32 {
	if m != nil && m.FansNumber != nil {
		return *m.FansNumber
	}
	return 0
}

// 结算冒险(客户端请求)
type AdventureSettlementC2S struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *AdventureSettlementC2S) Reset()                    { *m = AdventureSettlementC2S{} }
func (m *AdventureSettlementC2S) String() string            { return proto.CompactTextString(m) }
func (*AdventureSettlementC2S) ProtoMessage()               {}
func (*AdventureSettlementC2S) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{27} }

type AdventureSettlementS2C struct {
	// 地图id
	MapId *int32 `protobuf:"varint,1,opt,name=mapId" json:"mapId,omitempty"`
	// 等级
	Level *int32 `protobuf:"varint,2,opt,name=level" json:"level,omitempty"`
	// 是否通关
	Pass *bool `protobuf:"varint,3,opt,name=pass" json:"pass,omitempty"`
	// 每日已挑战次数
	ChallengeNumber *int32 `protobuf:"varint,4,opt,name=challengeNumber" json:"challengeNumber,omitempty"`
	// 奖励
	Rewards []*ItemVaryConfig `protobuf:"bytes,5,rep,name=rewards" json:"rewards,omitempty"`
	// 触发的邀请赛
	BaseInfo         *InviteBaseInfo `protobuf:"bytes,6,opt,name=baseInfo" json:"baseInfo,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *AdventureSettlementS2C) Reset()                    { *m = AdventureSettlementS2C{} }
func (m *AdventureSettlementS2C) String() string            { return proto.CompactTextString(m) }
func (*AdventureSettlementS2C) ProtoMessage()               {}
func (*AdventureSettlementS2C) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{28} }

func (m *AdventureSettlementS2C) GetMapId() int32 {
	if m != nil && m.MapId != nil {
		return *m.MapId
	}
	return 0
}

func (m *AdventureSettlementS2C) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *AdventureSettlementS2C) GetPass() bool {
	if m != nil && m.Pass != nil {
		return *m.Pass
	}
	return false
}

func (m *AdventureSettlementS2C) GetChallengeNumber() int32 {
	if m != nil && m.ChallengeNumber != nil {
		return *m.ChallengeNumber
	}
	return 0
}

func (m *AdventureSettlementS2C) GetRewards() []*ItemVaryConfig {
	if m != nil {
		return m.Rewards
	}
	return nil
}

func (m *AdventureSettlementS2C) GetBaseInfo() *InviteBaseInfo {
	if m != nil {
		return m.BaseInfo
	}
	return nil
}

// 同步最新数据
type AdventureNotifyInfoS2C struct {
	// 成员数据
	Person *AdventurePersonChallenge `protobuf:"bytes,1,opt,name=person" json:"person,omitempty"`
	// 粉丝值(覆盖)
	FansNumber *int32 `protobuf:"varint,2,opt,name=fansNumber" json:"fansNumber,omitempty"`
	// 结算奖池(增量插入)
	RewardPool []*ItemVaryConfig `protobuf:"bytes,3,rep,name=rewardPool" json:"rewardPool,omitempty"`
	// 结算奖池(全量替换)
	RewardPoolAll    []*ItemVaryConfig `protobuf:"bytes,4,rep,name=rewardPoolAll" json:"rewardPoolAll,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *AdventureNotifyInfoS2C) Reset()                    { *m = AdventureNotifyInfoS2C{} }
func (m *AdventureNotifyInfoS2C) String() string            { return proto.CompactTextString(m) }
func (*AdventureNotifyInfoS2C) ProtoMessage()               {}
func (*AdventureNotifyInfoS2C) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{29} }

func (m *AdventureNotifyInfoS2C) GetPerson() *AdventurePersonChallenge {
	if m != nil {
		return m.Person
	}
	return nil
}

func (m *AdventureNotifyInfoS2C) GetFansNumber() int32 {
	if m != nil && m.FansNumber != nil {
		return *m.FansNumber
	}
	return 0
}

func (m *AdventureNotifyInfoS2C) GetRewardPool() []*ItemVaryConfig {
	if m != nil {
		return m.RewardPool
	}
	return nil
}

func (m *AdventureNotifyInfoS2C) GetRewardPoolAll() []*ItemVaryConfig {
	if m != nil {
		return m.RewardPoolAll
	}
	return nil
}

// 同步移动位置
type AdventureNotifyPlaceS2C struct {
	// gid
	Gid *int32 `protobuf:"varint,1,opt,name=gid" json:"gid,omitempty"`
	// 目标点
	Place            *int32 `protobuf:"varint,2,opt,name=place" json:"place,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *AdventureNotifyPlaceS2C) Reset()                    { *m = AdventureNotifyPlaceS2C{} }
func (m *AdventureNotifyPlaceS2C) String() string            { return proto.CompactTextString(m) }
func (*AdventureNotifyPlaceS2C) ProtoMessage()               {}
func (*AdventureNotifyPlaceS2C) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{30} }

func (m *AdventureNotifyPlaceS2C) GetGid() int32 {
	if m != nil && m.Gid != nil {
		return *m.Gid
	}
	return 0
}

func (m *AdventureNotifyPlaceS2C) GetPlace() int32 {
	if m != nil && m.Place != nil {
		return *m.Place
	}
	return 0
}

// 比赛结算
type AdventureFightResL2R struct {
	IsWin            *bool  `protobuf:"varint,1,opt,name=isWin" json:"isWin,omitempty"`
	Coff             *int32 `protobuf:"varint,2,opt,name=coff" json:"coff,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *AdventureFightResL2R) Reset()                    { *m = AdventureFightResL2R{} }
func (m *AdventureFightResL2R) String() string            { return proto.CompactTextString(m) }
func (*AdventureFightResL2R) ProtoMessage()               {}
func (*AdventureFightResL2R) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{31} }

func (m *AdventureFightResL2R) GetIsWin() bool {
	if m != nil && m.IsWin != nil {
		return *m.IsWin
	}
	return false
}

func (m *AdventureFightResL2R) GetCoff() int32 {
	if m != nil && m.Coff != nil {
		return *m.Coff
	}
	return 0
}

// 通知客户端比赛结算信息
type AdventureFightResS2C struct {
	// 比赛位置
	Position *int32 `protobuf:"varint,1,opt,name=position" json:"position,omitempty"`
	// 已获得的粉丝值
	Fans *int32 `protobuf:"varint,2,opt,name=fans" json:"fans,omitempty"`
	// 可能获得的奖励
	Reward           []*ItemVaryConfig `protobuf:"bytes,3,rep,name=reward" json:"reward,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *AdventureFightResS2C) Reset()                    { *m = AdventureFightResS2C{} }
func (m *AdventureFightResS2C) String() string            { return proto.CompactTextString(m) }
func (*AdventureFightResS2C) ProtoMessage()               {}
func (*AdventureFightResS2C) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{32} }

func (m *AdventureFightResS2C) GetPosition() int32 {
	if m != nil && m.Position != nil {
		return *m.Position
	}
	return 0
}

func (m *AdventureFightResS2C) GetFans() int32 {
	if m != nil && m.Fans != nil {
		return *m.Fans
	}
	return 0
}

func (m *AdventureFightResS2C) GetReward() []*ItemVaryConfig {
	if m != nil {
		return m.Reward
	}
	return nil
}

// 请求比赛数据
type AdventureGetTeamObjL2R struct {
	// 开始时间
	StartTime        *int64 `protobuf:"varint,1,opt,name=startTime" json:"startTime,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *AdventureGetTeamObjL2R) Reset()                    { *m = AdventureGetTeamObjL2R{} }
func (m *AdventureGetTeamObjL2R) String() string            { return proto.CompactTextString(m) }
func (*AdventureGetTeamObjL2R) ProtoMessage()               {}
func (*AdventureGetTeamObjL2R) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{33} }

func (m *AdventureGetTeamObjL2R) GetStartTime() int64 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

// 领取粉丝宝箱奖励
type AdventureGetFansBoxC2S struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *AdventureGetFansBoxC2S) Reset()                    { *m = AdventureGetFansBoxC2S{} }
func (m *AdventureGetFansBoxC2S) String() string            { return proto.CompactTextString(m) }
func (*AdventureGetFansBoxC2S) ProtoMessage()               {}
func (*AdventureGetFansBoxC2S) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{34} }

// 同步给队伍所有人,宝箱已领取状态
type AdventureGetFansBoxS2C struct {
	// 领取宝箱的gid
	Setter           *int32 `protobuf:"varint,1,opt,name=setter" json:"setter,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *AdventureGetFansBoxS2C) Reset()                    { *m = AdventureGetFansBoxS2C{} }
func (m *AdventureGetFansBoxS2C) String() string            { return proto.CompactTextString(m) }
func (*AdventureGetFansBoxS2C) ProtoMessage()               {}
func (*AdventureGetFansBoxS2C) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{35} }

func (m *AdventureGetFansBoxS2C) GetSetter() int32 {
	if m != nil && m.Setter != nil {
		return *m.Setter
	}
	return 0
}

// 上线同步组队信息
type NotifyFormTeamInfoS2C struct {
	// 队伍信息，没有组队为nil
	Obj *TeamObj `protobuf:"bytes,1,opt,name=obj" json:"obj,omitempty"`
	// 开始时间,默认为0
	StartTime *int64 `protobuf:"varint,2,opt,name=startTime" json:"startTime,omitempty"`
	// 挑战数据
	TeamChallengeInfo *AdventureTeamChallenge `protobuf:"bytes,3,opt,name=TeamChallengeInfo" json:"TeamChallengeInfo,omitempty"`
	XXX_unrecognized  []byte                  `json:"-"`
}

func (m *NotifyFormTeamInfoS2C) Reset()                    { *m = NotifyFormTeamInfoS2C{} }
func (m *NotifyFormTeamInfoS2C) String() string            { return proto.CompactTextString(m) }
func (*NotifyFormTeamInfoS2C) ProtoMessage()               {}
func (*NotifyFormTeamInfoS2C) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{36} }

func (m *NotifyFormTeamInfoS2C) GetObj() *TeamObj {
	if m != nil {
		return m.Obj
	}
	return nil
}

func (m *NotifyFormTeamInfoS2C) GetStartTime() int64 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

func (m *NotifyFormTeamInfoS2C) GetTeamChallengeInfo() *AdventureTeamChallenge {
	if m != nil {
		return m.TeamChallengeInfo
	}
	return nil
}

// 通知客户端通关关卡id
type NotifyPassChapterS2C struct {
	// 通关关卡id
	Positions        *int64 `protobuf:"varint,1,opt,name=positions" json:"positions,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *NotifyPassChapterS2C) Reset()                    { *m = NotifyPassChapterS2C{} }
func (m *NotifyPassChapterS2C) String() string            { return proto.CompactTextString(m) }
func (*NotifyPassChapterS2C) ProtoMessage()               {}
func (*NotifyPassChapterS2C) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{37} }

func (m *NotifyPassChapterS2C) GetPositions() int64 {
	if m != nil && m.Positions != nil {
		return *m.Positions
	}
	return 0
}

// 通知服务器，玩家是否在场状态
type AdventureOnlineStatusC2S struct {
	// 是否在场（true：进入, false:离开）
	Online           *bool  `protobuf:"varint,1,opt,name=online" json:"online,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *AdventureOnlineStatusC2S) Reset()                    { *m = AdventureOnlineStatusC2S{} }
func (m *AdventureOnlineStatusC2S) String() string            { return proto.CompactTextString(m) }
func (*AdventureOnlineStatusC2S) ProtoMessage()               {}
func (*AdventureOnlineStatusC2S) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{38} }

func (m *AdventureOnlineStatusC2S) GetOnline() bool {
	if m != nil && m.Online != nil {
		return *m.Online
	}
	return false
}

// 通知队友，队员是否在场的消息
type NotifyAdventureOnLineStatusS2C struct {
	// 离开的队员id
	Gid *int32 `protobuf:"varint,1,opt,name=gid" json:"gid,omitempty"`
	// 是否在场（true：进入, false:离开）
	Online           *bool  `protobuf:"varint,2,opt,name=online" json:"online,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *NotifyAdventureOnLineStatusS2C) Reset()         { *m = NotifyAdventureOnLineStatusS2C{} }
func (m *NotifyAdventureOnLineStatusS2C) String() string { return proto.CompactTextString(m) }
func (*NotifyAdventureOnLineStatusS2C) ProtoMessage()    {}
func (*NotifyAdventureOnLineStatusS2C) Descriptor() ([]byte, []int) {
	return fileDescriptor2, []int{39}
}

func (m *NotifyAdventureOnLineStatusS2C) GetGid() int32 {
	if m != nil && m.Gid != nil {
		return *m.Gid
	}
	return 0
}

func (m *NotifyAdventureOnLineStatusS2C) GetOnline() bool {
	if m != nil && m.Online != nil {
		return *m.Online
	}
	return false
}

// 商业邀请赛数据更改时,同步客户端
type NotifyInviteInfoS2C struct {
	// 邀请赛关卡数据
	BaseInfos        []*InviteBaseInfo `protobuf:"bytes,1,rep,name=baseInfos" json:"baseInfos,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *NotifyInviteInfoS2C) Reset()                    { *m = NotifyInviteInfoS2C{} }
func (m *NotifyInviteInfoS2C) String() string            { return proto.CompactTextString(m) }
func (*NotifyInviteInfoS2C) ProtoMessage()               {}
func (*NotifyInviteInfoS2C) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{40} }

func (m *NotifyInviteInfoS2C) GetBaseInfos() []*InviteBaseInfo {
	if m != nil {
		return m.BaseInfos
	}
	return nil
}

type InviteSupplayC2S struct {
	// 邀请赛index
	Index            *int32 `protobuf:"varint,1,opt,name=index" json:"index,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *InviteSupplayC2S) Reset()                    { *m = InviteSupplayC2S{} }
func (m *InviteSupplayC2S) String() string            { return proto.CompactTextString(m) }
func (*InviteSupplayC2S) ProtoMessage()               {}
func (*InviteSupplayC2S) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{41} }

func (m *InviteSupplayC2S) GetIndex() int32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

type InviteSupplayS2C struct {
	// 邀请赛index
	Index            *int32 `protobuf:"varint,1,opt,name=index" json:"index,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *InviteSupplayS2C) Reset()                    { *m = InviteSupplayS2C{} }
func (m *InviteSupplayS2C) String() string            { return proto.CompactTextString(m) }
func (*InviteSupplayS2C) ProtoMessage()               {}
func (*InviteSupplayS2C) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{42} }

func (m *InviteSupplayS2C) GetIndex() int32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

// 使用行动力宝箱
type UseLinePowerBoxC2S struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *UseLinePowerBoxC2S) Reset()                    { *m = UseLinePowerBoxC2S{} }
func (m *UseLinePowerBoxC2S) String() string            { return proto.CompactTextString(m) }
func (*UseLinePowerBoxC2S) ProtoMessage()               {}
func (*UseLinePowerBoxC2S) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{43} }

// 使用行动力宝箱
// @Gamer
type UseLinePowerBoxS2C struct {
	// 行动力
	TotalNum         *int32 `protobuf:"varint,1,opt,name=totalNum" json:"totalNum,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *UseLinePowerBoxS2C) Reset()                    { *m = UseLinePowerBoxS2C{} }
func (m *UseLinePowerBoxS2C) String() string            { return proto.CompactTextString(m) }
func (*UseLinePowerBoxS2C) ProtoMessage()               {}
func (*UseLinePowerBoxS2C) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{44} }

func (m *UseLinePowerBoxS2C) GetTotalNum() int32 {
	if m != nil && m.TotalNum != nil {
		return *m.TotalNum
	}
	return 0
}

func init() {
	proto.RegisterType((*AdventureMapDiff)(nil), "AdventureMapDiff")
	proto.RegisterType((*AdventureMapBase)(nil), "AdventureMapBase")
	proto.RegisterType((*AdventureMap)(nil), "AdventureMap")
	proto.RegisterType((*AdventureSkip)(nil), "AdventureSkip")
	proto.RegisterType((*InviteBaseInfo)(nil), "InviteBaseInfo")
	proto.RegisterType((*InviteInfo)(nil), "InviteInfo")
	proto.RegisterType((*AdventureChapterInfo)(nil), "AdventureChapterInfo")
	proto.RegisterType((*AdventurePersonChallenge)(nil), "AdventurePersonChallenge")
	proto.RegisterType((*AdventureTeamChallenge)(nil), "AdventureTeamChallenge")
	proto.RegisterType((*AdventureRefresh)(nil), "AdventureRefresh")
	proto.RegisterType((*AdventureGetDataS2C)(nil), "AdventureGetDataS2C")
	proto.RegisterType((*AdventureDiffRefreshC2S)(nil), "AdventureDiffRefreshC2S")
	proto.RegisterType((*AdventureDiffRefreshS2C)(nil), "AdventureDiffRefreshS2C")
	proto.RegisterType((*AdventureResetDiffS2C)(nil), "AdventureResetDiffS2C")
	proto.RegisterType((*AdventureSetLevelC2S)(nil), "AdventureSetLevelC2S")
	proto.RegisterType((*AdventureSetLevelS2C)(nil), "AdventureSetLevelS2C")
	proto.RegisterType((*AdventureOpenL2R)(nil), "AdventureOpenL2R")
	proto.RegisterType((*AdventureEnterC2S)(nil), "AdventureEnterC2S")
	proto.RegisterType((*AdventureEnterS2C)(nil), "AdventureEnterS2C")
	proto.RegisterType((*AdventureMoveC2S)(nil), "AdventureMoveC2S")
	proto.RegisterType((*AdventureMoveS2C)(nil), "AdventureMoveS2C")
	proto.RegisterType((*AdventurePlayC2S)(nil), "AdventurePlayC2S")
	proto.RegisterType((*AdventurePlayS2C)(nil), "AdventurePlayS2C")
	proto.RegisterType((*AdventureFightR2L)(nil), "AdventureFightR2L")
	proto.RegisterType((*AdventurePickUpItemS2C)(nil), "AdventurePickUpItemS2C")
	proto.RegisterType((*AdventureSettlementR2L)(nil), "AdventureSettlementR2L")
	proto.RegisterType((*AdventureSettlementNotify)(nil), "AdventureSettlementNotify")
	proto.RegisterType((*AdventureSettlementC2S)(nil), "AdventureSettlementC2S")
	proto.RegisterType((*AdventureSettlementS2C)(nil), "AdventureSettlementS2C")
	proto.RegisterType((*AdventureNotifyInfoS2C)(nil), "AdventureNotifyInfoS2C")
	proto.RegisterType((*AdventureNotifyPlaceS2C)(nil), "AdventureNotifyPlaceS2C")
	proto.RegisterType((*AdventureFightResL2R)(nil), "AdventureFightResL2R")
	proto.RegisterType((*AdventureFightResS2C)(nil), "AdventureFightResS2C")
	proto.RegisterType((*AdventureGetTeamObjL2R)(nil), "AdventureGetTeamObjL2R")
	proto.RegisterType((*AdventureGetFansBoxC2S)(nil), "AdventureGetFansBoxC2S")
	proto.RegisterType((*AdventureGetFansBoxS2C)(nil), "AdventureGetFansBoxS2C")
	proto.RegisterType((*NotifyFormTeamInfoS2C)(nil), "NotifyFormTeamInfoS2C")
	proto.RegisterType((*NotifyPassChapterS2C)(nil), "NotifyPassChapterS2C")
	proto.RegisterType((*AdventureOnlineStatusC2S)(nil), "AdventureOnlineStatusC2S")
	proto.RegisterType((*NotifyAdventureOnLineStatusS2C)(nil), "NotifyAdventureOnLineStatusS2C")
	proto.RegisterType((*NotifyInviteInfoS2C)(nil), "NotifyInviteInfoS2C")
	proto.RegisterType((*InviteSupplayC2S)(nil), "InviteSupplayC2S")
	proto.RegisterType((*InviteSupplayS2C)(nil), "InviteSupplayS2C")
	proto.RegisterType((*UseLinePowerBoxC2S)(nil), "UseLinePowerBoxC2S")
	proto.RegisterType((*UseLinePowerBoxS2C)(nil), "UseLinePowerBoxS2C")
	proto.RegisterEnum("AdventureGetDataS2C_MsgID", AdventureGetDataS2C_MsgID_name, AdventureGetDataS2C_MsgID_value)
	proto.RegisterEnum("AdventureDiffRefreshC2S_MsgID", AdventureDiffRefreshC2S_MsgID_name, AdventureDiffRefreshC2S_MsgID_value)
	proto.RegisterEnum("AdventureDiffRefreshS2C_MsgID", AdventureDiffRefreshS2C_MsgID_name, AdventureDiffRefreshS2C_MsgID_value)
	proto.RegisterEnum("AdventureResetDiffS2C_MsgID", AdventureResetDiffS2C_MsgID_name, AdventureResetDiffS2C_MsgID_value)
	proto.RegisterEnum("AdventureSetLevelC2S_MsgID", AdventureSetLevelC2S_MsgID_name, AdventureSetLevelC2S_MsgID_value)
	proto.RegisterEnum("AdventureSetLevelS2C_MsgID", AdventureSetLevelS2C_MsgID_name, AdventureSetLevelS2C_MsgID_value)
	proto.RegisterEnum("AdventureEnterC2S_MsgID", AdventureEnterC2S_MsgID_name, AdventureEnterC2S_MsgID_value)
	proto.RegisterEnum("AdventureEnterS2C_MsgID", AdventureEnterS2C_MsgID_name, AdventureEnterS2C_MsgID_value)
	proto.RegisterEnum("AdventureMoveC2S_MsgID", AdventureMoveC2S_MsgID_name, AdventureMoveC2S_MsgID_value)
	proto.RegisterEnum("AdventureMoveS2C_MsgID", AdventureMoveS2C_MsgID_name, AdventureMoveS2C_MsgID_value)
	proto.RegisterEnum("AdventurePlayC2S_MsgID", AdventurePlayC2S_MsgID_name, AdventurePlayC2S_MsgID_value)
	proto.RegisterEnum("AdventurePlayS2C_MsgID", AdventurePlayS2C_MsgID_name, AdventurePlayS2C_MsgID_value)
	proto.RegisterEnum("AdventurePickUpItemS2C_MsgID", AdventurePickUpItemS2C_MsgID_name, AdventurePickUpItemS2C_MsgID_value)
	proto.RegisterEnum("AdventureSettlementC2S_MsgID", AdventureSettlementC2S_MsgID_name, AdventureSettlementC2S_MsgID_value)
	proto.RegisterEnum("AdventureSettlementS2C_MsgID", AdventureSettlementS2C_MsgID_name, AdventureSettlementS2C_MsgID_value)
	proto.RegisterEnum("AdventureNotifyInfoS2C_MsgID", AdventureNotifyInfoS2C_MsgID_name, AdventureNotifyInfoS2C_MsgID_value)
	proto.RegisterEnum("AdventureNotifyPlaceS2C_MsgID", AdventureNotifyPlaceS2C_MsgID_name, AdventureNotifyPlaceS2C_MsgID_value)
	proto.RegisterEnum("AdventureFightResS2C_MsgID", AdventureFightResS2C_MsgID_name, AdventureFightResS2C_MsgID_value)
	proto.RegisterEnum("AdventureGetFansBoxC2S_MsgID", AdventureGetFansBoxC2S_MsgID_name, AdventureGetFansBoxC2S_MsgID_value)
	proto.RegisterEnum("AdventureGetFansBoxS2C_MsgID", AdventureGetFansBoxS2C_MsgID_name, AdventureGetFansBoxS2C_MsgID_value)
	proto.RegisterEnum("NotifyFormTeamInfoS2C_MsgID", NotifyFormTeamInfoS2C_MsgID_name, NotifyFormTeamInfoS2C_MsgID_value)
	proto.RegisterEnum("NotifyPassChapterS2C_MsgID", NotifyPassChapterS2C_MsgID_name, NotifyPassChapterS2C_MsgID_value)
	proto.RegisterEnum("AdventureOnlineStatusC2S_MsgID", AdventureOnlineStatusC2S_MsgID_name, AdventureOnlineStatusC2S_MsgID_value)
	proto.RegisterEnum("NotifyAdventureOnLineStatusS2C_MsgID", NotifyAdventureOnLineStatusS2C_MsgID_name, NotifyAdventureOnLineStatusS2C_MsgID_value)
	proto.RegisterEnum("NotifyInviteInfoS2C_MsgID", NotifyInviteInfoS2C_MsgID_name, NotifyInviteInfoS2C_MsgID_value)
	proto.RegisterEnum("InviteSupplayC2S_MsgID", InviteSupplayC2S_MsgID_name, InviteSupplayC2S_MsgID_value)
	proto.RegisterEnum("InviteSupplayS2C_MsgID", InviteSupplayS2C_MsgID_name, InviteSupplayS2C_MsgID_value)
	proto.RegisterEnum("UseLinePowerBoxC2S_MsgID", UseLinePowerBoxC2S_MsgID_name, UseLinePowerBoxC2S_MsgID_value)
	proto.RegisterEnum("UseLinePowerBoxS2C_MsgID", UseLinePowerBoxS2C_MsgID_name, UseLinePowerBoxS2C_MsgID_value)
}

func init() { proto.RegisterFile("adventure.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 1545 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x57, 0x5d, 0x6f, 0x1b, 0x45,
	0x17, 0x96, 0xb3, 0xf6, 0xc6, 0x39, 0xf9, 0x76, 0x93, 0x36, 0xad, 0x5e, 0xf5, 0xed, 0x3b, 0x2f,
	0x2a, 0xa5, 0x08, 0x23, 0xa5, 0x17, 0x5c, 0x80, 0x80, 0x36, 0xa1, 0x25, 0xe0, 0x36, 0x21, 0x4e,
	0x8b, 0x10, 0x57, 0xeb, 0xf5, 0xd8, 0xd9, 0x76, 0xbd, 0xbb, 0xda, 0x59, 0xbb, 0xf5, 0x2f, 0x40,
	0x42, 0x5c, 0xf1, 0x07, 0x80, 0x8a, 0xcf, 0x22, 0x81, 0x28, 0xaa, 0x04, 0x88, 0xdf, 0xc4, 0x0f,
	0xe0, 0x8a, 0x73, 0x66, 0x66, 0xbf, 0xec, 0x71, 0xda, 0x72, 0xe7, 0x5d, 0x9f, 0x79, 0xe6, 0x39,
	0x5f, 0xcf, 0x39, 0x0b, 0xab, 0x4e, 0x77, 0xc4, 0x83, 0x64, 0x18, 0xf3, 0x66, 0x14, 0x87, 0x49,
	0x78, 0x0e, 0xdc, 0x30, 0xe8, 0xe9, 0xdf, 0x6b, 0x09, 0x77, 0x06, 0x6d, 0x1e, 0x8f, 0x78, 0xac,
	0xde, 0xb0, 0x7d, 0x58, 0xbb, 0x9a, 0x1e, 0xb8, 0xe9, 0x44, 0xbb, 0x5e, 0xaf, 0xd7, 0x00, 0x98,
	0xf3, 0x47, 0x5b, 0x95, 0x0b, 0x95, 0x4b, 0xb5, 0xc6, 0x12, 0x54, 0xbb, 0xf8, 0x6e, 0x6b, 0x2e,
	0x7d, 0x8a, 0x1c, 0x21, 0xb6, 0x2c, 0x7c, 0xaa, 0x37, 0x4e, 0xc1, 0x62, 0xcf, 0x0b, 0x3c, 0x71,
	0xbc, 0x13, 0x0e, 0x83, 0x64, 0xab, 0x4a, 0x26, 0xec, 0x46, 0x19, 0xf0, 0x9a, 0x23, 0x78, 0x63,
	0x19, 0x6a, 0x03, 0x27, 0xda, 0xeb, 0x6a, 0xcc, 0x17, 0x60, 0x81, 0x30, 0x3d, 0x77, 0xe8, 0x27,
	0x08, 0x6c, 0x5d, 0x5a, 0xdc, 0x5e, 0x6f, 0x4e, 0xb2, 0x60, 0x6f, 0xc1, 0x52, 0xf1, 0x1d, 0x81,
	0xf8, 0x7c, 0xc4, 0x7d, 0x0d, 0x72, 0x01, 0x6a, 0x1d, 0xc4, 0x16, 0x46, 0x00, 0xba, 0x95, 0xbd,
	0x01, 0xcb, 0xd9, 0xbb, 0xf6, 0x3d, 0x2f, 0x6a, 0x9c, 0x86, 0x15, 0x4f, 0xd0, 0xaf, 0x2b, 0x1f,
	0x0c, 0x9d, 0x38, 0xe1, 0xb1, 0x84, 0x92, 0x7e, 0xa8, 0xf7, 0xd7, 0xbd, 0xfe, 0x71, 0x22, 0x5d,
	0xad, 0xb3, 0x43, 0x58, 0xd9, 0x0b, 0x46, 0x5e, 0xc2, 0x09, 0x6b, 0x2f, 0xe8, 0x85, 0x44, 0xc0,
	0x0b, 0xba, 0xfc, 0x81, 0x26, 0x80, 0x8f, 0x6e, 0xaf, 0x8f, 0x4e, 0xa9, 0xd0, 0xac, 0xc2, 0x3c,
	0x0f, 0xba, 0x47, 0xde, 0x80, 0xcb, 0xe8, 0x58, 0x8d, 0x75, 0x58, 0x10, 0xc3, 0x28, 0xf2, 0xc7,
	0x3b, 0x59, 0x6c, 0x3e, 0x06, 0x50, 0x98, 0x12, 0x8f, 0xc1, 0x42, 0x47, 0x63, 0x0b, 0xc4, 0x24,
	0x2f, 0x56, 0x9b, 0x13, 0x77, 0x6e, 0xc0, 0x52, 0xd7, 0x19, 0xab, 0x97, 0x84, 0xa3, 0xee, 0x42,
	0xc2, 0x01, 0x7f, 0x90, 0x1c, 0xf2, 0x5e, 0x7e, 0x1f, 0x7b, 0x54, 0x81, 0x8d, 0xcc, 0xdf, 0x9d,
	0x63, 0x27, 0x42, 0x07, 0x25, 0xc6, 0x1a, 0xd4, 0xa3, 0x50, 0x78, 0x89, 0x17, 0x06, 0x9a, 0xfa,
	0x0a, 0xd8, 0x22, 0x71, 0x92, 0xa1, 0xc8, 0xd3, 0xda, 0x73, 0x02, 0x95, 0xd6, 0x1a, 0xd9, 0xf7,
	0x3c, 0xdf, 0xbf, 0x4e, 0x6f, 0xaa, 0x99, 0xab, 0x32, 0xc5, 0x35, 0xf9, 0x88, 0x9e, 0x91, 0x81,
	0xca, 0xba, 0x9d, 0x22, 0x7a, 0xe2, 0x80, 0x4a, 0x63, 0x5e, 0x86, 0x14, 0x4d, 0x82, 0xc8, 0xbd,
	0xe6, 0x24, 0x89, 0xcf, 0xb7, 0xea, 0xd2, 0x64, 0x11, 0xac, 0xbe, 0xd7, 0xdd, 0x5a, 0x90, 0x91,
	0xf8, 0xb3, 0x02, 0x5b, 0x19, 0xd9, 0x03, 0x1e, 0x8b, 0x30, 0x40, 0xca, 0xbe, 0xcf, 0x83, 0x3e,
	0x4f, 0x2d, 0xb3, 0x02, 0xec, 0x84, 0x71, 0xa0, 0x99, 0x16, 0x7d, 0x51, 0x6c, 0xff, 0x8b, 0x75,
	0x30, 0xec, 0xf5, 0x04, 0x72, 0xa3, 0x08, 0xae, 0x35, 0x8f, 0xc6, 0x11, 0xbf, 0xe3, 0xf8, 0x43,
	0xbe, 0x83, 0x75, 0xef, 0xf5, 0xd1, 0xc0, 0xe6, 0x01, 0x8f, 0xfb, 0x63, 0x49, 0x55, 0xc6, 0x38,
	0xe1, 0x83, 0x3b, 0x4e, 0x3c, 0xd6, 0x06, 0xa9, 0xf7, 0xf3, 0xa9, 0x27, 0x61, 0xd0, 0xf2, 0x02,
	0x45, 0x5b, 0x16, 0x87, 0xab, 0x99, 0x79, 0x41, 0x5f, 0xd2, 0xaf, 0xb3, 0xbf, 0x2a, 0x70, 0x3a,
	0xa3, 0x7f, 0x84, 0x3d, 0x95, 0x93, 0xa7, 0xb4, 0x73, 0x97, 0x08, 0x66, 0xf5, 0x7e, 0x19, 0xe6,
	0x23, 0xe9, 0x62, 0x5a, 0xac, 0x67, 0x9b, 0x33, 0x7d, 0x7f, 0x11, 0xea, 0xae, 0xca, 0x1d, 0xa5,
	0x83, 0x8c, 0x37, 0x9b, 0xc6, 0xac, 0xfe, 0x1f, 0x20, 0xe6, 0xf7, 0x9d, 0xb8, 0x7b, 0x10, 0x86,
	0x3e, 0xe6, 0xc9, 0x32, 0xb9, 0x86, 0xad, 0x4c, 0xae, 0xdd, 0x1a, 0x0e, 0x3a, 0x58, 0xed, 0x59,
	0xf6, 0xd2, 0x10, 0x0a, 0x19, 0x12, 0x8b, 0xa2, 0x1a, 0x73, 0x97, 0x7b, 0x23, 0xde, 0xd5, 0xf9,
	0xc3, 0x28, 0x90, 0x54, 0xa0, 0x0b, 0x75, 0x59, 0x5c, 0x9f, 0x54, 0x0a, 0x6d, 0x8d, 0x75, 0x17,
	0x73, 0x71, 0x2c, 0xd1, 0x63, 0xce, 0x35, 0xba, 0xf2, 0x75, 0x13, 0x96, 0xa9, 0x34, 0xa9, 0x2e,
	0xb1, 0xc4, 0x06, 0x91, 0xcc, 0x9b, 0x45, 0xad, 0xe7, 0x0e, 0xe3, 0x98, 0x07, 0xee, 0x58, 0x9b,
	0xab, 0xec, 0x9d, 0x81, 0xd5, 0x34, 0xba, 0x29, 0x4e, 0x35, 0xfd, 0x23, 0xe6, 0x03, 0xc7, 0xa3,
	0xd0, 0x14, 0xe9, 0xb3, 0xdf, 0x2b, 0x70, 0x2a, 0x63, 0x72, 0x83, 0x27, 0xbb, 0x4e, 0xe2, 0xb4,
	0xb7, 0x77, 0x1a, 0x17, 0x61, 0x31, 0x56, 0xbc, 0x28, 0x3c, 0x92, 0x4d, 0x49, 0x15, 0x52, 0xd2,
	0xe7, 0x61, 0x9e, 0xb4, 0x88, 0x6c, 0xe6, 0xa4, 0xcd, 0x72, 0x49, 0x39, 0x50, 0x57, 0xea, 0x02,
	0xa5, 0x40, 0x1a, 0x58, 0xd2, 0x60, 0xa5, 0x59, 0x96, 0x91, 0x52, 0xdf, 0x56, 0x8d, 0x7d, 0xcb,
	0x36, 0xa0, 0x76, 0x53, 0xf4, 0xf7, 0x76, 0xb1, 0x96, 0x6d, 0x2e, 0x7f, 0xad, 0x7d, 0x61, 0xb3,
	0x57, 0xe1, 0x4c, 0x06, 0x45, 0x1a, 0xa7, 0x39, 0xed, 0x6c, 0xb7, 0x4d, 0x07, 0xbe, 0xb4, 0xd9,
	0x7d, 0xf3, 0x81, 0xe7, 0xf7, 0xb7, 0xe5, 0x89, 0xc4, 0xe8, 0xef, 0x8c, 0x8b, 0x5f, 0x81, 0xcd,
	0x02, 0x92, 0xc0, 0x30, 0xe3, 0xed, 0x78, 0xad, 0xc9, 0xfc, 0x2b, 0x9b, 0xbd, 0x5e, 0x90, 0x9e,
	0x36, 0x4f, 0x5a, 0xa4, 0xd3, 0xe8, 0xd5, 0x84, 0x66, 0x9b, 0x0e, 0x3f, 0xb4, 0x59, 0xcb, 0x70,
	0x98, 0x3c, 0x2c, 0x30, 0xaf, 0x3c, 0x23, 0xf3, 0x87, 0x44, 0x25, 0x2f, 0xd4, 0xfd, 0x88, 0x07,
	0xad, 0xed, 0xc3, 0xc6, 0x39, 0xa8, 0xcb, 0x6a, 0xce, 0x03, 0x55, 0x6f, 0x52, 0xd7, 0xee, 0x77,
	0xee, 0xa6, 0x62, 0x23, 0xe5, 0x05, 0x47, 0xc6, 0x7a, 0x76, 0xf8, 0x9d, 0x00, 0x5b, 0x8d, 0x9c,
	0x98, 0xee, 0x68, 0xd3, 0xd5, 0x5f, 0xdb, 0x6c, 0x3c, 0x79, 0x9a, 0xbc, 0x38, 0xe9, 0xee, 0x6d,
	0x58, 0x4f, 0x8a, 0xe2, 0x51, 0xa8, 0xca, 0x33, 0x4d, 0xb3, 0xbe, 0xcc, 0xb8, 0xfa, 0xdd, 0xe2,
	0xd4, 0x0d, 0x47, 0x9c, 0x78, 0x53, 0x0f, 0x3b, 0x71, 0x9f, 0x27, 0xb9, 0xea, 0x27, 0xe1, 0x2d,
	0xee, 0xc4, 0x7a, 0xc2, 0x19, 0x90, 0xbe, 0xb1, 0xd9, 0x47, 0x13, 0x48, 0xe4, 0xc3, 0x24, 0x52,
	0xaa, 0x98, 0x73, 0xa9, 0xa0, 0xe4, 0x5a, 0x6f, 0xcd, 0x8a, 0x0f, 0x42, 0xdf, 0x29, 0x40, 0x1f,
	0xf8, 0xce, 0x58, 0x93, 0x44, 0x01, 0x40, 0xc7, 0xf4, 0x2c, 0xfe, 0x0f, 0x54, 0xa9, 0xfd, 0x74,
	0x14, 0x26, 0x5a, 0xcf, 0x84, 0xfb, 0xad, 0xcd, 0xde, 0x9b, 0xc0, 0x25, 0xca, 0xc5, 0x36, 0xae,
	0x3c, 0x07, 0xd6, 0xa0, 0x90, 0x43, 0xb9, 0x0e, 0x1c, 0x6e, 0xb7, 0x68, 0xb6, 0x0f, 0x9c, 0xc4,
	0x3d, 0xce, 0x14, 0x1d, 0x5f, 0xd0, 0xd0, 0xd9, 0xeb, 0x2a, 0x45, 0xaf, 0x91, 0x14, 0x66, 0x2b,
	0xcd, 0x58, 0x6b, 0x5b, 0x29, 0x2e, 0xd5, 0xf4, 0x9c, 0x18, 0x76, 0x68, 0x42, 0x69, 0x35, 0x8b,
	0x0a, 0x73, 0xe4, 0xc0, 0x73, 0xef, 0xdd, 0x8e, 0x48, 0xc1, 0xc9, 0x01, 0x1c, 0x5b, 0x4a, 0xdf,
	0xf3, 0xd5, 0xa0, 0xac, 0xed, 0xd9, 0xe0, 0x9b, 0x33, 0x0f, 0x3e, 0x93, 0x83, 0xdf, 0xd9, 0xec,
	0xf3, 0xe2, 0xe8, 0xc2, 0x76, 0x43, 0x72, 0x03, 0x7c, 0x20, 0x37, 0x2f, 0xc0, 0xbc, 0xba, 0x52,
	0xcc, 0xba, 0x33, 0x5b, 0xe4, 0xb2, 0xcc, 0x7b, 0x62, 0x07, 0x67, 0x12, 0xea, 0xb4, 0xde, 0x09,
	0x71, 0x94, 0x04, 0x9c, 0x77, 0x77, 0xb9, 0x70, 0xa5, 0xcf, 0x75, 0xe9, 0x33, 0x97, 0x03, 0x41,
	0x4f, 0x9b, 0x52, 0x3f, 0xc9, 0xa1, 0xcb, 0x3e, 0xad, 0xc0, 0x59, 0x03, 0xa9, 0x5b, 0x61, 0xe2,
	0xf5, 0xc6, 0xff, 0x8a, 0x57, 0x7e, 0x83, 0x95, 0xce, 0x25, 0x6a, 0xb5, 0x9b, 0x9c, 0x46, 0x09,
	0xe5, 0xad, 0x9a, 0xe6, 0x6d, 0x72, 0x40, 0xb2, 0xa6, 0x31, 0x40, 0x33, 0x44, 0xfa, 0x7b, 0x9b,
	0xfd, 0x66, 0x8e, 0x28, 0x25, 0x71, 0x62, 0xf1, 0xcd, 0xe4, 0xd0, 0xb4, 0x4d, 0xcf, 0x1c, 0x85,
	0x05, 0xf7, 0x6b, 0x66, 0xf7, 0xff, 0x07, 0xf5, 0x74, 0x22, 0xe5, 0x4b, 0xce, 0x53, 0x07, 0x12,
	0x52, 0xff, 0xa3, 0x48, 0x5d, 0x45, 0x9b, 0xac, 0x89, 0xfa, 0x4b, 0x60, 0xab, 0xa5, 0x45, 0xb7,
	0xcf, 0x09, 0x3b, 0x4b, 0x39, 0x88, 0xca, 0xb7, 0xf2, 0x7a, 0x62, 0x99, 0x79, 0x5f, 0x84, 0xe5,
	0xdc, 0xe8, 0xaa, 0x3f, 0x6b, 0x8d, 0x31, 0x91, 0xff, 0xc1, 0x66, 0xef, 0x17, 0x86, 0xa3, 0xe2,
	0x8e, 0xcd, 0xef, 0x4a, 0xc1, 0x2a, 0x6d, 0x90, 0x18, 0xf5, 0x88, 0xfe, 0xd0, 0x1a, 0x6f, 0x00,
	0x7b, 0x64, 0xb3, 0x2b, 0x85, 0x21, 0xa4, 0xfa, 0x9e, 0x0b, 0x1a, 0x1d, 0xb4, 0xf4, 0x8b, 0x0f,
	0xbd, 0x40, 0xcb, 0x13, 0xa6, 0xcc, 0x0d, 0xd3, 0xcf, 0x21, 0x14, 0x8b, 0xe9, 0x43, 0x74, 0xfd,
	0xf4, 0xc6, 0x5d, 0x56, 0xcc, 0xbc, 0xb7, 0xad, 0x67, 0x76, 0xf8, 0x47, 0x9b, 0xbd, 0x5c, 0x48,
	0x16, 0x6e, 0x3e, 0x7a, 0x8a, 0x10, 0x4b, 0x2a, 0x78, 0x54, 0x68, 0xd5, 0x65, 0x15, 0xb9, 0xb1,
	0x35, 0xcb, 0xc6, 0xb4, 0xcd, 0x5f, 0x0b, 0x1f, 0xcc, 0xa8, 0xe2, 0x9f, 0x6c, 0xf6, 0xa6, 0xd1,
	0x5e, 0xab, 0x3f, 0x36, 0x70, 0xfa, 0xb9, 0x54, 0x9b, 0x71, 0xfe, 0xb3, 0x0a, 0x6c, 0xaa, 0x2c,
	0x5c, 0x0f, 0xe3, 0xc1, 0x91, 0x1e, 0x79, 0x74, 0x7e, 0x13, 0xac, 0xb0, 0x73, 0x77, 0x6a, 0xf8,
	0x95, 0x38, 0xab, 0x2d, 0x11, 0xe7, 0xe1, 0xd1, 0xd4, 0x3c, 0xb4, 0x4e, 0x9e, 0x87, 0x9b, 0x29,
	0x9b, 0xa5, 0x8c, 0xcd, 0xe3, 0xbf, 0x2d, 0xf6, 0x36, 0x6c, 0xe8, 0x9a, 0xc0, 0x0e, 0xd3, 0x7b,
	0x33, 0x91, 0x29, 0x6d, 0xbf, 0x2a, 0x52, 0x06, 0x84, 0x5f, 0x25, 0x42, 0xfe, 0x85, 0xb2, 0x1f,
	0xf8, 0xf8, 0x45, 0xd0, 0x96, 0xdf, 0x4c, 0x7a, 0x6a, 0x85, 0xf2, 0x95, 0x2a, 0x0b, 0x53, 0x48,
	0x7e, 0xb6, 0x59, 0x1b, 0xce, 0x2b, 0x0e, 0x05, 0x9c, 0x56, 0x86, 0x33, 0x55, 0xa7, 0x39, 0xe8,
	0xdc, 0x09, 0xa0, 0xfb, 0x70, 0x2a, 0x6d, 0xd4, 0xf4, 0x4b, 0x92, 0x90, 0x9e, 0xe1, 0x63, 0xd2,
	0x04, 0xf8, 0x8b, 0xcd, 0x5e, 0x83, 0x35, 0x65, 0xd7, 0xa6, 0xaf, 0x55, 0x35, 0x95, 0xcb, 0x9f,
	0xba, 0xa6, 0x83, 0x8f, 0xa7, 0x0f, 0x6a, 0xc1, 0x7b, 0xfa, 0xc1, 0xcb, 0xd0, 0xb8, 0x2d, 0x38,
	0x45, 0xe2, 0x20, 0xbc, 0xcf, 0xe3, 0xd9, 0x65, 0xf9, 0xc4, 0xc6, 0x8d, 0x6c, 0xd2, 0x56, 0x37,
	0x58, 0x12, 0x26, 0x8e, 0x8f, 0x92, 0x33, 0xfb, 0xa6, 0x27, 0xf6, 0x3f, 0x01, 0x00, 0x00, 0xff,
	0xff, 0xad, 0xec, 0x66, 0x49, 0x0d, 0x11, 0x00, 0x00,
}
