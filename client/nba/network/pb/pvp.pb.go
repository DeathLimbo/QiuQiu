// Code generated by protoc-gen-go.
// source: pvp.proto
// DO NOT EDIT!

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 玩家阵型更新信息
type GamerSquadInfoUpdateType int32

const (
	GamerSquadInfoUpdateType_gsi_Update GamerSquadInfoUpdateType = 1
	GamerSquadInfoUpdateType_gsi_Del    GamerSquadInfoUpdateType = 2
)

var GamerSquadInfoUpdateType_name = map[int32]string{
	1: "gsi_Update",
	2: "gsi_Del",
}
var GamerSquadInfoUpdateType_value = map[string]int32{
	"gsi_Update": 1,
	"gsi_Del":    2,
}

func (x GamerSquadInfoUpdateType) Enum() *GamerSquadInfoUpdateType {
	p := new(GamerSquadInfoUpdateType)
	*p = x
	return p
}
func (x GamerSquadInfoUpdateType) String() string {
	return proto.EnumName(GamerSquadInfoUpdateType_name, int32(x))
}
func (x *GamerSquadInfoUpdateType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GamerSquadInfoUpdateType_value, data, "GamerSquadInfoUpdateType")
	if err != nil {
		return err
	}
	*x = GamerSquadInfoUpdateType(value)
	return nil
}
func (GamerSquadInfoUpdateType) EnumDescriptor() ([]byte, []int) { return fileDescriptor53, []int{0} }

type GamerPvpInfoC2S_MsgID int32

const (
	GamerPvpInfoC2S_eMsgID GamerPvpInfoC2S_MsgID = 1025
)

var GamerPvpInfoC2S_MsgID_name = map[int32]string{
	1025: "eMsgID",
}
var GamerPvpInfoC2S_MsgID_value = map[string]int32{
	"eMsgID": 1025,
}

func (x GamerPvpInfoC2S_MsgID) Enum() *GamerPvpInfoC2S_MsgID {
	p := new(GamerPvpInfoC2S_MsgID)
	*p = x
	return p
}
func (x GamerPvpInfoC2S_MsgID) String() string {
	return proto.EnumName(GamerPvpInfoC2S_MsgID_name, int32(x))
}
func (x *GamerPvpInfoC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GamerPvpInfoC2S_MsgID_value, data, "GamerPvpInfoC2S_MsgID")
	if err != nil {
		return err
	}
	*x = GamerPvpInfoC2S_MsgID(value)
	return nil
}
func (GamerPvpInfoC2S_MsgID) EnumDescriptor() ([]byte, []int) { return fileDescriptor53, []int{18, 0} }

type GamerPvpInfoS2C_MsgID int32

const (
	GamerPvpInfoS2C_eMsgID GamerPvpInfoS2C_MsgID = 1025
)

var GamerPvpInfoS2C_MsgID_name = map[int32]string{
	1025: "eMsgID",
}
var GamerPvpInfoS2C_MsgID_value = map[string]int32{
	"eMsgID": 1025,
}

func (x GamerPvpInfoS2C_MsgID) Enum() *GamerPvpInfoS2C_MsgID {
	p := new(GamerPvpInfoS2C_MsgID)
	*p = x
	return p
}
func (x GamerPvpInfoS2C_MsgID) String() string {
	return proto.EnumName(GamerPvpInfoS2C_MsgID_name, int32(x))
}
func (x *GamerPvpInfoS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GamerPvpInfoS2C_MsgID_value, data, "GamerPvpInfoS2C_MsgID")
	if err != nil {
		return err
	}
	*x = GamerPvpInfoS2C_MsgID(value)
	return nil
}
func (GamerPvpInfoS2C_MsgID) EnumDescriptor() ([]byte, []int) { return fileDescriptor53, []int{20, 0} }

type GamerPvpReflushC2S_MsgID int32

const (
	GamerPvpReflushC2S_eMsgID GamerPvpReflushC2S_MsgID = 1026
)

var GamerPvpReflushC2S_MsgID_name = map[int32]string{
	1026: "eMsgID",
}
var GamerPvpReflushC2S_MsgID_value = map[string]int32{
	"eMsgID": 1026,
}

func (x GamerPvpReflushC2S_MsgID) Enum() *GamerPvpReflushC2S_MsgID {
	p := new(GamerPvpReflushC2S_MsgID)
	*p = x
	return p
}
func (x GamerPvpReflushC2S_MsgID) String() string {
	return proto.EnumName(GamerPvpReflushC2S_MsgID_name, int32(x))
}
func (x *GamerPvpReflushC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GamerPvpReflushC2S_MsgID_value, data, "GamerPvpReflushC2S_MsgID")
	if err != nil {
		return err
	}
	*x = GamerPvpReflushC2S_MsgID(value)
	return nil
}
func (GamerPvpReflushC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor53, []int{22, 0}
}

type GamerPvpReflushS2C_MsgID int32

const (
	GamerPvpReflushS2C_eMsgID GamerPvpReflushS2C_MsgID = 1026
)

var GamerPvpReflushS2C_MsgID_name = map[int32]string{
	1026: "eMsgID",
}
var GamerPvpReflushS2C_MsgID_value = map[string]int32{
	"eMsgID": 1026,
}

func (x GamerPvpReflushS2C_MsgID) Enum() *GamerPvpReflushS2C_MsgID {
	p := new(GamerPvpReflushS2C_MsgID)
	*p = x
	return p
}
func (x GamerPvpReflushS2C_MsgID) String() string {
	return proto.EnumName(GamerPvpReflushS2C_MsgID_name, int32(x))
}
func (x *GamerPvpReflushS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GamerPvpReflushS2C_MsgID_value, data, "GamerPvpReflushS2C_MsgID")
	if err != nil {
		return err
	}
	*x = GamerPvpReflushS2C_MsgID(value)
	return nil
}
func (GamerPvpReflushS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor53, []int{23, 0}
}

type GamerPvpChallengC2S_MsgID int32

const (
	GamerPvpChallengC2S_eMsgID GamerPvpChallengC2S_MsgID = 1027
)

var GamerPvpChallengC2S_MsgID_name = map[int32]string{
	1027: "eMsgID",
}
var GamerPvpChallengC2S_MsgID_value = map[string]int32{
	"eMsgID": 1027,
}

func (x GamerPvpChallengC2S_MsgID) Enum() *GamerPvpChallengC2S_MsgID {
	p := new(GamerPvpChallengC2S_MsgID)
	*p = x
	return p
}
func (x GamerPvpChallengC2S_MsgID) String() string {
	return proto.EnumName(GamerPvpChallengC2S_MsgID_name, int32(x))
}
func (x *GamerPvpChallengC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GamerPvpChallengC2S_MsgID_value, data, "GamerPvpChallengC2S_MsgID")
	if err != nil {
		return err
	}
	*x = GamerPvpChallengC2S_MsgID(value)
	return nil
}
func (GamerPvpChallengC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor53, []int{24, 0}
}

type GamerPvpChallengS2C_MsgID int32

const (
	GamerPvpChallengS2C_eMsgID GamerPvpChallengS2C_MsgID = 1027
)

var GamerPvpChallengS2C_MsgID_name = map[int32]string{
	1027: "eMsgID",
}
var GamerPvpChallengS2C_MsgID_value = map[string]int32{
	"eMsgID": 1027,
}

func (x GamerPvpChallengS2C_MsgID) Enum() *GamerPvpChallengS2C_MsgID {
	p := new(GamerPvpChallengS2C_MsgID)
	*p = x
	return p
}
func (x GamerPvpChallengS2C_MsgID) String() string {
	return proto.EnumName(GamerPvpChallengS2C_MsgID_name, int32(x))
}
func (x *GamerPvpChallengS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GamerPvpChallengS2C_MsgID_value, data, "GamerPvpChallengS2C_MsgID")
	if err != nil {
		return err
	}
	*x = GamerPvpChallengS2C_MsgID(value)
	return nil
}
func (GamerPvpChallengS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor53, []int{25, 0}
}

type GamerPvpCountS2C_MsgID int32

const (
	GamerPvpCountS2C_eMsgID GamerPvpCountS2C_MsgID = 1028
)

var GamerPvpCountS2C_MsgID_name = map[int32]string{
	1028: "eMsgID",
}
var GamerPvpCountS2C_MsgID_value = map[string]int32{
	"eMsgID": 1028,
}

func (x GamerPvpCountS2C_MsgID) Enum() *GamerPvpCountS2C_MsgID {
	p := new(GamerPvpCountS2C_MsgID)
	*p = x
	return p
}
func (x GamerPvpCountS2C_MsgID) String() string {
	return proto.EnumName(GamerPvpCountS2C_MsgID_name, int32(x))
}
func (x *GamerPvpCountS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GamerPvpCountS2C_MsgID_value, data, "GamerPvpCountS2C_MsgID")
	if err != nil {
		return err
	}
	*x = GamerPvpCountS2C_MsgID(value)
	return nil
}
func (GamerPvpCountS2C_MsgID) EnumDescriptor() ([]byte, []int) { return fileDescriptor53, []int{26, 0} }

type GamerPvpInfoExC2S_MsgID int32

const (
	GamerPvpInfoExC2S_eMsgID GamerPvpInfoExC2S_MsgID = 1029
)

var GamerPvpInfoExC2S_MsgID_name = map[int32]string{
	1029: "eMsgID",
}
var GamerPvpInfoExC2S_MsgID_value = map[string]int32{
	"eMsgID": 1029,
}

func (x GamerPvpInfoExC2S_MsgID) Enum() *GamerPvpInfoExC2S_MsgID {
	p := new(GamerPvpInfoExC2S_MsgID)
	*p = x
	return p
}
func (x GamerPvpInfoExC2S_MsgID) String() string {
	return proto.EnumName(GamerPvpInfoExC2S_MsgID_name, int32(x))
}
func (x *GamerPvpInfoExC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GamerPvpInfoExC2S_MsgID_value, data, "GamerPvpInfoExC2S_MsgID")
	if err != nil {
		return err
	}
	*x = GamerPvpInfoExC2S_MsgID(value)
	return nil
}
func (GamerPvpInfoExC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor53, []int{27, 0}
}

type GamerPvpInfoExS2C_MsgID int32

const (
	GamerPvpInfoExS2C_eMsgID GamerPvpInfoExS2C_MsgID = 1029
)

var GamerPvpInfoExS2C_MsgID_name = map[int32]string{
	1029: "eMsgID",
}
var GamerPvpInfoExS2C_MsgID_value = map[string]int32{
	"eMsgID": 1029,
}

func (x GamerPvpInfoExS2C_MsgID) Enum() *GamerPvpInfoExS2C_MsgID {
	p := new(GamerPvpInfoExS2C_MsgID)
	*p = x
	return p
}
func (x GamerPvpInfoExS2C_MsgID) String() string {
	return proto.EnumName(GamerPvpInfoExS2C_MsgID_name, int32(x))
}
func (x *GamerPvpInfoExS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GamerPvpInfoExS2C_MsgID_value, data, "GamerPvpInfoExS2C_MsgID")
	if err != nil {
		return err
	}
	*x = GamerPvpInfoExS2C_MsgID(value)
	return nil
}
func (GamerPvpInfoExS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor53, []int{28, 0}
}

type GamerPvpRankingListC2S_MsgID int32

const (
	GamerPvpRankingListC2S_eMsgID GamerPvpRankingListC2S_MsgID = 1030
)

var GamerPvpRankingListC2S_MsgID_name = map[int32]string{
	1030: "eMsgID",
}
var GamerPvpRankingListC2S_MsgID_value = map[string]int32{
	"eMsgID": 1030,
}

func (x GamerPvpRankingListC2S_MsgID) Enum() *GamerPvpRankingListC2S_MsgID {
	p := new(GamerPvpRankingListC2S_MsgID)
	*p = x
	return p
}
func (x GamerPvpRankingListC2S_MsgID) String() string {
	return proto.EnumName(GamerPvpRankingListC2S_MsgID_name, int32(x))
}
func (x *GamerPvpRankingListC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GamerPvpRankingListC2S_MsgID_value, data, "GamerPvpRankingListC2S_MsgID")
	if err != nil {
		return err
	}
	*x = GamerPvpRankingListC2S_MsgID(value)
	return nil
}
func (GamerPvpRankingListC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor53, []int{30, 0}
}

type GamerPvpRankingListS2C_MsgID int32

const (
	GamerPvpRankingListS2C_eMsgID GamerPvpRankingListS2C_MsgID = 1030
)

var GamerPvpRankingListS2C_MsgID_name = map[int32]string{
	1030: "eMsgID",
}
var GamerPvpRankingListS2C_MsgID_value = map[string]int32{
	"eMsgID": 1030,
}

func (x GamerPvpRankingListS2C_MsgID) Enum() *GamerPvpRankingListS2C_MsgID {
	p := new(GamerPvpRankingListS2C_MsgID)
	*p = x
	return p
}
func (x GamerPvpRankingListS2C_MsgID) String() string {
	return proto.EnumName(GamerPvpRankingListS2C_MsgID_name, int32(x))
}
func (x *GamerPvpRankingListS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GamerPvpRankingListS2C_MsgID_value, data, "GamerPvpRankingListS2C_MsgID")
	if err != nil {
		return err
	}
	*x = GamerPvpRankingListS2C_MsgID(value)
	return nil
}
func (GamerPvpRankingListS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor53, []int{31, 0}
}

type GamerPvpReqChangeBodyHeadC2S_MsgID int32

const (
	GamerPvpReqChangeBodyHeadC2S_eMsgID GamerPvpReqChangeBodyHeadC2S_MsgID = 1031
)

var GamerPvpReqChangeBodyHeadC2S_MsgID_name = map[int32]string{
	1031: "eMsgID",
}
var GamerPvpReqChangeBodyHeadC2S_MsgID_value = map[string]int32{
	"eMsgID": 1031,
}

func (x GamerPvpReqChangeBodyHeadC2S_MsgID) Enum() *GamerPvpReqChangeBodyHeadC2S_MsgID {
	p := new(GamerPvpReqChangeBodyHeadC2S_MsgID)
	*p = x
	return p
}
func (x GamerPvpReqChangeBodyHeadC2S_MsgID) String() string {
	return proto.EnumName(GamerPvpReqChangeBodyHeadC2S_MsgID_name, int32(x))
}
func (x *GamerPvpReqChangeBodyHeadC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GamerPvpReqChangeBodyHeadC2S_MsgID_value, data, "GamerPvpReqChangeBodyHeadC2S_MsgID")
	if err != nil {
		return err
	}
	*x = GamerPvpReqChangeBodyHeadC2S_MsgID(value)
	return nil
}
func (GamerPvpReqChangeBodyHeadC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor53, []int{32, 0}
}

type GamerPvpReqChangeBodyHeadS2C_MsgID int32

const (
	GamerPvpReqChangeBodyHeadS2C_eMsgID GamerPvpReqChangeBodyHeadS2C_MsgID = 1031
)

var GamerPvpReqChangeBodyHeadS2C_MsgID_name = map[int32]string{
	1031: "eMsgID",
}
var GamerPvpReqChangeBodyHeadS2C_MsgID_value = map[string]int32{
	"eMsgID": 1031,
}

func (x GamerPvpReqChangeBodyHeadS2C_MsgID) Enum() *GamerPvpReqChangeBodyHeadS2C_MsgID {
	p := new(GamerPvpReqChangeBodyHeadS2C_MsgID)
	*p = x
	return p
}
func (x GamerPvpReqChangeBodyHeadS2C_MsgID) String() string {
	return proto.EnumName(GamerPvpReqChangeBodyHeadS2C_MsgID_name, int32(x))
}
func (x *GamerPvpReqChangeBodyHeadS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GamerPvpReqChangeBodyHeadS2C_MsgID_value, data, "GamerPvpReqChangeBodyHeadS2C_MsgID")
	if err != nil {
		return err
	}
	*x = GamerPvpReqChangeBodyHeadS2C_MsgID(value)
	return nil
}
func (GamerPvpReqChangeBodyHeadS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor53, []int{33, 0}
}

type GamerPvpReqDayCumulativeRewardC2S_MsgID int32

const (
	GamerPvpReqDayCumulativeRewardC2S_eMsgID GamerPvpReqDayCumulativeRewardC2S_MsgID = 1032
)

var GamerPvpReqDayCumulativeRewardC2S_MsgID_name = map[int32]string{
	1032: "eMsgID",
}
var GamerPvpReqDayCumulativeRewardC2S_MsgID_value = map[string]int32{
	"eMsgID": 1032,
}

func (x GamerPvpReqDayCumulativeRewardC2S_MsgID) Enum() *GamerPvpReqDayCumulativeRewardC2S_MsgID {
	p := new(GamerPvpReqDayCumulativeRewardC2S_MsgID)
	*p = x
	return p
}
func (x GamerPvpReqDayCumulativeRewardC2S_MsgID) String() string {
	return proto.EnumName(GamerPvpReqDayCumulativeRewardC2S_MsgID_name, int32(x))
}
func (x *GamerPvpReqDayCumulativeRewardC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GamerPvpReqDayCumulativeRewardC2S_MsgID_value, data, "GamerPvpReqDayCumulativeRewardC2S_MsgID")
	if err != nil {
		return err
	}
	*x = GamerPvpReqDayCumulativeRewardC2S_MsgID(value)
	return nil
}
func (GamerPvpReqDayCumulativeRewardC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor53, []int{34, 0}
}

type GamerPvpReqDayCumulativeRewardS2C_MsgID int32

const (
	GamerPvpReqDayCumulativeRewardS2C_eMsgID GamerPvpReqDayCumulativeRewardS2C_MsgID = 1032
)

var GamerPvpReqDayCumulativeRewardS2C_MsgID_name = map[int32]string{
	1032: "eMsgID",
}
var GamerPvpReqDayCumulativeRewardS2C_MsgID_value = map[string]int32{
	"eMsgID": 1032,
}

func (x GamerPvpReqDayCumulativeRewardS2C_MsgID) Enum() *GamerPvpReqDayCumulativeRewardS2C_MsgID {
	p := new(GamerPvpReqDayCumulativeRewardS2C_MsgID)
	*p = x
	return p
}
func (x GamerPvpReqDayCumulativeRewardS2C_MsgID) String() string {
	return proto.EnumName(GamerPvpReqDayCumulativeRewardS2C_MsgID_name, int32(x))
}
func (x *GamerPvpReqDayCumulativeRewardS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GamerPvpReqDayCumulativeRewardS2C_MsgID_value, data, "GamerPvpReqDayCumulativeRewardS2C_MsgID")
	if err != nil {
		return err
	}
	*x = GamerPvpReqDayCumulativeRewardS2C_MsgID(value)
	return nil
}
func (GamerPvpReqDayCumulativeRewardS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor53, []int{35, 0}
}

type GamerPvpReqHistoryRankRewardC2S_MsgID int32

const (
	GamerPvpReqHistoryRankRewardC2S_eMsgID GamerPvpReqHistoryRankRewardC2S_MsgID = 1033
)

var GamerPvpReqHistoryRankRewardC2S_MsgID_name = map[int32]string{
	1033: "eMsgID",
}
var GamerPvpReqHistoryRankRewardC2S_MsgID_value = map[string]int32{
	"eMsgID": 1033,
}

func (x GamerPvpReqHistoryRankRewardC2S_MsgID) Enum() *GamerPvpReqHistoryRankRewardC2S_MsgID {
	p := new(GamerPvpReqHistoryRankRewardC2S_MsgID)
	*p = x
	return p
}
func (x GamerPvpReqHistoryRankRewardC2S_MsgID) String() string {
	return proto.EnumName(GamerPvpReqHistoryRankRewardC2S_MsgID_name, int32(x))
}
func (x *GamerPvpReqHistoryRankRewardC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GamerPvpReqHistoryRankRewardC2S_MsgID_value, data, "GamerPvpReqHistoryRankRewardC2S_MsgID")
	if err != nil {
		return err
	}
	*x = GamerPvpReqHistoryRankRewardC2S_MsgID(value)
	return nil
}
func (GamerPvpReqHistoryRankRewardC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor53, []int{36, 0}
}

type GamerPvpReqHistoryRankRewardS2C_MsgID int32

const (
	GamerPvpReqHistoryRankRewardS2C_eMsgID GamerPvpReqHistoryRankRewardS2C_MsgID = 1033
)

var GamerPvpReqHistoryRankRewardS2C_MsgID_name = map[int32]string{
	1033: "eMsgID",
}
var GamerPvpReqHistoryRankRewardS2C_MsgID_value = map[string]int32{
	"eMsgID": 1033,
}

func (x GamerPvpReqHistoryRankRewardS2C_MsgID) Enum() *GamerPvpReqHistoryRankRewardS2C_MsgID {
	p := new(GamerPvpReqHistoryRankRewardS2C_MsgID)
	*p = x
	return p
}
func (x GamerPvpReqHistoryRankRewardS2C_MsgID) String() string {
	return proto.EnumName(GamerPvpReqHistoryRankRewardS2C_MsgID_name, int32(x))
}
func (x *GamerPvpReqHistoryRankRewardS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GamerPvpReqHistoryRankRewardS2C_MsgID_value, data, "GamerPvpReqHistoryRankRewardS2C_MsgID")
	if err != nil {
		return err
	}
	*x = GamerPvpReqHistoryRankRewardS2C_MsgID(value)
	return nil
}
func (GamerPvpReqHistoryRankRewardS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor53, []int{37, 0}
}

type GamerPvpReqAllHistoryRankRewardC2S_MsgID int32

const (
	GamerPvpReqAllHistoryRankRewardC2S_eMsgID GamerPvpReqAllHistoryRankRewardC2S_MsgID = 1034
)

var GamerPvpReqAllHistoryRankRewardC2S_MsgID_name = map[int32]string{
	1034: "eMsgID",
}
var GamerPvpReqAllHistoryRankRewardC2S_MsgID_value = map[string]int32{
	"eMsgID": 1034,
}

func (x GamerPvpReqAllHistoryRankRewardC2S_MsgID) Enum() *GamerPvpReqAllHistoryRankRewardC2S_MsgID {
	p := new(GamerPvpReqAllHistoryRankRewardC2S_MsgID)
	*p = x
	return p
}
func (x GamerPvpReqAllHistoryRankRewardC2S_MsgID) String() string {
	return proto.EnumName(GamerPvpReqAllHistoryRankRewardC2S_MsgID_name, int32(x))
}
func (x *GamerPvpReqAllHistoryRankRewardC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GamerPvpReqAllHistoryRankRewardC2S_MsgID_value, data, "GamerPvpReqAllHistoryRankRewardC2S_MsgID")
	if err != nil {
		return err
	}
	*x = GamerPvpReqAllHistoryRankRewardC2S_MsgID(value)
	return nil
}
func (GamerPvpReqAllHistoryRankRewardC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor53, []int{38, 0}
}

type GamerPvpReqAllHistoryRankRewardS2C_MsgID int32

const (
	GamerPvpReqAllHistoryRankRewardS2C_eMsgID GamerPvpReqAllHistoryRankRewardS2C_MsgID = 1034
)

var GamerPvpReqAllHistoryRankRewardS2C_MsgID_name = map[int32]string{
	1034: "eMsgID",
}
var GamerPvpReqAllHistoryRankRewardS2C_MsgID_value = map[string]int32{
	"eMsgID": 1034,
}

func (x GamerPvpReqAllHistoryRankRewardS2C_MsgID) Enum() *GamerPvpReqAllHistoryRankRewardS2C_MsgID {
	p := new(GamerPvpReqAllHistoryRankRewardS2C_MsgID)
	*p = x
	return p
}
func (x GamerPvpReqAllHistoryRankRewardS2C_MsgID) String() string {
	return proto.EnumName(GamerPvpReqAllHistoryRankRewardS2C_MsgID_name, int32(x))
}
func (x *GamerPvpReqAllHistoryRankRewardS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GamerPvpReqAllHistoryRankRewardS2C_MsgID_value, data, "GamerPvpReqAllHistoryRankRewardS2C_MsgID")
	if err != nil {
		return err
	}
	*x = GamerPvpReqAllHistoryRankRewardS2C_MsgID(value)
	return nil
}
func (GamerPvpReqAllHistoryRankRewardS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor53, []int{39, 0}
}

type GamerPvpReqSquadC2S_MsgID int32

const (
	GamerPvpReqSquadC2S_eMsgID GamerPvpReqSquadC2S_MsgID = 1035
)

var GamerPvpReqSquadC2S_MsgID_name = map[int32]string{
	1035: "eMsgID",
}
var GamerPvpReqSquadC2S_MsgID_value = map[string]int32{
	"eMsgID": 1035,
}

func (x GamerPvpReqSquadC2S_MsgID) Enum() *GamerPvpReqSquadC2S_MsgID {
	p := new(GamerPvpReqSquadC2S_MsgID)
	*p = x
	return p
}
func (x GamerPvpReqSquadC2S_MsgID) String() string {
	return proto.EnumName(GamerPvpReqSquadC2S_MsgID_name, int32(x))
}
func (x *GamerPvpReqSquadC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GamerPvpReqSquadC2S_MsgID_value, data, "GamerPvpReqSquadC2S_MsgID")
	if err != nil {
		return err
	}
	*x = GamerPvpReqSquadC2S_MsgID(value)
	return nil
}
func (GamerPvpReqSquadC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor53, []int{40, 0}
}

type GamerPvpReqSquadS2C_MsgID int32

const (
	GamerPvpReqSquadS2C_eMsgID GamerPvpReqSquadS2C_MsgID = 1035
)

var GamerPvpReqSquadS2C_MsgID_name = map[int32]string{
	1035: "eMsgID",
}
var GamerPvpReqSquadS2C_MsgID_value = map[string]int32{
	"eMsgID": 1035,
}

func (x GamerPvpReqSquadS2C_MsgID) Enum() *GamerPvpReqSquadS2C_MsgID {
	p := new(GamerPvpReqSquadS2C_MsgID)
	*p = x
	return p
}
func (x GamerPvpReqSquadS2C_MsgID) String() string {
	return proto.EnumName(GamerPvpReqSquadS2C_MsgID_name, int32(x))
}
func (x *GamerPvpReqSquadS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GamerPvpReqSquadS2C_MsgID_value, data, "GamerPvpReqSquadS2C_MsgID")
	if err != nil {
		return err
	}
	*x = GamerPvpReqSquadS2C_MsgID(value)
	return nil
}
func (GamerPvpReqSquadS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor53, []int{41, 0}
}

type GamerPvpChallengeReportC2S_MsgID int32

const (
	GamerPvpChallengeReportC2S_eMsgID GamerPvpChallengeReportC2S_MsgID = 1037
)

var GamerPvpChallengeReportC2S_MsgID_name = map[int32]string{
	1037: "eMsgID",
}
var GamerPvpChallengeReportC2S_MsgID_value = map[string]int32{
	"eMsgID": 1037,
}

func (x GamerPvpChallengeReportC2S_MsgID) Enum() *GamerPvpChallengeReportC2S_MsgID {
	p := new(GamerPvpChallengeReportC2S_MsgID)
	*p = x
	return p
}
func (x GamerPvpChallengeReportC2S_MsgID) String() string {
	return proto.EnumName(GamerPvpChallengeReportC2S_MsgID_name, int32(x))
}
func (x *GamerPvpChallengeReportC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GamerPvpChallengeReportC2S_MsgID_value, data, "GamerPvpChallengeReportC2S_MsgID")
	if err != nil {
		return err
	}
	*x = GamerPvpChallengeReportC2S_MsgID(value)
	return nil
}
func (GamerPvpChallengeReportC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor53, []int{42, 0}
}

type GamerPvpChallengeReportS2C_MsgID int32

const (
	GamerPvpChallengeReportS2C_eMsgID GamerPvpChallengeReportS2C_MsgID = 1037
)

var GamerPvpChallengeReportS2C_MsgID_name = map[int32]string{
	1037: "eMsgID",
}
var GamerPvpChallengeReportS2C_MsgID_value = map[string]int32{
	"eMsgID": 1037,
}

func (x GamerPvpChallengeReportS2C_MsgID) Enum() *GamerPvpChallengeReportS2C_MsgID {
	p := new(GamerPvpChallengeReportS2C_MsgID)
	*p = x
	return p
}
func (x GamerPvpChallengeReportS2C_MsgID) String() string {
	return proto.EnumName(GamerPvpChallengeReportS2C_MsgID_name, int32(x))
}
func (x *GamerPvpChallengeReportS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GamerPvpChallengeReportS2C_MsgID_value, data, "GamerPvpChallengeReportS2C_MsgID")
	if err != nil {
		return err
	}
	*x = GamerPvpChallengeReportS2C_MsgID(value)
	return nil
}
func (GamerPvpChallengeReportS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor53, []int{43, 0}
}

type GamerPvpSwapRankC2S_MsgID int32

const (
	GamerPvpSwapRankC2S_eMsgID GamerPvpSwapRankC2S_MsgID = 1038
)

var GamerPvpSwapRankC2S_MsgID_name = map[int32]string{
	1038: "eMsgID",
}
var GamerPvpSwapRankC2S_MsgID_value = map[string]int32{
	"eMsgID": 1038,
}

func (x GamerPvpSwapRankC2S_MsgID) Enum() *GamerPvpSwapRankC2S_MsgID {
	p := new(GamerPvpSwapRankC2S_MsgID)
	*p = x
	return p
}
func (x GamerPvpSwapRankC2S_MsgID) String() string {
	return proto.EnumName(GamerPvpSwapRankC2S_MsgID_name, int32(x))
}
func (x *GamerPvpSwapRankC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GamerPvpSwapRankC2S_MsgID_value, data, "GamerPvpSwapRankC2S_MsgID")
	if err != nil {
		return err
	}
	*x = GamerPvpSwapRankC2S_MsgID(value)
	return nil
}
func (GamerPvpSwapRankC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor53, []int{44, 0}
}

// 玩家匹配玩法阵型列表
type MatchGameSquadTypeInfo struct {
	LsId             *int32  `protobuf:"varint,1,opt,name=lsId" json:"lsId,omitempty"`
	Gid              *int32  `protobuf:"varint,2,opt,name=gid" json:"gid,omitempty"`
	SquadTypeList    []int32 `protobuf:"varint,3,rep,name=squadTypeList" json:"squadTypeList,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MatchGameSquadTypeInfo) Reset()                    { *m = MatchGameSquadTypeInfo{} }
func (m *MatchGameSquadTypeInfo) String() string            { return proto.CompactTextString(m) }
func (*MatchGameSquadTypeInfo) ProtoMessage()               {}
func (*MatchGameSquadTypeInfo) Descriptor() ([]byte, []int) { return fileDescriptor53, []int{0} }

func (m *MatchGameSquadTypeInfo) GetLsId() int32 {
	if m != nil && m.LsId != nil {
		return *m.LsId
	}
	return 0
}

func (m *MatchGameSquadTypeInfo) GetGid() int32 {
	if m != nil && m.Gid != nil {
		return *m.Gid
	}
	return 0
}

func (m *MatchGameSquadTypeInfo) GetSquadTypeList() []int32 {
	if m != nil {
		return m.SquadTypeList
	}
	return nil
}

// 通知其它服务器进程同步阵型
type NoticeOtherServerSyncSquad struct {
	SquadType        *SquadType `protobuf:"varint,1,opt,name=squadType,enum=SquadType" json:"squadType,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *NoticeOtherServerSyncSquad) Reset()                    { *m = NoticeOtherServerSyncSquad{} }
func (m *NoticeOtherServerSyncSquad) String() string            { return proto.CompactTextString(m) }
func (*NoticeOtherServerSyncSquad) ProtoMessage()               {}
func (*NoticeOtherServerSyncSquad) Descriptor() ([]byte, []int) { return fileDescriptor53, []int{1} }

func (m *NoticeOtherServerSyncSquad) GetSquadType() SquadType {
	if m != nil && m.SquadType != nil {
		return *m.SquadType
	}
	return SquadType_SquadNo
}

// pvp的排名信息
type PvpRankInfo struct {
	Gid              *int32 `protobuf:"varint,1,opt,name=gid" json:"gid,omitempty"`
	Rank             *int32 `protobuf:"varint,2,opt,name=rank" json:"rank,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *PvpRankInfo) Reset()                    { *m = PvpRankInfo{} }
func (m *PvpRankInfo) String() string            { return proto.CompactTextString(m) }
func (*PvpRankInfo) ProtoMessage()               {}
func (*PvpRankInfo) Descriptor() ([]byte, []int) { return fileDescriptor53, []int{2} }

func (m *PvpRankInfo) GetGid() int32 {
	if m != nil && m.Gid != nil {
		return *m.Gid
	}
	return 0
}

func (m *PvpRankInfo) GetRank() int32 {
	if m != nil && m.Rank != nil {
		return *m.Rank
	}
	return 0
}

// pvp的机器人队伍信息
type PvpRobotTeamInfo struct {
	Gid              *int32                `protobuf:"varint,1,opt,name=gid" json:"gid,omitempty"`
	Starter          []*PvpRobotBallerInfo `protobuf:"bytes,2,rep,name=Starter" json:"Starter,omitempty"`
	Bench            []*PvpRobotBallerInfo `protobuf:"bytes,3,rep,name=Bench" json:"Bench,omitempty"`
	BattleValue      *int32                `protobuf:"varint,4,opt,name=BattleValue" json:"BattleValue,omitempty"`
	NpcLv            *int32                `protobuf:"varint,5,opt,name=NpcLv" json:"NpcLv,omitempty"`
	HalfId           *int32                `protobuf:"varint,6,opt,name=halfId" json:"halfId,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *PvpRobotTeamInfo) Reset()                    { *m = PvpRobotTeamInfo{} }
func (m *PvpRobotTeamInfo) String() string            { return proto.CompactTextString(m) }
func (*PvpRobotTeamInfo) ProtoMessage()               {}
func (*PvpRobotTeamInfo) Descriptor() ([]byte, []int) { return fileDescriptor53, []int{3} }

func (m *PvpRobotTeamInfo) GetGid() int32 {
	if m != nil && m.Gid != nil {
		return *m.Gid
	}
	return 0
}

func (m *PvpRobotTeamInfo) GetStarter() []*PvpRobotBallerInfo {
	if m != nil {
		return m.Starter
	}
	return nil
}

func (m *PvpRobotTeamInfo) GetBench() []*PvpRobotBallerInfo {
	if m != nil {
		return m.Bench
	}
	return nil
}

func (m *PvpRobotTeamInfo) GetBattleValue() int32 {
	if m != nil && m.BattleValue != nil {
		return *m.BattleValue
	}
	return 0
}

func (m *PvpRobotTeamInfo) GetNpcLv() int32 {
	if m != nil && m.NpcLv != nil {
		return *m.NpcLv
	}
	return 0
}

func (m *PvpRobotTeamInfo) GetHalfId() int32 {
	if m != nil && m.HalfId != nil {
		return *m.HalfId
	}
	return 0
}

// pvp的机器人球员信息
type PvpRobotBallerInfo struct {
	NIndexpos        *int32 `protobuf:"varint,1,opt,name=nIndexpos" json:"nIndexpos,omitempty"`
	NpcID            *int32 `protobuf:"varint,2,opt,name=npcID" json:"npcID,omitempty"`
	Quality          *int32 `protobuf:"varint,3,opt,name=quality" json:"quality,omitempty"`
	Level            *int32 `protobuf:"varint,4,opt,name=level" json:"level,omitempty"`
	Star             *int32 `protobuf:"varint,5,opt,name=star" json:"star,omitempty"`
	ExtraAttrs       *int32 `protobuf:"varint,7,opt,name=extraAttrs" json:"extraAttrs,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *PvpRobotBallerInfo) Reset()                    { *m = PvpRobotBallerInfo{} }
func (m *PvpRobotBallerInfo) String() string            { return proto.CompactTextString(m) }
func (*PvpRobotBallerInfo) ProtoMessage()               {}
func (*PvpRobotBallerInfo) Descriptor() ([]byte, []int) { return fileDescriptor53, []int{4} }

func (m *PvpRobotBallerInfo) GetNIndexpos() int32 {
	if m != nil && m.NIndexpos != nil {
		return *m.NIndexpos
	}
	return 0
}

func (m *PvpRobotBallerInfo) GetNpcID() int32 {
	if m != nil && m.NpcID != nil {
		return *m.NpcID
	}
	return 0
}

func (m *PvpRobotBallerInfo) GetQuality() int32 {
	if m != nil && m.Quality != nil {
		return *m.Quality
	}
	return 0
}

func (m *PvpRobotBallerInfo) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *PvpRobotBallerInfo) GetStar() int32 {
	if m != nil && m.Star != nil {
		return *m.Star
	}
	return 0
}

func (m *PvpRobotBallerInfo) GetExtraAttrs() int32 {
	if m != nil && m.ExtraAttrs != nil {
		return *m.ExtraAttrs
	}
	return 0
}

// pvp挑战过的信息（用于判断客户端显示是否已挑战胜利的标记）
type PvpChallengInfo struct {
	Gid              *int32 `protobuf:"varint,1,opt,name=gid" json:"gid,omitempty"`
	IsRobot          *bool  `protobuf:"varint,2,opt,name=isRobot" json:"isRobot,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *PvpChallengInfo) Reset()                    { *m = PvpChallengInfo{} }
func (m *PvpChallengInfo) String() string            { return proto.CompactTextString(m) }
func (*PvpChallengInfo) ProtoMessage()               {}
func (*PvpChallengInfo) Descriptor() ([]byte, []int) { return fileDescriptor53, []int{5} }

func (m *PvpChallengInfo) GetGid() int32 {
	if m != nil && m.Gid != nil {
		return *m.Gid
	}
	return 0
}

func (m *PvpChallengInfo) GetIsRobot() bool {
	if m != nil && m.IsRobot != nil {
		return *m.IsRobot
	}
	return false
}

// pvp战报的信息
type PvpChallengeReportInfo struct {
	Gid              *int32          `protobuf:"varint,1,opt,name=gid" json:"gid,omitempty"`
	IsRobot          *bool           `protobuf:"varint,2,opt,name=isRobot" json:"isRobot,omitempty"`
	IsMain           *bool           `protobuf:"varint,3,opt,name=isMain" json:"isMain,omitempty"`
	IsWin            *bool           `protobuf:"varint,4,opt,name=isWin" json:"isWin,omitempty"`
	Battle           *int32          `protobuf:"varint,5,opt,name=battle" json:"battle,omitempty"`
	TeamId           *int32          `protobuf:"varint,6,opt,name=teamId" json:"teamId,omitempty"`
	ChallengeTime    *int64          `protobuf:"varint,7,opt,name=challengeTime" json:"challengeTime,omitempty"`
	HalfId           *int32          `protobuf:"varint,8,opt,name=halfId" json:"halfId,omitempty"`
	Name             *string         `protobuf:"bytes,9,opt,name=name" json:"name,omitempty"`
	Rank             *int32          `protobuf:"varint,10,opt,name=rank" json:"rank,omitempty"`
	PvpHonor         *ItemVaryConfig `protobuf:"bytes,11,opt,name=pvpHonor" json:"pvpHonor,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *PvpChallengeReportInfo) Reset()                    { *m = PvpChallengeReportInfo{} }
func (m *PvpChallengeReportInfo) String() string            { return proto.CompactTextString(m) }
func (*PvpChallengeReportInfo) ProtoMessage()               {}
func (*PvpChallengeReportInfo) Descriptor() ([]byte, []int) { return fileDescriptor53, []int{6} }

func (m *PvpChallengeReportInfo) GetGid() int32 {
	if m != nil && m.Gid != nil {
		return *m.Gid
	}
	return 0
}

func (m *PvpChallengeReportInfo) GetIsRobot() bool {
	if m != nil && m.IsRobot != nil {
		return *m.IsRobot
	}
	return false
}

func (m *PvpChallengeReportInfo) GetIsMain() bool {
	if m != nil && m.IsMain != nil {
		return *m.IsMain
	}
	return false
}

func (m *PvpChallengeReportInfo) GetIsWin() bool {
	if m != nil && m.IsWin != nil {
		return *m.IsWin
	}
	return false
}

func (m *PvpChallengeReportInfo) GetBattle() int32 {
	if m != nil && m.Battle != nil {
		return *m.Battle
	}
	return 0
}

func (m *PvpChallengeReportInfo) GetTeamId() int32 {
	if m != nil && m.TeamId != nil {
		return *m.TeamId
	}
	return 0
}

func (m *PvpChallengeReportInfo) GetChallengeTime() int64 {
	if m != nil && m.ChallengeTime != nil {
		return *m.ChallengeTime
	}
	return 0
}

func (m *PvpChallengeReportInfo) GetHalfId() int32 {
	if m != nil && m.HalfId != nil {
		return *m.HalfId
	}
	return 0
}

func (m *PvpChallengeReportInfo) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *PvpChallengeReportInfo) GetRank() int32 {
	if m != nil && m.Rank != nil {
		return *m.Rank
	}
	return 0
}

func (m *PvpChallengeReportInfo) GetPvpHonor() *ItemVaryConfig {
	if m != nil {
		return m.PvpHonor
	}
	return nil
}

// pvp的历史记录
type PvpHistoryRankInfo struct {
	Gid              *int32 `protobuf:"varint,1,opt,name=gid" json:"gid,omitempty"`
	IsRobot          *bool  `protobuf:"varint,2,opt,name=isRobot" json:"isRobot,omitempty"`
	Lastrank         *int32 `protobuf:"varint,3,opt,name=lastrank" json:"lastrank,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *PvpHistoryRankInfo) Reset()                    { *m = PvpHistoryRankInfo{} }
func (m *PvpHistoryRankInfo) String() string            { return proto.CompactTextString(m) }
func (*PvpHistoryRankInfo) ProtoMessage()               {}
func (*PvpHistoryRankInfo) Descriptor() ([]byte, []int) { return fileDescriptor53, []int{7} }

func (m *PvpHistoryRankInfo) GetGid() int32 {
	if m != nil && m.Gid != nil {
		return *m.Gid
	}
	return 0
}

func (m *PvpHistoryRankInfo) GetIsRobot() bool {
	if m != nil && m.IsRobot != nil {
		return *m.IsRobot
	}
	return false
}

func (m *PvpHistoryRankInfo) GetLastrank() int32 {
	if m != nil && m.Lastrank != nil {
		return *m.Lastrank
	}
	return 0
}

// PVP的match存的信息
type PvpRoleSaveInfo struct {
	Rankinfo         *PvpRankInfo              `protobuf:"bytes,1,opt,name=rankinfo" json:"rankinfo,omitempty"`
	Challeng         []*PvpChallengInfo        `protobuf:"bytes,2,rep,name=challeng" json:"challeng,omitempty"`
	History          []*PvpHistoryRankInfo     `protobuf:"bytes,3,rep,name=history" json:"history,omitempty"`
	Reports          []*PvpChallengeReportInfo `protobuf:"bytes,4,rep,name=reports" json:"reports,omitempty"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *PvpRoleSaveInfo) Reset()                    { *m = PvpRoleSaveInfo{} }
func (m *PvpRoleSaveInfo) String() string            { return proto.CompactTextString(m) }
func (*PvpRoleSaveInfo) ProtoMessage()               {}
func (*PvpRoleSaveInfo) Descriptor() ([]byte, []int) { return fileDescriptor53, []int{8} }

func (m *PvpRoleSaveInfo) GetRankinfo() *PvpRankInfo {
	if m != nil {
		return m.Rankinfo
	}
	return nil
}

func (m *PvpRoleSaveInfo) GetChalleng() []*PvpChallengInfo {
	if m != nil {
		return m.Challeng
	}
	return nil
}

func (m *PvpRoleSaveInfo) GetHistory() []*PvpHistoryRankInfo {
	if m != nil {
		return m.History
	}
	return nil
}

func (m *PvpRoleSaveInfo) GetReports() []*PvpChallengeReportInfo {
	if m != nil {
		return m.Reports
	}
	return nil
}

// pvp的机器人信息
type PvpRobotRankInfo struct {
	Robot            *PvpRankInfo      `protobuf:"bytes,1,opt,name=robot" json:"robot,omitempty"`
	RobotTeamInfo    *PvpRobotTeamInfo `protobuf:"bytes,2,opt,name=robotTeamInfo" json:"robotTeamInfo,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *PvpRobotRankInfo) Reset()                    { *m = PvpRobotRankInfo{} }
func (m *PvpRobotRankInfo) String() string            { return proto.CompactTextString(m) }
func (*PvpRobotRankInfo) ProtoMessage()               {}
func (*PvpRobotRankInfo) Descriptor() ([]byte, []int) { return fileDescriptor53, []int{9} }

func (m *PvpRobotRankInfo) GetRobot() *PvpRankInfo {
	if m != nil {
		return m.Robot
	}
	return nil
}

func (m *PvpRobotRankInfo) GetRobotTeamInfo() *PvpRobotTeamInfo {
	if m != nil {
		return m.RobotTeamInfo
	}
	return nil
}

// pvp开启了的逻辑服务器ID
type PvpServerID struct {
	Serverid         *int32 `protobuf:"varint,1,opt,name=serverid" json:"serverid,omitempty"`
	RankLastOrder    *int32 `protobuf:"varint,2,opt,name=rankLastOrder" json:"rankLastOrder,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *PvpServerID) Reset()                    { *m = PvpServerID{} }
func (m *PvpServerID) String() string            { return proto.CompactTextString(m) }
func (*PvpServerID) ProtoMessage()               {}
func (*PvpServerID) Descriptor() ([]byte, []int) { return fileDescriptor53, []int{10} }

func (m *PvpServerID) GetServerid() int32 {
	if m != nil && m.Serverid != nil {
		return *m.Serverid
	}
	return 0
}

func (m *PvpServerID) GetRankLastOrder() int32 {
	if m != nil && m.RankLastOrder != nil {
		return *m.RankLastOrder
	}
	return 0
}

// pvp的机器人信息
type PvpRobotInfo struct {
	Gid              *uint32 `protobuf:"varint,1,opt,name=gid" json:"gid,omitempty"`
	Robotid          *uint32 `protobuf:"varint,2,opt,name=robotid" json:"robotid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PvpRobotInfo) Reset()                    { *m = PvpRobotInfo{} }
func (m *PvpRobotInfo) String() string            { return proto.CompactTextString(m) }
func (*PvpRobotInfo) ProtoMessage()               {}
func (*PvpRobotInfo) Descriptor() ([]byte, []int) { return fileDescriptor53, []int{11} }

func (m *PvpRobotInfo) GetGid() uint32 {
	if m != nil && m.Gid != nil {
		return *m.Gid
	}
	return 0
}

func (m *PvpRobotInfo) GetRobotid() uint32 {
	if m != nil && m.Robotid != nil {
		return *m.Robotid
	}
	return 0
}

// pvp的角色的上阵
type PvpRoleSquadInfo struct {
	SquadType        *SquadType   `protobuf:"varint,1,opt,name=squadType,enum=SquadType" json:"squadType,omitempty"`
	Starter          []*SquadInfo `protobuf:"bytes,2,rep,name=starter" json:"starter,omitempty"`
	Bench            []*SquadInfo `protobuf:"bytes,3,rep,name=bench" json:"bench,omitempty"`
	BattleValue      *uint32      `protobuf:"varint,4,opt,name=battleValue" json:"battleValue,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *PvpRoleSquadInfo) Reset()                    { *m = PvpRoleSquadInfo{} }
func (m *PvpRoleSquadInfo) String() string            { return proto.CompactTextString(m) }
func (*PvpRoleSquadInfo) ProtoMessage()               {}
func (*PvpRoleSquadInfo) Descriptor() ([]byte, []int) { return fileDescriptor53, []int{12} }

func (m *PvpRoleSquadInfo) GetSquadType() SquadType {
	if m != nil && m.SquadType != nil {
		return *m.SquadType
	}
	return SquadType_SquadNo
}

func (m *PvpRoleSquadInfo) GetStarter() []*SquadInfo {
	if m != nil {
		return m.Starter
	}
	return nil
}

func (m *PvpRoleSquadInfo) GetBench() []*SquadInfo {
	if m != nil {
		return m.Bench
	}
	return nil
}

func (m *PvpRoleSquadInfo) GetBattleValue() uint32 {
	if m != nil && m.BattleValue != nil {
		return *m.BattleValue
	}
	return 0
}

// pvp的结果记录
type PvpMatchRewardResult struct {
	Uuid             *int64 `protobuf:"varint,1,opt,name=uuid" json:"uuid,omitempty"`
	Objectgid        *int32 `protobuf:"varint,2,opt,name=objectgid" json:"objectgid,omitempty"`
	IsRobot          *bool  `protobuf:"varint,3,opt,name=isRobot" json:"isRobot,omitempty"`
	Iswin            *bool  `protobuf:"varint,4,opt,name=iswin" json:"iswin,omitempty"`
	Rewardrank       *int32 `protobuf:"varint,5,opt,name=rewardrank" json:"rewardrank,omitempty"`
	Isrecv           *bool  `protobuf:"varint,6,opt,name=isrecv" json:"isrecv,omitempty"`
	Battletime       *int64 `protobuf:"varint,7,opt,name=battletime" json:"battletime,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *PvpMatchRewardResult) Reset()                    { *m = PvpMatchRewardResult{} }
func (m *PvpMatchRewardResult) String() string            { return proto.CompactTextString(m) }
func (*PvpMatchRewardResult) ProtoMessage()               {}
func (*PvpMatchRewardResult) Descriptor() ([]byte, []int) { return fileDescriptor53, []int{13} }

func (m *PvpMatchRewardResult) GetUuid() int64 {
	if m != nil && m.Uuid != nil {
		return *m.Uuid
	}
	return 0
}

func (m *PvpMatchRewardResult) GetObjectgid() int32 {
	if m != nil && m.Objectgid != nil {
		return *m.Objectgid
	}
	return 0
}

func (m *PvpMatchRewardResult) GetIsRobot() bool {
	if m != nil && m.IsRobot != nil {
		return *m.IsRobot
	}
	return false
}

func (m *PvpMatchRewardResult) GetIswin() bool {
	if m != nil && m.Iswin != nil {
		return *m.Iswin
	}
	return false
}

func (m *PvpMatchRewardResult) GetRewardrank() int32 {
	if m != nil && m.Rewardrank != nil {
		return *m.Rewardrank
	}
	return 0
}

func (m *PvpMatchRewardResult) GetIsrecv() bool {
	if m != nil && m.Isrecv != nil {
		return *m.Isrecv
	}
	return false
}

func (m *PvpMatchRewardResult) GetBattletime() int64 {
	if m != nil && m.Battletime != nil {
		return *m.Battletime
	}
	return 0
}

// pvp logic存的某些信息，不用存match
// pvp的历史排名奖励
type PvpMatchHistoryRankReward struct {
	Confid           *int32 `protobuf:"varint,1,opt,name=confid" json:"confid,omitempty"`
	Isrecv           *bool  `protobuf:"varint,2,opt,name=isrecv" json:"isrecv,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *PvpMatchHistoryRankReward) Reset()                    { *m = PvpMatchHistoryRankReward{} }
func (m *PvpMatchHistoryRankReward) String() string            { return proto.CompactTextString(m) }
func (*PvpMatchHistoryRankReward) ProtoMessage()               {}
func (*PvpMatchHistoryRankReward) Descriptor() ([]byte, []int) { return fileDescriptor53, []int{14} }

func (m *PvpMatchHistoryRankReward) GetConfid() int32 {
	if m != nil && m.Confid != nil {
		return *m.Confid
	}
	return 0
}

func (m *PvpMatchHistoryRankReward) GetIsrecv() bool {
	if m != nil && m.Isrecv != nil {
		return *m.Isrecv
	}
	return false
}

// pvp半身像等设置
type PvpRoleInfoSet struct {
	Halflengthid     *int32 `protobuf:"varint,1,opt,name=halflengthid" json:"halflengthid,omitempty"`
	FightCount       *int32 `protobuf:"varint,2,opt,name=fightCount" json:"fightCount,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *PvpRoleInfoSet) Reset()                    { *m = PvpRoleInfoSet{} }
func (m *PvpRoleInfoSet) String() string            { return proto.CompactTextString(m) }
func (*PvpRoleInfoSet) ProtoMessage()               {}
func (*PvpRoleInfoSet) Descriptor() ([]byte, []int) { return fileDescriptor53, []int{15} }

func (m *PvpRoleInfoSet) GetHalflengthid() int32 {
	if m != nil && m.Halflengthid != nil {
		return *m.Halflengthid
	}
	return 0
}

func (m *PvpRoleInfoSet) GetFightCount() int32 {
	if m != nil && m.FightCount != nil {
		return *m.FightCount
	}
	return 0
}

// pvp的每日挑战次数累积奖励
type PvpMatchDayCumulativeReward struct {
	Confid           *int32 `protobuf:"varint,1,opt,name=confid" json:"confid,omitempty"`
	Isrecv           *bool  `protobuf:"varint,2,opt,name=isrecv" json:"isrecv,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *PvpMatchDayCumulativeReward) Reset()                    { *m = PvpMatchDayCumulativeReward{} }
func (m *PvpMatchDayCumulativeReward) String() string            { return proto.CompactTextString(m) }
func (*PvpMatchDayCumulativeReward) ProtoMessage()               {}
func (*PvpMatchDayCumulativeReward) Descriptor() ([]byte, []int) { return fileDescriptor53, []int{16} }

func (m *PvpMatchDayCumulativeReward) GetConfid() int32 {
	if m != nil && m.Confid != nil {
		return *m.Confid
	}
	return 0
}

func (m *PvpMatchDayCumulativeReward) GetIsrecv() bool {
	if m != nil && m.Isrecv != nil {
		return *m.Isrecv
	}
	return false
}

// 被挑战者的消息
type PvpRoleInfo struct {
	Gid              *int32               `protobuf:"varint,1,opt,name=gid" json:"gid,omitempty"`
	Isrobot          *bool                `protobuf:"varint,2,opt,name=isrobot" json:"isrobot,omitempty"`
	Allbattle        *uint32              `protobuf:"varint,4,opt,name=allbattle" json:"allbattle,omitempty"`
	Rank             *int32               `protobuf:"varint,5,opt,name=rank" json:"rank,omitempty"`
	Name             *string              `protobuf:"bytes,6,opt,name=name" json:"name,omitempty"`
	IsChalleng       *bool                `protobuf:"varint,7,opt,name=isChalleng" json:"isChalleng,omitempty"`
	Squadrole        *PvpRoleSquadInfo    `protobuf:"bytes,8,opt,name=squadrole" json:"squadrole,omitempty"`
	Halfid           *int32               `protobuf:"varint,9,opt,name=halfid" json:"halfid,omitempty"`
	TeamID           *int32               `protobuf:"varint,10,opt,name=teamID" json:"teamID,omitempty"`
	Lv               *int32               `protobuf:"varint,11,opt,name=lv" json:"lv,omitempty"`
	AllianceInfo     *PvpRoleAllianceInfo `protobuf:"bytes,12,opt,name=allianceInfo" json:"allianceInfo,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *PvpRoleInfo) Reset()                    { *m = PvpRoleInfo{} }
func (m *PvpRoleInfo) String() string            { return proto.CompactTextString(m) }
func (*PvpRoleInfo) ProtoMessage()               {}
func (*PvpRoleInfo) Descriptor() ([]byte, []int) { return fileDescriptor53, []int{17} }

func (m *PvpRoleInfo) GetGid() int32 {
	if m != nil && m.Gid != nil {
		return *m.Gid
	}
	return 0
}

func (m *PvpRoleInfo) GetIsrobot() bool {
	if m != nil && m.Isrobot != nil {
		return *m.Isrobot
	}
	return false
}

func (m *PvpRoleInfo) GetAllbattle() uint32 {
	if m != nil && m.Allbattle != nil {
		return *m.Allbattle
	}
	return 0
}

func (m *PvpRoleInfo) GetRank() int32 {
	if m != nil && m.Rank != nil {
		return *m.Rank
	}
	return 0
}

func (m *PvpRoleInfo) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *PvpRoleInfo) GetIsChalleng() bool {
	if m != nil && m.IsChalleng != nil {
		return *m.IsChalleng
	}
	return false
}

func (m *PvpRoleInfo) GetSquadrole() *PvpRoleSquadInfo {
	if m != nil {
		return m.Squadrole
	}
	return nil
}

func (m *PvpRoleInfo) GetHalfid() int32 {
	if m != nil && m.Halfid != nil {
		return *m.Halfid
	}
	return 0
}

func (m *PvpRoleInfo) GetTeamID() int32 {
	if m != nil && m.TeamID != nil {
		return *m.TeamID
	}
	return 0
}

func (m *PvpRoleInfo) GetLv() int32 {
	if m != nil && m.Lv != nil {
		return *m.Lv
	}
	return 0
}

func (m *PvpRoleInfo) GetAllianceInfo() *PvpRoleAllianceInfo {
	if m != nil {
		return m.AllianceInfo
	}
	return nil
}

// 请求竞技场数据
type GamerPvpInfoC2S struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *GamerPvpInfoC2S) Reset()                    { *m = GamerPvpInfoC2S{} }
func (m *GamerPvpInfoC2S) String() string            { return proto.CompactTextString(m) }
func (*GamerPvpInfoC2S) ProtoMessage()               {}
func (*GamerPvpInfoC2S) Descriptor() ([]byte, []int) { return fileDescriptor53, []int{18} }

type GamerPvpInfoRefresh struct {
	Role             []*PvpRoleInfo      `protobuf:"bytes,1,rep,name=role" json:"role,omitempty"`
	Self             *PvpRoleInfo        `protobuf:"bytes,2,opt,name=self" json:"self,omitempty"`
	RefreshInfo      *PvpAutoRefreshInfo `protobuf:"bytes,3,opt,name=refreshInfo" json:"refreshInfo,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *GamerPvpInfoRefresh) Reset()                    { *m = GamerPvpInfoRefresh{} }
func (m *GamerPvpInfoRefresh) String() string            { return proto.CompactTextString(m) }
func (*GamerPvpInfoRefresh) ProtoMessage()               {}
func (*GamerPvpInfoRefresh) Descriptor() ([]byte, []int) { return fileDescriptor53, []int{19} }

func (m *GamerPvpInfoRefresh) GetRole() []*PvpRoleInfo {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *GamerPvpInfoRefresh) GetSelf() *PvpRoleInfo {
	if m != nil {
		return m.Self
	}
	return nil
}

func (m *GamerPvpInfoRefresh) GetRefreshInfo() *PvpAutoRefreshInfo {
	if m != nil {
		return m.RefreshInfo
	}
	return nil
}

type GamerPvpInfoS2C struct {
	Info             *GamerPvpInfoRefresh `protobuf:"bytes,1,opt,name=info" json:"info,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *GamerPvpInfoS2C) Reset()                    { *m = GamerPvpInfoS2C{} }
func (m *GamerPvpInfoS2C) String() string            { return proto.CompactTextString(m) }
func (*GamerPvpInfoS2C) ProtoMessage()               {}
func (*GamerPvpInfoS2C) Descriptor() ([]byte, []int) { return fileDescriptor53, []int{20} }

func (m *GamerPvpInfoS2C) GetInfo() *GamerPvpInfoRefresh {
	if m != nil {
		return m.Info
	}
	return nil
}

// 主动刷新数据
type PvpAutoRefreshInfo struct {
	Freecount         *int32                         `protobuf:"varint,1,opt,name=freecount" json:"freecount,omitempty"`
	Freecounttime     *int64                         `protobuf:"varint,2,opt,name=freecounttime" json:"freecounttime,omitempty"`
	Challengcount     *int32                         `protobuf:"varint,3,opt,name=challengcount" json:"challengcount,omitempty"`
	Challengroletime  *int64                         `protobuf:"varint,4,opt,name=challengroletime" json:"challengroletime,omitempty"`
	PayChallengecount *int32                         `protobuf:"varint,5,opt,name=payChallengecount" json:"payChallengecount,omitempty"`
	DayReward         []*PvpMatchDayCumulativeReward `protobuf:"bytes,6,rep,name=dayReward" json:"dayReward,omitempty"`
	XXX_unrecognized  []byte                         `json:"-"`
}

func (m *PvpAutoRefreshInfo) Reset()                    { *m = PvpAutoRefreshInfo{} }
func (m *PvpAutoRefreshInfo) String() string            { return proto.CompactTextString(m) }
func (*PvpAutoRefreshInfo) ProtoMessage()               {}
func (*PvpAutoRefreshInfo) Descriptor() ([]byte, []int) { return fileDescriptor53, []int{21} }

func (m *PvpAutoRefreshInfo) GetFreecount() int32 {
	if m != nil && m.Freecount != nil {
		return *m.Freecount
	}
	return 0
}

func (m *PvpAutoRefreshInfo) GetFreecounttime() int64 {
	if m != nil && m.Freecounttime != nil {
		return *m.Freecounttime
	}
	return 0
}

func (m *PvpAutoRefreshInfo) GetChallengcount() int32 {
	if m != nil && m.Challengcount != nil {
		return *m.Challengcount
	}
	return 0
}

func (m *PvpAutoRefreshInfo) GetChallengroletime() int64 {
	if m != nil && m.Challengroletime != nil {
		return *m.Challengroletime
	}
	return 0
}

func (m *PvpAutoRefreshInfo) GetPayChallengecount() int32 {
	if m != nil && m.PayChallengecount != nil {
		return *m.PayChallengecount
	}
	return 0
}

func (m *PvpAutoRefreshInfo) GetDayReward() []*PvpMatchDayCumulativeReward {
	if m != nil {
		return m.DayReward
	}
	return nil
}

// 竞技场手动刷新
type GamerPvpReflushC2S struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *GamerPvpReflushC2S) Reset()                    { *m = GamerPvpReflushC2S{} }
func (m *GamerPvpReflushC2S) String() string            { return proto.CompactTextString(m) }
func (*GamerPvpReflushC2S) ProtoMessage()               {}
func (*GamerPvpReflushC2S) Descriptor() ([]byte, []int) { return fileDescriptor53, []int{22} }

// 竞技场手动刷新
type GamerPvpReflushS2C struct {
	Info             *GamerPvpInfoRefresh `protobuf:"bytes,1,opt,name=info" json:"info,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *GamerPvpReflushS2C) Reset()                    { *m = GamerPvpReflushS2C{} }
func (m *GamerPvpReflushS2C) String() string            { return proto.CompactTextString(m) }
func (*GamerPvpReflushS2C) ProtoMessage()               {}
func (*GamerPvpReflushS2C) Descriptor() ([]byte, []int) { return fileDescriptor53, []int{23} }

func (m *GamerPvpReflushS2C) GetInfo() *GamerPvpInfoRefresh {
	if m != nil {
		return m.Info
	}
	return nil
}

// 竞技场挑战数据
type GamerPvpChallengC2S struct {
	Gid               *int32 `protobuf:"varint,1,opt,name=gid" json:"gid,omitempty"`
	Isrobot           *bool  `protobuf:"varint,2,opt,name=isrobot" json:"isrobot,omitempty"`
	MyTeamScore       *int32 `protobuf:"varint,3,opt,name=myTeamScore" json:"myTeamScore,omitempty"`
	OpponentTeamScore *int32 `protobuf:"varint,4,opt,name=opponentTeamScore" json:"opponentTeamScore,omitempty"`
	XXX_unrecognized  []byte `json:"-"`
}

func (m *GamerPvpChallengC2S) Reset()                    { *m = GamerPvpChallengC2S{} }
func (m *GamerPvpChallengC2S) String() string            { return proto.CompactTextString(m) }
func (*GamerPvpChallengC2S) ProtoMessage()               {}
func (*GamerPvpChallengC2S) Descriptor() ([]byte, []int) { return fileDescriptor53, []int{24} }

func (m *GamerPvpChallengC2S) GetGid() int32 {
	if m != nil && m.Gid != nil {
		return *m.Gid
	}
	return 0
}

func (m *GamerPvpChallengC2S) GetIsrobot() bool {
	if m != nil && m.Isrobot != nil {
		return *m.Isrobot
	}
	return false
}

func (m *GamerPvpChallengC2S) GetMyTeamScore() int32 {
	if m != nil && m.MyTeamScore != nil {
		return *m.MyTeamScore
	}
	return 0
}

func (m *GamerPvpChallengC2S) GetOpponentTeamScore() int32 {
	if m != nil && m.OpponentTeamScore != nil {
		return *m.OpponentTeamScore
	}
	return 0
}

// 竞技场挑战数据
type GamerPvpChallengS2C struct {
	Enemy            *PvpRoleInfo `protobuf:"bytes,1,opt,name=enemy" json:"enemy,omitempty"`
	Matchuuid        *int64       `protobuf:"varint,2,opt,name=matchuuid" json:"matchuuid,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *GamerPvpChallengS2C) Reset()                    { *m = GamerPvpChallengS2C{} }
func (m *GamerPvpChallengS2C) String() string            { return proto.CompactTextString(m) }
func (*GamerPvpChallengS2C) ProtoMessage()               {}
func (*GamerPvpChallengS2C) Descriptor() ([]byte, []int) { return fileDescriptor53, []int{25} }

func (m *GamerPvpChallengS2C) GetEnemy() *PvpRoleInfo {
	if m != nil {
		return m.Enemy
	}
	return nil
}

func (m *GamerPvpChallengS2C) GetMatchuuid() int64 {
	if m != nil && m.Matchuuid != nil {
		return *m.Matchuuid
	}
	return 0
}

// 竞技场主动刷新的次数
type GamerPvpCountS2C struct {
	RefreshInfo      *PvpAutoRefreshInfo `protobuf:"bytes,1,opt,name=refreshInfo" json:"refreshInfo,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *GamerPvpCountS2C) Reset()                    { *m = GamerPvpCountS2C{} }
func (m *GamerPvpCountS2C) String() string            { return proto.CompactTextString(m) }
func (*GamerPvpCountS2C) ProtoMessage()               {}
func (*GamerPvpCountS2C) Descriptor() ([]byte, []int) { return fileDescriptor53, []int{26} }

func (m *GamerPvpCountS2C) GetRefreshInfo() *PvpAutoRefreshInfo {
	if m != nil {
		return m.RefreshInfo
	}
	return nil
}

// 客户端刷新战斗力
type GamerPvpInfoExC2S struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *GamerPvpInfoExC2S) Reset()                    { *m = GamerPvpInfoExC2S{} }
func (m *GamerPvpInfoExC2S) String() string            { return proto.CompactTextString(m) }
func (*GamerPvpInfoExC2S) ProtoMessage()               {}
func (*GamerPvpInfoExC2S) Descriptor() ([]byte, []int) { return fileDescriptor53, []int{27} }

// 通知客户端修改数据
type GamerPvpInfoExS2C struct {
	Info             *GamerPvpInfoRefresh `protobuf:"bytes,1,opt,name=info" json:"info,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *GamerPvpInfoExS2C) Reset()                    { *m = GamerPvpInfoExS2C{} }
func (m *GamerPvpInfoExS2C) String() string            { return proto.CompactTextString(m) }
func (*GamerPvpInfoExS2C) ProtoMessage()               {}
func (*GamerPvpInfoExS2C) Descriptor() ([]byte, []int) { return fileDescriptor53, []int{28} }

func (m *GamerPvpInfoExS2C) GetInfo() *GamerPvpInfoRefresh {
	if m != nil {
		return m.Info
	}
	return nil
}

// 排行榜结构
type PvpArenaRankingList struct {
	Rank             *int32  `protobuf:"varint,1,opt,name=rank" json:"rank,omitempty"`
	Name             *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	HeadId           *int32  `protobuf:"varint,3,opt,name=headId" json:"headId,omitempty"`
	BattlePower      *uint32 `protobuf:"varint,4,opt,name=battlePower" json:"battlePower,omitempty"`
	Gid              *int32  `protobuf:"varint,5,opt,name=gid" json:"gid,omitempty"`
	Isrobot          *bool   `protobuf:"varint,6,opt,name=isrobot" json:"isrobot,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PvpArenaRankingList) Reset()                    { *m = PvpArenaRankingList{} }
func (m *PvpArenaRankingList) String() string            { return proto.CompactTextString(m) }
func (*PvpArenaRankingList) ProtoMessage()               {}
func (*PvpArenaRankingList) Descriptor() ([]byte, []int) { return fileDescriptor53, []int{29} }

func (m *PvpArenaRankingList) GetRank() int32 {
	if m != nil && m.Rank != nil {
		return *m.Rank
	}
	return 0
}

func (m *PvpArenaRankingList) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *PvpArenaRankingList) GetHeadId() int32 {
	if m != nil && m.HeadId != nil {
		return *m.HeadId
	}
	return 0
}

func (m *PvpArenaRankingList) GetBattlePower() uint32 {
	if m != nil && m.BattlePower != nil {
		return *m.BattlePower
	}
	return 0
}

func (m *PvpArenaRankingList) GetGid() int32 {
	if m != nil && m.Gid != nil {
		return *m.Gid
	}
	return 0
}

func (m *PvpArenaRankingList) GetIsrobot() bool {
	if m != nil && m.Isrobot != nil {
		return *m.Isrobot
	}
	return false
}

// 客户端请求排行榜消息
type GamerPvpRankingListC2S struct {
	StarRank         *int32 `protobuf:"varint,1,opt,name=starRank" json:"starRank,omitempty"`
	Num              *int32 `protobuf:"varint,2,opt,name=num" json:"num,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GamerPvpRankingListC2S) Reset()                    { *m = GamerPvpRankingListC2S{} }
func (m *GamerPvpRankingListC2S) String() string            { return proto.CompactTextString(m) }
func (*GamerPvpRankingListC2S) ProtoMessage()               {}
func (*GamerPvpRankingListC2S) Descriptor() ([]byte, []int) { return fileDescriptor53, []int{30} }

func (m *GamerPvpRankingListC2S) GetStarRank() int32 {
	if m != nil && m.StarRank != nil {
		return *m.StarRank
	}
	return 0
}

func (m *GamerPvpRankingListC2S) GetNum() int32 {
	if m != nil && m.Num != nil {
		return *m.Num
	}
	return 0
}

// 通知客户端排行榜消息
type GamerPvpRankingListS2C struct {
	StarRank         *int32                 `protobuf:"varint,1,opt,name=starRank" json:"starRank,omitempty"`
	RankLists        []*PvpArenaRankingList `protobuf:"bytes,2,rep,name=rankLists" json:"rankLists,omitempty"`
	SelfRankList     *PvpArenaRankingList   `protobuf:"bytes,3,opt,name=selfRankList" json:"selfRankList,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *GamerPvpRankingListS2C) Reset()                    { *m = GamerPvpRankingListS2C{} }
func (m *GamerPvpRankingListS2C) String() string            { return proto.CompactTextString(m) }
func (*GamerPvpRankingListS2C) ProtoMessage()               {}
func (*GamerPvpRankingListS2C) Descriptor() ([]byte, []int) { return fileDescriptor53, []int{31} }

func (m *GamerPvpRankingListS2C) GetStarRank() int32 {
	if m != nil && m.StarRank != nil {
		return *m.StarRank
	}
	return 0
}

func (m *GamerPvpRankingListS2C) GetRankLists() []*PvpArenaRankingList {
	if m != nil {
		return m.RankLists
	}
	return nil
}

func (m *GamerPvpRankingListS2C) GetSelfRankList() *PvpArenaRankingList {
	if m != nil {
		return m.SelfRankList
	}
	return nil
}

// 请求更换半身像
type GamerPvpReqChangeBodyHeadC2S struct {
	Halfid           *int32 `protobuf:"varint,1,opt,name=halfid" json:"halfid,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GamerPvpReqChangeBodyHeadC2S) Reset()                    { *m = GamerPvpReqChangeBodyHeadC2S{} }
func (m *GamerPvpReqChangeBodyHeadC2S) String() string            { return proto.CompactTextString(m) }
func (*GamerPvpReqChangeBodyHeadC2S) ProtoMessage()               {}
func (*GamerPvpReqChangeBodyHeadC2S) Descriptor() ([]byte, []int) { return fileDescriptor53, []int{32} }

func (m *GamerPvpReqChangeBodyHeadC2S) GetHalfid() int32 {
	if m != nil && m.Halfid != nil {
		return *m.Halfid
	}
	return 0
}

// 回复更换半身像
type GamerPvpReqChangeBodyHeadS2C struct {
	Halfid           *int32 `protobuf:"varint,1,opt,name=halfid" json:"halfid,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GamerPvpReqChangeBodyHeadS2C) Reset()                    { *m = GamerPvpReqChangeBodyHeadS2C{} }
func (m *GamerPvpReqChangeBodyHeadS2C) String() string            { return proto.CompactTextString(m) }
func (*GamerPvpReqChangeBodyHeadS2C) ProtoMessage()               {}
func (*GamerPvpReqChangeBodyHeadS2C) Descriptor() ([]byte, []int) { return fileDescriptor53, []int{33} }

func (m *GamerPvpReqChangeBodyHeadS2C) GetHalfid() int32 {
	if m != nil && m.Halfid != nil {
		return *m.Halfid
	}
	return 0
}

// 请求领取挑战次数奖励
type GamerPvpReqDayCumulativeRewardC2S struct {
	Confid           *int32 `protobuf:"varint,1,opt,name=confid" json:"confid,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GamerPvpReqDayCumulativeRewardC2S) Reset()         { *m = GamerPvpReqDayCumulativeRewardC2S{} }
func (m *GamerPvpReqDayCumulativeRewardC2S) String() string { return proto.CompactTextString(m) }
func (*GamerPvpReqDayCumulativeRewardC2S) ProtoMessage()    {}
func (*GamerPvpReqDayCumulativeRewardC2S) Descriptor() ([]byte, []int) {
	return fileDescriptor53, []int{34}
}

func (m *GamerPvpReqDayCumulativeRewardC2S) GetConfid() int32 {
	if m != nil && m.Confid != nil {
		return *m.Confid
	}
	return 0
}

// 回复领取挑战次数奖励
type GamerPvpReqDayCumulativeRewardS2C struct {
	Val              *PvpMatchDayCumulativeReward `protobuf:"bytes,1,opt,name=val" json:"val,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *GamerPvpReqDayCumulativeRewardS2C) Reset()         { *m = GamerPvpReqDayCumulativeRewardS2C{} }
func (m *GamerPvpReqDayCumulativeRewardS2C) String() string { return proto.CompactTextString(m) }
func (*GamerPvpReqDayCumulativeRewardS2C) ProtoMessage()    {}
func (*GamerPvpReqDayCumulativeRewardS2C) Descriptor() ([]byte, []int) {
	return fileDescriptor53, []int{35}
}

func (m *GamerPvpReqDayCumulativeRewardS2C) GetVal() *PvpMatchDayCumulativeReward {
	if m != nil {
		return m.Val
	}
	return nil
}

// 请求领取历史排名奖励
type GamerPvpReqHistoryRankRewardC2S struct {
	Confid           []int32 `protobuf:"varint,1,rep,name=confid" json:"confid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GamerPvpReqHistoryRankRewardC2S) Reset()         { *m = GamerPvpReqHistoryRankRewardC2S{} }
func (m *GamerPvpReqHistoryRankRewardC2S) String() string { return proto.CompactTextString(m) }
func (*GamerPvpReqHistoryRankRewardC2S) ProtoMessage()    {}
func (*GamerPvpReqHistoryRankRewardC2S) Descriptor() ([]byte, []int) {
	return fileDescriptor53, []int{36}
}

func (m *GamerPvpReqHistoryRankRewardC2S) GetConfid() []int32 {
	if m != nil {
		return m.Confid
	}
	return nil
}

// 回复领取历史排名奖励
type GamerPvpReqHistoryRankRewardS2C struct {
	Val              []*PvpMatchHistoryRankReward `protobuf:"bytes,1,rep,name=val" json:"val,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *GamerPvpReqHistoryRankRewardS2C) Reset()         { *m = GamerPvpReqHistoryRankRewardS2C{} }
func (m *GamerPvpReqHistoryRankRewardS2C) String() string { return proto.CompactTextString(m) }
func (*GamerPvpReqHistoryRankRewardS2C) ProtoMessage()    {}
func (*GamerPvpReqHistoryRankRewardS2C) Descriptor() ([]byte, []int) {
	return fileDescriptor53, []int{37}
}

func (m *GamerPvpReqHistoryRankRewardS2C) GetVal() []*PvpMatchHistoryRankReward {
	if m != nil {
		return m.Val
	}
	return nil
}

// 请求所有历史排名奖励状态
type GamerPvpReqAllHistoryRankRewardC2S struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *GamerPvpReqAllHistoryRankRewardC2S) Reset()         { *m = GamerPvpReqAllHistoryRankRewardC2S{} }
func (m *GamerPvpReqAllHistoryRankRewardC2S) String() string { return proto.CompactTextString(m) }
func (*GamerPvpReqAllHistoryRankRewardC2S) ProtoMessage()    {}
func (*GamerPvpReqAllHistoryRankRewardC2S) Descriptor() ([]byte, []int) {
	return fileDescriptor53, []int{38}
}

// 回复所有历史排名奖励状态
type GamerPvpReqAllHistoryRankRewardS2C struct {
	Vals             []*PvpMatchHistoryRankReward `protobuf:"bytes,1,rep,name=vals" json:"vals,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *GamerPvpReqAllHistoryRankRewardS2C) Reset()         { *m = GamerPvpReqAllHistoryRankRewardS2C{} }
func (m *GamerPvpReqAllHistoryRankRewardS2C) String() string { return proto.CompactTextString(m) }
func (*GamerPvpReqAllHistoryRankRewardS2C) ProtoMessage()    {}
func (*GamerPvpReqAllHistoryRankRewardS2C) Descriptor() ([]byte, []int) {
	return fileDescriptor53, []int{39}
}

func (m *GamerPvpReqAllHistoryRankRewardS2C) GetVals() []*PvpMatchHistoryRankReward {
	if m != nil {
		return m.Vals
	}
	return nil
}

// 请求玩家阵容
type GamerPvpReqSquadC2S struct {
	Gid              *int32 `protobuf:"varint,1,opt,name=gid" json:"gid,omitempty"`
	Isrobot          *bool  `protobuf:"varint,2,opt,name=isrobot" json:"isrobot,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GamerPvpReqSquadC2S) Reset()                    { *m = GamerPvpReqSquadC2S{} }
func (m *GamerPvpReqSquadC2S) String() string            { return proto.CompactTextString(m) }
func (*GamerPvpReqSquadC2S) ProtoMessage()               {}
func (*GamerPvpReqSquadC2S) Descriptor() ([]byte, []int) { return fileDescriptor53, []int{40} }

func (m *GamerPvpReqSquadC2S) GetGid() int32 {
	if m != nil && m.Gid != nil {
		return *m.Gid
	}
	return 0
}

func (m *GamerPvpReqSquadC2S) GetIsrobot() bool {
	if m != nil && m.Isrobot != nil {
		return *m.Isrobot
	}
	return false
}

// 回复玩家阵容
type GamerPvpReqSquadS2C struct {
	Enemy            *PvpRoleInfo `protobuf:"bytes,1,opt,name=enemy" json:"enemy,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *GamerPvpReqSquadS2C) Reset()                    { *m = GamerPvpReqSquadS2C{} }
func (m *GamerPvpReqSquadS2C) String() string            { return proto.CompactTextString(m) }
func (*GamerPvpReqSquadS2C) ProtoMessage()               {}
func (*GamerPvpReqSquadS2C) Descriptor() ([]byte, []int) { return fileDescriptor53, []int{41} }

func (m *GamerPvpReqSquadS2C) GetEnemy() *PvpRoleInfo {
	if m != nil {
		return m.Enemy
	}
	return nil
}

// 请求战报
type GamerPvpChallengeReportC2S struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *GamerPvpChallengeReportC2S) Reset()                    { *m = GamerPvpChallengeReportC2S{} }
func (m *GamerPvpChallengeReportC2S) String() string            { return proto.CompactTextString(m) }
func (*GamerPvpChallengeReportC2S) ProtoMessage()               {}
func (*GamerPvpChallengeReportC2S) Descriptor() ([]byte, []int) { return fileDescriptor53, []int{42} }

// 回复战报
type GamerPvpChallengeReportS2C struct {
	Reports          []*PvpChallengeReportInfo `protobuf:"bytes,1,rep,name=reports" json:"reports,omitempty"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *GamerPvpChallengeReportS2C) Reset()                    { *m = GamerPvpChallengeReportS2C{} }
func (m *GamerPvpChallengeReportS2C) String() string            { return proto.CompactTextString(m) }
func (*GamerPvpChallengeReportS2C) ProtoMessage()               {}
func (*GamerPvpChallengeReportS2C) Descriptor() ([]byte, []int) { return fileDescriptor53, []int{43} }

func (m *GamerPvpChallengeReportS2C) GetReports() []*PvpChallengeReportInfo {
	if m != nil {
		return m.Reports
	}
	return nil
}

// gm指令修改排名
type GamerPvpSwapRankC2S struct {
	Target           *int32 `protobuf:"varint,1,opt,name=target" json:"target,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GamerPvpSwapRankC2S) Reset()                    { *m = GamerPvpSwapRankC2S{} }
func (m *GamerPvpSwapRankC2S) String() string            { return proto.CompactTextString(m) }
func (*GamerPvpSwapRankC2S) ProtoMessage()               {}
func (*GamerPvpSwapRankC2S) Descriptor() ([]byte, []int) { return fileDescriptor53, []int{44} }

func (m *GamerPvpSwapRankC2S) GetTarget() int32 {
	if m != nil && m.Target != nil {
		return *m.Target
	}
	return 0
}

func init() {
	proto.RegisterType((*MatchGameSquadTypeInfo)(nil), "MatchGameSquadTypeInfo")
	proto.RegisterType((*NoticeOtherServerSyncSquad)(nil), "NoticeOtherServerSyncSquad")
	proto.RegisterType((*PvpRankInfo)(nil), "PvpRankInfo")
	proto.RegisterType((*PvpRobotTeamInfo)(nil), "PvpRobotTeamInfo")
	proto.RegisterType((*PvpRobotBallerInfo)(nil), "PvpRobotBallerInfo")
	proto.RegisterType((*PvpChallengInfo)(nil), "PvpChallengInfo")
	proto.RegisterType((*PvpChallengeReportInfo)(nil), "PvpChallengeReportInfo")
	proto.RegisterType((*PvpHistoryRankInfo)(nil), "PvpHistoryRankInfo")
	proto.RegisterType((*PvpRoleSaveInfo)(nil), "PvpRoleSaveInfo")
	proto.RegisterType((*PvpRobotRankInfo)(nil), "PvpRobotRankInfo")
	proto.RegisterType((*PvpServerID)(nil), "PvpServerID")
	proto.RegisterType((*PvpRobotInfo)(nil), "PvpRobotInfo")
	proto.RegisterType((*PvpRoleSquadInfo)(nil), "PvpRoleSquadInfo")
	proto.RegisterType((*PvpMatchRewardResult)(nil), "PvpMatchRewardResult")
	proto.RegisterType((*PvpMatchHistoryRankReward)(nil), "PvpMatchHistoryRankReward")
	proto.RegisterType((*PvpRoleInfoSet)(nil), "PvpRoleInfoSet")
	proto.RegisterType((*PvpMatchDayCumulativeReward)(nil), "PvpMatchDayCumulativeReward")
	proto.RegisterType((*PvpRoleInfo)(nil), "PvpRoleInfo")
	proto.RegisterType((*GamerPvpInfoC2S)(nil), "GamerPvpInfoC2S")
	proto.RegisterType((*GamerPvpInfoRefresh)(nil), "GamerPvpInfoRefresh")
	proto.RegisterType((*GamerPvpInfoS2C)(nil), "GamerPvpInfoS2C")
	proto.RegisterType((*PvpAutoRefreshInfo)(nil), "PvpAutoRefreshInfo")
	proto.RegisterType((*GamerPvpReflushC2S)(nil), "GamerPvpReflushC2S")
	proto.RegisterType((*GamerPvpReflushS2C)(nil), "GamerPvpReflushS2C")
	proto.RegisterType((*GamerPvpChallengC2S)(nil), "GamerPvpChallengC2S")
	proto.RegisterType((*GamerPvpChallengS2C)(nil), "GamerPvpChallengS2C")
	proto.RegisterType((*GamerPvpCountS2C)(nil), "GamerPvpCountS2C")
	proto.RegisterType((*GamerPvpInfoExC2S)(nil), "GamerPvpInfoExC2S")
	proto.RegisterType((*GamerPvpInfoExS2C)(nil), "GamerPvpInfoExS2C")
	proto.RegisterType((*PvpArenaRankingList)(nil), "PvpArenaRankingList")
	proto.RegisterType((*GamerPvpRankingListC2S)(nil), "GamerPvpRankingListC2S")
	proto.RegisterType((*GamerPvpRankingListS2C)(nil), "GamerPvpRankingListS2C")
	proto.RegisterType((*GamerPvpReqChangeBodyHeadC2S)(nil), "GamerPvpReqChangeBodyHeadC2S")
	proto.RegisterType((*GamerPvpReqChangeBodyHeadS2C)(nil), "GamerPvpReqChangeBodyHeadS2C")
	proto.RegisterType((*GamerPvpReqDayCumulativeRewardC2S)(nil), "GamerPvpReqDayCumulativeRewardC2S")
	proto.RegisterType((*GamerPvpReqDayCumulativeRewardS2C)(nil), "GamerPvpReqDayCumulativeRewardS2C")
	proto.RegisterType((*GamerPvpReqHistoryRankRewardC2S)(nil), "GamerPvpReqHistoryRankRewardC2S")
	proto.RegisterType((*GamerPvpReqHistoryRankRewardS2C)(nil), "GamerPvpReqHistoryRankRewardS2C")
	proto.RegisterType((*GamerPvpReqAllHistoryRankRewardC2S)(nil), "GamerPvpReqAllHistoryRankRewardC2S")
	proto.RegisterType((*GamerPvpReqAllHistoryRankRewardS2C)(nil), "GamerPvpReqAllHistoryRankRewardS2C")
	proto.RegisterType((*GamerPvpReqSquadC2S)(nil), "GamerPvpReqSquadC2S")
	proto.RegisterType((*GamerPvpReqSquadS2C)(nil), "GamerPvpReqSquadS2C")
	proto.RegisterType((*GamerPvpChallengeReportC2S)(nil), "GamerPvpChallengeReportC2S")
	proto.RegisterType((*GamerPvpChallengeReportS2C)(nil), "GamerPvpChallengeReportS2C")
	proto.RegisterType((*GamerPvpSwapRankC2S)(nil), "GamerPvpSwapRankC2S")
	proto.RegisterEnum("GamerSquadInfoUpdateType", GamerSquadInfoUpdateType_name, GamerSquadInfoUpdateType_value)
	proto.RegisterEnum("GamerPvpInfoC2S_MsgID", GamerPvpInfoC2S_MsgID_name, GamerPvpInfoC2S_MsgID_value)
	proto.RegisterEnum("GamerPvpInfoS2C_MsgID", GamerPvpInfoS2C_MsgID_name, GamerPvpInfoS2C_MsgID_value)
	proto.RegisterEnum("GamerPvpReflushC2S_MsgID", GamerPvpReflushC2S_MsgID_name, GamerPvpReflushC2S_MsgID_value)
	proto.RegisterEnum("GamerPvpReflushS2C_MsgID", GamerPvpReflushS2C_MsgID_name, GamerPvpReflushS2C_MsgID_value)
	proto.RegisterEnum("GamerPvpChallengC2S_MsgID", GamerPvpChallengC2S_MsgID_name, GamerPvpChallengC2S_MsgID_value)
	proto.RegisterEnum("GamerPvpChallengS2C_MsgID", GamerPvpChallengS2C_MsgID_name, GamerPvpChallengS2C_MsgID_value)
	proto.RegisterEnum("GamerPvpCountS2C_MsgID", GamerPvpCountS2C_MsgID_name, GamerPvpCountS2C_MsgID_value)
	proto.RegisterEnum("GamerPvpInfoExC2S_MsgID", GamerPvpInfoExC2S_MsgID_name, GamerPvpInfoExC2S_MsgID_value)
	proto.RegisterEnum("GamerPvpInfoExS2C_MsgID", GamerPvpInfoExS2C_MsgID_name, GamerPvpInfoExS2C_MsgID_value)
	proto.RegisterEnum("GamerPvpRankingListC2S_MsgID", GamerPvpRankingListC2S_MsgID_name, GamerPvpRankingListC2S_MsgID_value)
	proto.RegisterEnum("GamerPvpRankingListS2C_MsgID", GamerPvpRankingListS2C_MsgID_name, GamerPvpRankingListS2C_MsgID_value)
	proto.RegisterEnum("GamerPvpReqChangeBodyHeadC2S_MsgID", GamerPvpReqChangeBodyHeadC2S_MsgID_name, GamerPvpReqChangeBodyHeadC2S_MsgID_value)
	proto.RegisterEnum("GamerPvpReqChangeBodyHeadS2C_MsgID", GamerPvpReqChangeBodyHeadS2C_MsgID_name, GamerPvpReqChangeBodyHeadS2C_MsgID_value)
	proto.RegisterEnum("GamerPvpReqDayCumulativeRewardC2S_MsgID", GamerPvpReqDayCumulativeRewardC2S_MsgID_name, GamerPvpReqDayCumulativeRewardC2S_MsgID_value)
	proto.RegisterEnum("GamerPvpReqDayCumulativeRewardS2C_MsgID", GamerPvpReqDayCumulativeRewardS2C_MsgID_name, GamerPvpReqDayCumulativeRewardS2C_MsgID_value)
	proto.RegisterEnum("GamerPvpReqHistoryRankRewardC2S_MsgID", GamerPvpReqHistoryRankRewardC2S_MsgID_name, GamerPvpReqHistoryRankRewardC2S_MsgID_value)
	proto.RegisterEnum("GamerPvpReqHistoryRankRewardS2C_MsgID", GamerPvpReqHistoryRankRewardS2C_MsgID_name, GamerPvpReqHistoryRankRewardS2C_MsgID_value)
	proto.RegisterEnum("GamerPvpReqAllHistoryRankRewardC2S_MsgID", GamerPvpReqAllHistoryRankRewardC2S_MsgID_name, GamerPvpReqAllHistoryRankRewardC2S_MsgID_value)
	proto.RegisterEnum("GamerPvpReqAllHistoryRankRewardS2C_MsgID", GamerPvpReqAllHistoryRankRewardS2C_MsgID_name, GamerPvpReqAllHistoryRankRewardS2C_MsgID_value)
	proto.RegisterEnum("GamerPvpReqSquadC2S_MsgID", GamerPvpReqSquadC2S_MsgID_name, GamerPvpReqSquadC2S_MsgID_value)
	proto.RegisterEnum("GamerPvpReqSquadS2C_MsgID", GamerPvpReqSquadS2C_MsgID_name, GamerPvpReqSquadS2C_MsgID_value)
	proto.RegisterEnum("GamerPvpChallengeReportC2S_MsgID", GamerPvpChallengeReportC2S_MsgID_name, GamerPvpChallengeReportC2S_MsgID_value)
	proto.RegisterEnum("GamerPvpChallengeReportS2C_MsgID", GamerPvpChallengeReportS2C_MsgID_name, GamerPvpChallengeReportS2C_MsgID_value)
	proto.RegisterEnum("GamerPvpSwapRankC2S_MsgID", GamerPvpSwapRankC2S_MsgID_name, GamerPvpSwapRankC2S_MsgID_value)
}

func init() { proto.RegisterFile("pvp.proto", fileDescriptor53) }

var fileDescriptor53 = []byte{
	// 1516 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xa4, 0x57, 0x5f, 0x6f, 0xdb, 0x54,
	0x14, 0x97, 0x9b, 0xa6, 0x75, 0x4e, 0xd2, 0x36, 0x4d, 0xcb, 0xc8, 0xba, 0x01, 0xdb, 0x15, 0xd2,
	0xba, 0x09, 0x65, 0x52, 0x1e, 0x40, 0xda, 0xc4, 0xc3, 0xda, 0xa0, 0x35, 0xb0, 0x6e, 0x53, 0x32,
	0x86, 0x10, 0x48, 0xe0, 0x3a, 0xb7, 0x89, 0xc1, 0xb1, 0xbd, 0xeb, 0x9b, 0xb4, 0x79, 0x41, 0xe2,
	0x3f, 0x0c, 0x01, 0x4f, 0x3c, 0xf2, 0xc8, 0xa7, 0xe0, 0xa3, 0xf0, 0x15, 0xf8, 0x10, 0x9c, 0x7b,
	0x7c, 0xed, 0x38, 0x89, 0xdd, 0x4c, 0xec, 0xa5, 0x8a, 0x7d, 0xef, 0x3d, 0xe7, 0x77, 0x7e, 0xe7,
	0x77, 0x7e, 0xd7, 0x85, 0x52, 0x30, 0x0e, 0x1a, 0x81, 0xf0, 0xa5, 0xbf, 0x07, 0xb6, 0xef, 0x9d,
	0xea, 0xdf, 0x15, 0xdb, 0x1f, 0x0e, 0x7d, 0x4f, 0x3f, 0x95, 0x87, 0x96, 0x2d, 0xfc, 0xe8, 0x81,
	0xbd, 0x0f, 0x97, 0x8e, 0x2d, 0x69, 0x0f, 0xee, 0x5b, 0x43, 0xde, 0x7d, 0x36, 0xb2, 0x7a, 0x4f,
	0x26, 0x01, 0x6f, 0x7b, 0xa7, 0x7e, 0xad, 0x02, 0xab, 0x6e, 0xd8, 0xee, 0xd5, 0x8d, 0x6b, 0xc6,
	0x7e, 0xb1, 0x56, 0x86, 0x42, 0xdf, 0xe9, 0xd5, 0x57, 0xe8, 0xe1, 0x15, 0xd8, 0x08, 0xe3, 0xbd,
	0x0f, 0x9c, 0x50, 0xd6, 0x0b, 0xd7, 0x0a, 0xfb, 0x45, 0x76, 0x17, 0xf6, 0x1e, 0xfa, 0xd2, 0xb1,
	0xf9, 0x23, 0x39, 0xe0, 0xa2, 0xcb, 0xc5, 0x18, 0xff, 0x4e, 0x3c, 0x9b, 0xe2, 0xd6, 0x5e, 0x83,
	0x52, 0x72, 0x88, 0x82, 0x6e, 0x36, 0xa1, 0x91, 0xa4, 0x64, 0xfb, 0x50, 0x7e, 0x3c, 0x0e, 0x3a,
	0x96, 0xf7, 0x25, 0x65, 0xd7, 0xf9, 0xa2, 0xe4, 0x08, 0x45, 0xe0, 0x42, 0x94, 0x9d, 0xfd, 0x69,
	0x40, 0x55, 0x6d, 0xf5, 0x4f, 0x7c, 0xf9, 0x84, 0x5b, 0xc3, 0xc5, 0xfd, 0x6f, 0xc2, 0x7a, 0x57,
	0x5a, 0x42, 0x72, 0x81, 0x47, 0x0a, 0xfb, 0xe5, 0xe6, 0x4e, 0x23, 0x3e, 0x70, 0x60, 0xb9, 0x2e,
	0x17, 0x74, 0x84, 0x41, 0xf1, 0x80, 0x7b, 0xf6, 0x80, 0xd0, 0xe7, 0xec, 0xd9, 0x81, 0xf2, 0x81,
	0x25, 0xa5, 0xcb, 0x9f, 0x5a, 0xee, 0x88, 0xd7, 0x57, 0x29, 0xfc, 0x06, 0x14, 0x1f, 0x06, 0xf6,
	0x83, 0x71, 0xbd, 0x48, 0x8f, 0x9b, 0xb0, 0x36, 0xb0, 0xdc, 0x53, 0xa4, 0x6a, 0x8d, 0xf0, 0x9d,
	0x43, 0x2d, 0x23, 0xd2, 0x36, 0x94, 0xbc, 0xb6, 0xd7, 0xe3, 0xe7, 0x81, 0x1f, 0x6a, 0x98, 0x18,
	0xc7, 0x0b, 0xec, 0x76, 0x4b, 0xb3, 0xba, 0x05, 0xeb, 0xc8, 0x86, 0xeb, 0xc8, 0x09, 0x22, 0xd2,
	0xeb, 0x2e, 0x1f, 0x73, 0x57, 0xa7, 0x45, 0x16, 0x42, 0xac, 0x4a, 0x67, 0xad, 0x01, 0xf0, 0x73,
	0x29, 0xac, 0x7b, 0x52, 0x8a, 0xb0, 0xbe, 0x4e, 0x99, 0x6f, 0xc3, 0x16, 0x66, 0x3e, 0x1c, 0xa8,
	0xac, 0x5e, 0x7f, 0x91, 0x17, 0xcc, 0xe0, 0x84, 0x04, 0x8c, 0x52, 0x9a, 0xec, 0x1f, 0x03, 0x2e,
	0xa5, 0x4e, 0xf0, 0x0e, 0x0f, 0x7c, 0x21, 0x97, 0x1f, 0x54, 0x35, 0x3b, 0xe1, 0xb1, 0xe5, 0x78,
	0x04, 0xd5, 0x54, 0x50, 0x9d, 0xf0, 0x23, 0x7c, 0x5c, 0x8d, 0x97, 0x4f, 0x88, 0xb6, 0x29, 0x45,
	0x52, 0x75, 0x4a, 0x53, 0xa4, 0x04, 0x64, 0xc7, 0x39, 0x9f, 0x38, 0x43, 0x4e, 0xf8, 0x0b, 0x29,
	0x26, 0xcd, 0xb8, 0x62, 0x0f, 0x75, 0x59, 0x2f, 0xe1, 0x53, 0x29, 0x51, 0x01, 0xd0, 0xda, 0x75,
	0x30, 0x51, 0xec, 0x47, 0xbe, 0xe7, 0x8b, 0x7a, 0x19, 0xdf, 0x94, 0x9b, 0x5b, 0x8d, 0xb6, 0xe4,
	0xc3, 0xa7, 0x96, 0x98, 0x1c, 0xa2, 0xf4, 0x9d, 0x3e, 0x6b, 0x51, 0x23, 0x8e, 0x50, 0xa0, 0xbe,
	0x98, 0x64, 0x2b, 0x6b, 0xa1, 0xb0, 0x2a, 0x98, 0xae, 0x15, 0x4a, 0x4a, 0x44, 0x5d, 0x60, 0x7f,
	0x19, 0xc4, 0x6a, 0xc7, 0x77, 0x79, 0xd7, 0x1a, 0x47, 0xb3, 0xf1, 0x3a, 0x98, 0x6a, 0x87, 0x83,
	0xbf, 0x29, 0x50, 0xb9, 0x59, 0x69, 0xa4, 0xd5, 0xcb, 0xc0, 0x8c, 0xeb, 0xd3, 0x0a, 0xac, 0x36,
	0xe6, 0x3b, 0x83, 0x22, 0x1d, 0x44, 0xd0, 0xd2, 0x02, 0x9c, 0x47, 0xbb, 0x0f, 0xeb, 0x82, 0x9a,
	0x12, 0x22, 0xb5, 0x6a, 0xd7, 0xab, 0x8d, 0xec, 0x86, 0xb1, 0x8f, 0xa7, 0x53, 0x91, 0x9c, 0xbe,
	0x02, 0x45, 0x41, 0xc5, 0x65, 0x81, 0xdc, 0x87, 0x0d, 0x91, 0x9e, 0x21, 0x62, 0xa0, 0xdc, 0xdc,
	0x6e, 0xcc, 0x0f, 0x17, 0x7b, 0x9b, 0x66, 0x33, 0x1a, 0xe8, 0x76, 0x4b, 0x71, 0x14, 0xd2, 0xef,
	0x84, 0x46, 0xec, 0xa7, 0xe2, 0xe3, 0x01, 0x32, 0xf7, 0x48, 0xf4, 0x68, 0xec, 0x14, 0x75, 0x6f,
	0x41, 0x25, 0x8e, 0x35, 0x4f, 0xfd, 0x86, 0xa2, 0x9e, 0xd2, 0x6b, 0x57, 0xd9, 0x60, 0x5f, 0xe9,
	0x02, 0xdc, 0xc8, 0x88, 0xe8, 0xc4, 0xc5, 0xa6, 0x81, 0xf5, 0xad, 0x87, 0x33, 0x83, 0xae, 0x17,
	0xe9, 0xec, 0x65, 0x28, 0x9e, 0xa4, 0xe6, 0x3b, 0xbd, 0x84, 0x63, 0x7d, 0x32, 0x37, 0xd6, 0x1b,
	0xec, 0x77, 0x03, 0x76, 0x11, 0x00, 0xd9, 0x61, 0x87, 0x9f, 0x59, 0xa2, 0xd7, 0xe1, 0xe1, 0xc8,
	0x95, 0x4a, 0x78, 0xa3, 0x91, 0xc6, 0x5d, 0x50, 0x83, 0xec, 0x9f, 0x7c, 0xc1, 0x6d, 0x39, 0xf5,
	0xc3, 0x94, 0x8a, 0x52, 0xe3, 0x70, 0x96, 0x8c, 0x03, 0xce, 0xaa, 0xa0, 0x80, 0x24, 0xab, 0x64,
	0x24, 0x9c, 0x50, 0x70, 0x7b, 0x4c, 0x23, 0x41, 0x7b, 0x22, 0x48, 0x32, 0x99, 0x07, 0x34, 0xd4,
	0xcb, 0x31, 0xa0, 0x94, 0x2e, 0x22, 0x6c, 0x2a, 0x80, 0xb2, 0xf8, 0xa4, 0x07, 0xd3, 0x80, 0xd1,
	0x6c, 0xdf, 0x81, 0x4d, 0x4d, 0xa7, 0x2a, 0xb9, 0xcb, 0x65, 0x6d, 0x17, 0x2a, 0x6a, 0xbc, 0x94,
	0x70, 0xe4, 0x20, 0x39, 0x87, 0x89, 0x71, 0x58, 0x06, 0xf2, 0xd0, 0x1f, 0x79, 0x52, 0x37, 0xee,
	0x5d, 0xb8, 0x12, 0x27, 0x6e, 0x59, 0x93, 0xc3, 0xd1, 0x70, 0xe4, 0x5a, 0xd2, 0x19, 0xf3, 0x17,
	0x4c, 0xfd, 0xaf, 0x11, 0x99, 0xb9, 0xce, 0x9d, 0x31, 0x72, 0x22, 0x35, 0x72, 0x48, 0x28, 0xaa,
	0x59, 0xfb, 0x05, 0xb5, 0x22, 0x19, 0xf5, 0xe2, 0x8c, 0x0d, 0xac, 0x91, 0x0d, 0x20, 0x5e, 0x27,
	0x8c, 0x07, 0x80, 0x88, 0x32, 0x71, 0x96, 0x22, 0x99, 0x08, 0xcc, 0x48, 0xde, 0x91, 0xc8, 0x38,
	0x2d, 0x26, 0x6d, 0x2f, 0x88, 0xa4, 0x34, 0xe3, 0x4a, 0x2d, 0x6d, 0x29, 0x00, 0x2b, 0xee, 0x98,
	0xcc, 0xa4, 0x58, 0xbb, 0x05, 0x15, 0xcc, 0xe0, 0x58, 0x9e, 0x4d, 0x25, 0xd4, 0x2b, 0x14, 0x74,
	0x37, 0x0e, 0x7a, 0x2f, 0xb5, 0xc6, 0x6e, 0xc0, 0x96, 0xba, 0x3e, 0x05, 0xae, 0xa9, 0xe7, 0xc3,
	0x66, 0x97, 0xed, 0x42, 0xf1, 0x38, 0xec, 0xe3, 0xac, 0x94, 0x61, 0x8d, 0xd3, 0xaf, 0xea, 0xd7,
	0x26, 0x3b, 0x83, 0x9d, 0xf4, 0xc6, 0x0e, 0x3f, 0x15, 0x3c, 0x1c, 0xd4, 0xf6, 0xb0, 0x5a, 0x05,
	0xdc, 0x20, 0x9d, 0x56, 0x1a, 0x69, 0xea, 0x70, 0x2d, 0xe4, 0xee, 0xa9, 0x9e, 0xcd, 0xd9, 0x35,
	0xbc, 0x32, 0x45, 0x14, 0x82, 0x20, 0x16, 0x68, 0x0b, 0xb9, 0xc8, 0xbd, 0x91, 0x8c, 0xa3, 0x13,
	0xc2, 0x0f, 0x66, 0x11, 0x76, 0x9b, 0x87, 0x68, 0x51, 0xab, 0x29, 0xfb, 0xda, 0x6d, 0x64, 0x00,
	0xcb, 0xa9, 0xe2, 0x6f, 0x83, 0x7c, 0x75, 0x2e, 0x87, 0x6a, 0x23, 0x3e, 0x70, 0x9b, 0x64, 0x94,
	0xd8, 0x42, 0xf2, 0x8a, 0x64, 0xbd, 0x42, 0x13, 0x94, 0x72, 0xff, 0x68, 0x77, 0x74, 0xdd, 0xd5,
	0xa1, 0x1a, 0xbf, 0x56, 0x74, 0xd0, 0x81, 0x55, 0x3a, 0x70, 0x19, 0xb6, 0x03, 0x94, 0x61, 0x6c,
	0x7a, 0xd1, 0xa1, 0x48, 0x1b, 0xb7, 0xa1, 0xd4, 0xb3, 0x26, 0x91, 0x2e, 0x51, 0x20, 0x8a, 0xc0,
	0xab, 0x8d, 0x0b, 0xb4, 0xcb, 0x6e, 0x41, 0x2d, 0x2e, 0x15, 0xd1, 0xbb, 0xa3, 0x70, 0x90, 0xd3,
	0xaf, 0x6f, 0x4c, 0xf6, 0x70, 0x61, 0xef, 0x4b, 0x30, 0x87, 0xf1, 0x26, 0xd3, 0xfe, 0xc7, 0xc5,
	0x60, 0xf2, 0x25, 0xe3, 0x81, 0x5e, 0x35, 0x9c, 0x28, 0x2b, 0xee, 0xda, 0xbe, 0xe0, 0x9a, 0x2b,
	0x64, 0xc4, 0x0f, 0x02, 0xdf, 0xe3, 0x9e, 0x9c, 0x2e, 0xd1, 0x67, 0x42, 0x56, 0xea, 0x6f, 0x4d,
	0xf6, 0xc9, 0x62, 0x6a, 0x55, 0x0b, 0x5e, 0x10, 0xdc, 0xe3, 0xc3, 0xc9, 0xcc, 0x05, 0x11, 0xeb,
	0x0b, 0x3b, 0x3a, 0x54, 0x34, 0x92, 0xf9, 0x51, 0xeb, 0x72, 0x82, 0x77, 0xa0, 0x9a, 0x04, 0x57,
	0xbd, 0x51, 0x91, 0xe7, 0xc4, 0x69, 0xe4, 0x8b, 0x33, 0x23, 0xe6, 0x77, 0x26, 0xbb, 0x09, 0xdb,
	0x69, 0x62, 0xdf, 0x3b, 0xcf, 0x69, 0xd3, 0xf7, 0x26, 0x3b, 0x9e, 0xdf, 0xfa, 0x12, 0x5d, 0xc2,
	0x70, 0x12, 0x76, 0x14, 0x4a, 0xc1, 0x3d, 0xab, 0x43, 0x97, 0x7c, 0x5f, 0x7d, 0xe3, 0x26, 0x9e,
	0x64, 0xcc, 0x78, 0xd2, 0x0a, 0x79, 0x92, 0x72, 0x16, 0x8e, 0x2e, 0xd3, 0xd3, 0xed, 0x49, 0xee,
	0x97, 0xc7, 0xfe, 0x19, 0xde, 0x4d, 0x91, 0xa9, 0xe9, 0x36, 0x17, 0xe7, 0xdb, 0x4c, 0xfe, 0x8f,
	0x45, 0x5c, 0x4a, 0xb4, 0x36, 0xcd, 0xaa, 0xe4, 0xa1, 0xae, 0x5b, 0xbc, 0xe4, 0x3a, 0xd3, 0xe4,
	0x18, 0xc9, 0x1b, 0x0d, 0xb5, 0x57, 0x67, 0x14, 0xf1, 0x83, 0xc9, 0xfe, 0x30, 0x32, 0xe3, 0x29,
	0x66, 0x16, 0xe3, 0xdd, 0x80, 0x12, 0x5d, 0xdf, 0xb8, 0x21, 0xd4, 0x17, 0x29, 0x39, 0xdd, 0x02,
	0x07, 0xe8, 0x8a, 0xca, 0x8d, 0x3a, 0x7a, 0xb3, 0xb6, 0x9c, 0xcc, 0xbd, 0x39, 0xb8, 0x5a, 0x70,
	0x75, 0x3a, 0x52, 0xcf, 0x50, 0x8a, 0x38, 0xcf, 0x07, 0x7e, 0x6f, 0x72, 0x84, 0xf4, 0xa9, 0x62,
	0xa7, 0x1e, 0x6d, 0xe4, 0x55, 0xf7, 0xe3, 0xc5, 0x51, 0x54, 0x89, 0x2f, 0x16, 0xa5, 0x0d, 0xd7,
	0x53, 0x51, 0x32, 0xcc, 0x42, 0x03, 0x4a, 0xdf, 0x75, 0x59, 0xa1, 0x7e, 0x32, 0x59, 0x6f, 0x59,
	0x28, 0x85, 0xea, 0x26, 0x14, 0xc6, 0x96, 0xab, 0x15, 0x79, 0xb1, 0x4b, 0x65, 0x67, 0xb9, 0x0f,
	0x6f, 0xa4, 0xb2, 0x2c, 0x7c, 0x12, 0xcc, 0xc3, 0x2d, 0x64, 0xc3, 0xfd, 0xd9, 0x64, 0x9f, 0x5f,
	0x1c, 0x48, 0x81, 0xbd, 0x11, 0x83, 0x55, 0x6a, 0xd8, 0x6b, 0xe4, 0x7e, 0x87, 0xe4, 0x64, 0xb8,
	0x03, 0x2c, 0x95, 0x01, 0xaf, 0xcb, 0x2c, 0xb4, 0x59, 0x67, 0x9f, 0x2b, 0x32, 0x97, 0x9d, 0x8d,
	0x0c, 0x66, 0x15, 0x01, 0x86, 0xff, 0x0f, 0xe1, 0x73, 0xd5, 0xfd, 0x9d, 0x54, 0x16, 0xfa, 0x4a,
	0x58, 0x6a, 0xc6, 0x59, 0xa1, 0x7e, 0x31, 0xd9, 0xd1, 0x62, 0xa8, 0x65, 0xe6, 0x9a, 0x13, 0xa9,
	0x09, 0x7b, 0xf3, 0x36, 0xad, 0xbf, 0xf1, 0x73, 0xe8, 0xfa, 0xd5, 0x64, 0x9f, 0xe6, 0x9e, 0x89,
	0x68, 0x4a, 0xfe, 0x81, 0x30, 0x2e, 0xfe, 0x07, 0x22, 0x3b, 0xfa, 0xdd, 0x69, 0x6d, 0xdd, 0x33,
	0x8b, 0xbc, 0x44, 0xeb, 0x0c, 0x3d, 0xa4, 0xcf, 0x65, 0xfe, 0x58, 0xfc, 0x66, 0xde, 0x7a, 0x07,
	0xea, 0x74, 0x38, 0xf9, 0x06, 0xfb, 0x30, 0xe8, 0x59, 0x92, 0xd3, 0xb7, 0xfb, 0x26, 0x40, 0x3f,
	0x74, 0x3e, 0x8b, 0xde, 0x54, 0x0d, 0x3c, 0xb8, 0xae, 0x9e, 0x5b, 0xdc, 0xad, 0xae, 0xfc, 0x17,
	0x00, 0x00, 0xff, 0xff, 0xc1, 0x98, 0x28, 0xd1, 0xc9, 0x10, 0x00, 0x00,
}
