// Code generated by protoc-gen-go.
// source: regular.proto
// DO NOT EDIT!

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type RecordCurrentLocationC2S_MsgID int32

const (
	RecordCurrentLocationC2S_eMsgID RecordCurrentLocationC2S_MsgID = 12545
)

var RecordCurrentLocationC2S_MsgID_name = map[int32]string{
	12545: "eMsgID",
}
var RecordCurrentLocationC2S_MsgID_value = map[string]int32{
	"eMsgID": 12545,
}

func (x RecordCurrentLocationC2S_MsgID) Enum() *RecordCurrentLocationC2S_MsgID {
	p := new(RecordCurrentLocationC2S_MsgID)
	*p = x
	return p
}
func (x RecordCurrentLocationC2S_MsgID) String() string {
	return proto.EnumName(RecordCurrentLocationC2S_MsgID_name, int32(x))
}
func (x *RecordCurrentLocationC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RecordCurrentLocationC2S_MsgID_value, data, "RecordCurrentLocationC2S_MsgID")
	if err != nil {
		return err
	}
	*x = RecordCurrentLocationC2S_MsgID(value)
	return nil
}
func (RecordCurrentLocationC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor60, []int{4, 0}
}

type RegularSweepC2S_MsgID int32

const (
	RegularSweepC2S_eMsgID RegularSweepC2S_MsgID = 12546
)

var RegularSweepC2S_MsgID_name = map[int32]string{
	12546: "eMsgID",
}
var RegularSweepC2S_MsgID_value = map[string]int32{
	"eMsgID": 12546,
}

func (x RegularSweepC2S_MsgID) Enum() *RegularSweepC2S_MsgID {
	p := new(RegularSweepC2S_MsgID)
	*p = x
	return p
}
func (x RegularSweepC2S_MsgID) String() string {
	return proto.EnumName(RegularSweepC2S_MsgID_name, int32(x))
}
func (x *RegularSweepC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RegularSweepC2S_MsgID_value, data, "RegularSweepC2S_MsgID")
	if err != nil {
		return err
	}
	*x = RegularSweepC2S_MsgID(value)
	return nil
}
func (RegularSweepC2S_MsgID) EnumDescriptor() ([]byte, []int) { return fileDescriptor60, []int{5, 0} }

type RegularSweepS2C_MsgID int32

const (
	RegularSweepS2C_eMsgID RegularSweepS2C_MsgID = 12546
)

var RegularSweepS2C_MsgID_name = map[int32]string{
	12546: "eMsgID",
}
var RegularSweepS2C_MsgID_value = map[string]int32{
	"eMsgID": 12546,
}

func (x RegularSweepS2C_MsgID) Enum() *RegularSweepS2C_MsgID {
	p := new(RegularSweepS2C_MsgID)
	*p = x
	return p
}
func (x RegularSweepS2C_MsgID) String() string {
	return proto.EnumName(RegularSweepS2C_MsgID_name, int32(x))
}
func (x *RegularSweepS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RegularSweepS2C_MsgID_value, data, "RegularSweepS2C_MsgID")
	if err != nil {
		return err
	}
	*x = RegularSweepS2C_MsgID(value)
	return nil
}
func (RegularSweepS2C_MsgID) EnumDescriptor() ([]byte, []int) { return fileDescriptor60, []int{6, 0} }

type RegularChoiceQuestionC2S_MsgID int32

const (
	RegularChoiceQuestionC2S_eMsgID RegularChoiceQuestionC2S_MsgID = 12547
)

var RegularChoiceQuestionC2S_MsgID_name = map[int32]string{
	12547: "eMsgID",
}
var RegularChoiceQuestionC2S_MsgID_value = map[string]int32{
	"eMsgID": 12547,
}

func (x RegularChoiceQuestionC2S_MsgID) Enum() *RegularChoiceQuestionC2S_MsgID {
	p := new(RegularChoiceQuestionC2S_MsgID)
	*p = x
	return p
}
func (x RegularChoiceQuestionC2S_MsgID) String() string {
	return proto.EnumName(RegularChoiceQuestionC2S_MsgID_name, int32(x))
}
func (x *RegularChoiceQuestionC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RegularChoiceQuestionC2S_MsgID_value, data, "RegularChoiceQuestionC2S_MsgID")
	if err != nil {
		return err
	}
	*x = RegularChoiceQuestionC2S_MsgID(value)
	return nil
}
func (RegularChoiceQuestionC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor60, []int{7, 0}
}

type RegularChoiceQuestionS2C_MsgID int32

const (
	RegularChoiceQuestionS2C_eMsgID RegularChoiceQuestionS2C_MsgID = 12547
)

var RegularChoiceQuestionS2C_MsgID_name = map[int32]string{
	12547: "eMsgID",
}
var RegularChoiceQuestionS2C_MsgID_value = map[string]int32{
	"eMsgID": 12547,
}

func (x RegularChoiceQuestionS2C_MsgID) Enum() *RegularChoiceQuestionS2C_MsgID {
	p := new(RegularChoiceQuestionS2C_MsgID)
	*p = x
	return p
}
func (x RegularChoiceQuestionS2C_MsgID) String() string {
	return proto.EnumName(RegularChoiceQuestionS2C_MsgID_name, int32(x))
}
func (x *RegularChoiceQuestionS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RegularChoiceQuestionS2C_MsgID_value, data, "RegularChoiceQuestionS2C_MsgID")
	if err != nil {
		return err
	}
	*x = RegularChoiceQuestionS2C_MsgID(value)
	return nil
}
func (RegularChoiceQuestionS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor60, []int{8, 0}
}

type RegularSaleC2S_MsgID int32

const (
	RegularSaleC2S_eMsgID RegularSaleC2S_MsgID = 12548
)

var RegularSaleC2S_MsgID_name = map[int32]string{
	12548: "eMsgID",
}
var RegularSaleC2S_MsgID_value = map[string]int32{
	"eMsgID": 12548,
}

func (x RegularSaleC2S_MsgID) Enum() *RegularSaleC2S_MsgID {
	p := new(RegularSaleC2S_MsgID)
	*p = x
	return p
}
func (x RegularSaleC2S_MsgID) String() string {
	return proto.EnumName(RegularSaleC2S_MsgID_name, int32(x))
}
func (x *RegularSaleC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RegularSaleC2S_MsgID_value, data, "RegularSaleC2S_MsgID")
	if err != nil {
		return err
	}
	*x = RegularSaleC2S_MsgID(value)
	return nil
}
func (RegularSaleC2S_MsgID) EnumDescriptor() ([]byte, []int) { return fileDescriptor60, []int{9, 0} }

type RegularSaleS2C_MsgID int32

const (
	RegularSaleS2C_eMsgID RegularSaleS2C_MsgID = 12548
)

var RegularSaleS2C_MsgID_name = map[int32]string{
	12548: "eMsgID",
}
var RegularSaleS2C_MsgID_value = map[string]int32{
	"eMsgID": 12548,
}

func (x RegularSaleS2C_MsgID) Enum() *RegularSaleS2C_MsgID {
	p := new(RegularSaleS2C_MsgID)
	*p = x
	return p
}
func (x RegularSaleS2C_MsgID) String() string {
	return proto.EnumName(RegularSaleS2C_MsgID_name, int32(x))
}
func (x *RegularSaleS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RegularSaleS2C_MsgID_value, data, "RegularSaleS2C_MsgID")
	if err != nil {
		return err
	}
	*x = RegularSaleS2C_MsgID(value)
	return nil
}
func (RegularSaleS2C_MsgID) EnumDescriptor() ([]byte, []int) { return fileDescriptor60, []int{10, 0} }

type SendRegularInfoS2C_MsgID int32

const (
	SendRegularInfoS2C_eMsgID SendRegularInfoS2C_MsgID = 12549
)

var SendRegularInfoS2C_MsgID_name = map[int32]string{
	12549: "eMsgID",
}
var SendRegularInfoS2C_MsgID_value = map[string]int32{
	"eMsgID": 12549,
}

func (x SendRegularInfoS2C_MsgID) Enum() *SendRegularInfoS2C_MsgID {
	p := new(SendRegularInfoS2C_MsgID)
	*p = x
	return p
}
func (x SendRegularInfoS2C_MsgID) String() string {
	return proto.EnumName(SendRegularInfoS2C_MsgID_name, int32(x))
}
func (x *SendRegularInfoS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SendRegularInfoS2C_MsgID_value, data, "SendRegularInfoS2C_MsgID")
	if err != nil {
		return err
	}
	*x = SendRegularInfoS2C_MsgID(value)
	return nil
}
func (SendRegularInfoS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor60, []int{11, 0}
}

type UpdateRegularMatchInfoS2C_MsgID int32

const (
	UpdateRegularMatchInfoS2C_eMsgID UpdateRegularMatchInfoS2C_MsgID = 12550
)

var UpdateRegularMatchInfoS2C_MsgID_name = map[int32]string{
	12550: "eMsgID",
}
var UpdateRegularMatchInfoS2C_MsgID_value = map[string]int32{
	"eMsgID": 12550,
}

func (x UpdateRegularMatchInfoS2C_MsgID) Enum() *UpdateRegularMatchInfoS2C_MsgID {
	p := new(UpdateRegularMatchInfoS2C_MsgID)
	*p = x
	return p
}
func (x UpdateRegularMatchInfoS2C_MsgID) String() string {
	return proto.EnumName(UpdateRegularMatchInfoS2C_MsgID_name, int32(x))
}
func (x *UpdateRegularMatchInfoS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(UpdateRegularMatchInfoS2C_MsgID_value, data, "UpdateRegularMatchInfoS2C_MsgID")
	if err != nil {
		return err
	}
	*x = UpdateRegularMatchInfoS2C_MsgID(value)
	return nil
}
func (UpdateRegularMatchInfoS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor60, []int{12, 0}
}

type UpdateRegularBranchInfoS2C_MsgID int32

const (
	UpdateRegularBranchInfoS2C_eMsgID UpdateRegularBranchInfoS2C_MsgID = 12551
)

var UpdateRegularBranchInfoS2C_MsgID_name = map[int32]string{
	12551: "eMsgID",
}
var UpdateRegularBranchInfoS2C_MsgID_value = map[string]int32{
	"eMsgID": 12551,
}

func (x UpdateRegularBranchInfoS2C_MsgID) Enum() *UpdateRegularBranchInfoS2C_MsgID {
	p := new(UpdateRegularBranchInfoS2C_MsgID)
	*p = x
	return p
}
func (x UpdateRegularBranchInfoS2C_MsgID) String() string {
	return proto.EnumName(UpdateRegularBranchInfoS2C_MsgID_name, int32(x))
}
func (x *UpdateRegularBranchInfoS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(UpdateRegularBranchInfoS2C_MsgID_value, data, "UpdateRegularBranchInfoS2C_MsgID")
	if err != nil {
		return err
	}
	*x = UpdateRegularBranchInfoS2C_MsgID(value)
	return nil
}
func (UpdateRegularBranchInfoS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor60, []int{13, 0}
}

type RegularGetTaskRewardC2S_MsgID int32

const (
	RegularGetTaskRewardC2S_eMsgID RegularGetTaskRewardC2S_MsgID = 12552
)

var RegularGetTaskRewardC2S_MsgID_name = map[int32]string{
	12552: "eMsgID",
}
var RegularGetTaskRewardC2S_MsgID_value = map[string]int32{
	"eMsgID": 12552,
}

func (x RegularGetTaskRewardC2S_MsgID) Enum() *RegularGetTaskRewardC2S_MsgID {
	p := new(RegularGetTaskRewardC2S_MsgID)
	*p = x
	return p
}
func (x RegularGetTaskRewardC2S_MsgID) String() string {
	return proto.EnumName(RegularGetTaskRewardC2S_MsgID_name, int32(x))
}
func (x *RegularGetTaskRewardC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RegularGetTaskRewardC2S_MsgID_value, data, "RegularGetTaskRewardC2S_MsgID")
	if err != nil {
		return err
	}
	*x = RegularGetTaskRewardC2S_MsgID(value)
	return nil
}
func (RegularGetTaskRewardC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor60, []int{14, 0}
}

type RegularGetTaskRewardS2C_MsgID int32

const (
	RegularGetTaskRewardS2C_eMsgID RegularGetTaskRewardS2C_MsgID = 12552
)

var RegularGetTaskRewardS2C_MsgID_name = map[int32]string{
	12552: "eMsgID",
}
var RegularGetTaskRewardS2C_MsgID_value = map[string]int32{
	"eMsgID": 12552,
}

func (x RegularGetTaskRewardS2C_MsgID) Enum() *RegularGetTaskRewardS2C_MsgID {
	p := new(RegularGetTaskRewardS2C_MsgID)
	*p = x
	return p
}
func (x RegularGetTaskRewardS2C_MsgID) String() string {
	return proto.EnumName(RegularGetTaskRewardS2C_MsgID_name, int32(x))
}
func (x *RegularGetTaskRewardS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RegularGetTaskRewardS2C_MsgID_value, data, "RegularGetTaskRewardS2C_MsgID")
	if err != nil {
		return err
	}
	*x = RegularGetTaskRewardS2C_MsgID(value)
	return nil
}
func (RegularGetTaskRewardS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor60, []int{15, 0}
}

type AddNewRegularSeasonS2C_MsgID int32

const (
	AddNewRegularSeasonS2C_eMsgID AddNewRegularSeasonS2C_MsgID = 12553
)

var AddNewRegularSeasonS2C_MsgID_name = map[int32]string{
	12553: "eMsgID",
}
var AddNewRegularSeasonS2C_MsgID_value = map[string]int32{
	"eMsgID": 12553,
}

func (x AddNewRegularSeasonS2C_MsgID) Enum() *AddNewRegularSeasonS2C_MsgID {
	p := new(AddNewRegularSeasonS2C_MsgID)
	*p = x
	return p
}
func (x AddNewRegularSeasonS2C_MsgID) String() string {
	return proto.EnumName(AddNewRegularSeasonS2C_MsgID_name, int32(x))
}
func (x *AddNewRegularSeasonS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(AddNewRegularSeasonS2C_MsgID_value, data, "AddNewRegularSeasonS2C_MsgID")
	if err != nil {
		return err
	}
	*x = AddNewRegularSeasonS2C_MsgID(value)
	return nil
}
func (AddNewRegularSeasonS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor60, []int{16, 0}
}

type EnterRegularC2S_MsgID int32

const (
	EnterRegularC2S_eMsgID EnterRegularC2S_MsgID = 12554
)

var EnterRegularC2S_MsgID_name = map[int32]string{
	12554: "eMsgID",
}
var EnterRegularC2S_MsgID_value = map[string]int32{
	"eMsgID": 12554,
}

func (x EnterRegularC2S_MsgID) Enum() *EnterRegularC2S_MsgID {
	p := new(EnterRegularC2S_MsgID)
	*p = x
	return p
}
func (x EnterRegularC2S_MsgID) String() string {
	return proto.EnumName(EnterRegularC2S_MsgID_name, int32(x))
}
func (x *EnterRegularC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EnterRegularC2S_MsgID_value, data, "EnterRegularC2S_MsgID")
	if err != nil {
		return err
	}
	*x = EnterRegularC2S_MsgID(value)
	return nil
}
func (EnterRegularC2S_MsgID) EnumDescriptor() ([]byte, []int) { return fileDescriptor60, []int{17, 0} }

type EnterRegularS2C_MsgID int32

const (
	EnterRegularS2C_eMsgID EnterRegularS2C_MsgID = 12554
)

var EnterRegularS2C_MsgID_name = map[int32]string{
	12554: "eMsgID",
}
var EnterRegularS2C_MsgID_value = map[string]int32{
	"eMsgID": 12554,
}

func (x EnterRegularS2C_MsgID) Enum() *EnterRegularS2C_MsgID {
	p := new(EnterRegularS2C_MsgID)
	*p = x
	return p
}
func (x EnterRegularS2C_MsgID) String() string {
	return proto.EnumName(EnterRegularS2C_MsgID_name, int32(x))
}
func (x *EnterRegularS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EnterRegularS2C_MsgID_value, data, "EnterRegularS2C_MsgID")
	if err != nil {
		return err
	}
	*x = EnterRegularS2C_MsgID(value)
	return nil
}
func (EnterRegularS2C_MsgID) EnumDescriptor() ([]byte, []int) { return fileDescriptor60, []int{18, 0} }

type GetRegularSeasonYearRewardC2S_MsgID int32

const (
	GetRegularSeasonYearRewardC2S_eMsgID GetRegularSeasonYearRewardC2S_MsgID = 12555
)

var GetRegularSeasonYearRewardC2S_MsgID_name = map[int32]string{
	12555: "eMsgID",
}
var GetRegularSeasonYearRewardC2S_MsgID_value = map[string]int32{
	"eMsgID": 12555,
}

func (x GetRegularSeasonYearRewardC2S_MsgID) Enum() *GetRegularSeasonYearRewardC2S_MsgID {
	p := new(GetRegularSeasonYearRewardC2S_MsgID)
	*p = x
	return p
}
func (x GetRegularSeasonYearRewardC2S_MsgID) String() string {
	return proto.EnumName(GetRegularSeasonYearRewardC2S_MsgID_name, int32(x))
}
func (x *GetRegularSeasonYearRewardC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GetRegularSeasonYearRewardC2S_MsgID_value, data, "GetRegularSeasonYearRewardC2S_MsgID")
	if err != nil {
		return err
	}
	*x = GetRegularSeasonYearRewardC2S_MsgID(value)
	return nil
}
func (GetRegularSeasonYearRewardC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor60, []int{19, 0}
}

type GetRegularSeasonYearRewardS2C_MsgID int32

const (
	GetRegularSeasonYearRewardS2C_eMsgID GetRegularSeasonYearRewardS2C_MsgID = 12555
)

var GetRegularSeasonYearRewardS2C_MsgID_name = map[int32]string{
	12555: "eMsgID",
}
var GetRegularSeasonYearRewardS2C_MsgID_value = map[string]int32{
	"eMsgID": 12555,
}

func (x GetRegularSeasonYearRewardS2C_MsgID) Enum() *GetRegularSeasonYearRewardS2C_MsgID {
	p := new(GetRegularSeasonYearRewardS2C_MsgID)
	*p = x
	return p
}
func (x GetRegularSeasonYearRewardS2C_MsgID) String() string {
	return proto.EnumName(GetRegularSeasonYearRewardS2C_MsgID_name, int32(x))
}
func (x *GetRegularSeasonYearRewardS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GetRegularSeasonYearRewardS2C_MsgID_value, data, "GetRegularSeasonYearRewardS2C_MsgID")
	if err != nil {
		return err
	}
	*x = GetRegularSeasonYearRewardS2C_MsgID(value)
	return nil
}
func (GetRegularSeasonYearRewardS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor60, []int{20, 0}
}

type RegularSweepByItemC2S_MsgID int32

const (
	RegularSweepByItemC2S_eMsgID RegularSweepByItemC2S_MsgID = 12556
)

var RegularSweepByItemC2S_MsgID_name = map[int32]string{
	12556: "eMsgID",
}
var RegularSweepByItemC2S_MsgID_value = map[string]int32{
	"eMsgID": 12556,
}

func (x RegularSweepByItemC2S_MsgID) Enum() *RegularSweepByItemC2S_MsgID {
	p := new(RegularSweepByItemC2S_MsgID)
	*p = x
	return p
}
func (x RegularSweepByItemC2S_MsgID) String() string {
	return proto.EnumName(RegularSweepByItemC2S_MsgID_name, int32(x))
}
func (x *RegularSweepByItemC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RegularSweepByItemC2S_MsgID_value, data, "RegularSweepByItemC2S_MsgID")
	if err != nil {
		return err
	}
	*x = RegularSweepByItemC2S_MsgID(value)
	return nil
}
func (RegularSweepByItemC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor60, []int{21, 0}
}

type RegularSweepByItemS2C_MsgID int32

const (
	RegularSweepByItemS2C_eMsgID RegularSweepByItemS2C_MsgID = 12556
)

var RegularSweepByItemS2C_MsgID_name = map[int32]string{
	12556: "eMsgID",
}
var RegularSweepByItemS2C_MsgID_value = map[string]int32{
	"eMsgID": 12556,
}

func (x RegularSweepByItemS2C_MsgID) Enum() *RegularSweepByItemS2C_MsgID {
	p := new(RegularSweepByItemS2C_MsgID)
	*p = x
	return p
}
func (x RegularSweepByItemS2C_MsgID) String() string {
	return proto.EnumName(RegularSweepByItemS2C_MsgID_name, int32(x))
}
func (x *RegularSweepByItemS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RegularSweepByItemS2C_MsgID_value, data, "RegularSweepByItemS2C_MsgID")
	if err != nil {
		return err
	}
	*x = RegularSweepByItemS2C_MsgID(value)
	return nil
}
func (RegularSweepByItemS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor60, []int{22, 0}
}

type RegularGetHalfMonthRewardC2S_MsgID int32

const (
	RegularGetHalfMonthRewardC2S_eMsgID RegularGetHalfMonthRewardC2S_MsgID = 12557
)

var RegularGetHalfMonthRewardC2S_MsgID_name = map[int32]string{
	12557: "eMsgID",
}
var RegularGetHalfMonthRewardC2S_MsgID_value = map[string]int32{
	"eMsgID": 12557,
}

func (x RegularGetHalfMonthRewardC2S_MsgID) Enum() *RegularGetHalfMonthRewardC2S_MsgID {
	p := new(RegularGetHalfMonthRewardC2S_MsgID)
	*p = x
	return p
}
func (x RegularGetHalfMonthRewardC2S_MsgID) String() string {
	return proto.EnumName(RegularGetHalfMonthRewardC2S_MsgID_name, int32(x))
}
func (x *RegularGetHalfMonthRewardC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RegularGetHalfMonthRewardC2S_MsgID_value, data, "RegularGetHalfMonthRewardC2S_MsgID")
	if err != nil {
		return err
	}
	*x = RegularGetHalfMonthRewardC2S_MsgID(value)
	return nil
}
func (RegularGetHalfMonthRewardC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor60, []int{23, 0}
}

type RegularGetHalfMonthRewardS2C_MsgID int32

const (
	RegularGetHalfMonthRewardS2C_eMsgID RegularGetHalfMonthRewardS2C_MsgID = 12557
)

var RegularGetHalfMonthRewardS2C_MsgID_name = map[int32]string{
	12557: "eMsgID",
}
var RegularGetHalfMonthRewardS2C_MsgID_value = map[string]int32{
	"eMsgID": 12557,
}

func (x RegularGetHalfMonthRewardS2C_MsgID) Enum() *RegularGetHalfMonthRewardS2C_MsgID {
	p := new(RegularGetHalfMonthRewardS2C_MsgID)
	*p = x
	return p
}
func (x RegularGetHalfMonthRewardS2C_MsgID) String() string {
	return proto.EnumName(RegularGetHalfMonthRewardS2C_MsgID_name, int32(x))
}
func (x *RegularGetHalfMonthRewardS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RegularGetHalfMonthRewardS2C_MsgID_value, data, "RegularGetHalfMonthRewardS2C_MsgID")
	if err != nil {
		return err
	}
	*x = RegularGetHalfMonthRewardS2C_MsgID(value)
	return nil
}
func (RegularGetHalfMonthRewardS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor60, []int{24, 0}
}

type LittleGameAwardC2S_MsgID int32

const (
	LittleGameAwardC2S_eMsgID LittleGameAwardC2S_MsgID = 12564
)

var LittleGameAwardC2S_MsgID_name = map[int32]string{
	12564: "eMsgID",
}
var LittleGameAwardC2S_MsgID_value = map[string]int32{
	"eMsgID": 12564,
}

func (x LittleGameAwardC2S_MsgID) Enum() *LittleGameAwardC2S_MsgID {
	p := new(LittleGameAwardC2S_MsgID)
	*p = x
	return p
}
func (x LittleGameAwardC2S_MsgID) String() string {
	return proto.EnumName(LittleGameAwardC2S_MsgID_name, int32(x))
}
func (x *LittleGameAwardC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LittleGameAwardC2S_MsgID_value, data, "LittleGameAwardC2S_MsgID")
	if err != nil {
		return err
	}
	*x = LittleGameAwardC2S_MsgID(value)
	return nil
}
func (LittleGameAwardC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor60, []int{25, 0}
}

type LittleGameAwardS2C_MsgID int32

const (
	LittleGameAwardS2C_eMsgID LittleGameAwardS2C_MsgID = 12564
)

var LittleGameAwardS2C_MsgID_name = map[int32]string{
	12564: "eMsgID",
}
var LittleGameAwardS2C_MsgID_value = map[string]int32{
	"eMsgID": 12564,
}

func (x LittleGameAwardS2C_MsgID) Enum() *LittleGameAwardS2C_MsgID {
	p := new(LittleGameAwardS2C_MsgID)
	*p = x
	return p
}
func (x LittleGameAwardS2C_MsgID) String() string {
	return proto.EnumName(LittleGameAwardS2C_MsgID_name, int32(x))
}
func (x *LittleGameAwardS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LittleGameAwardS2C_MsgID_value, data, "LittleGameAwardS2C_MsgID")
	if err != nil {
		return err
	}
	*x = LittleGameAwardS2C_MsgID(value)
	return nil
}
func (LittleGameAwardS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor60, []int{26, 0}
}

type LittleGameCardAwardC2S_MsgID int32

const (
	LittleGameCardAwardC2S_eMsgID LittleGameCardAwardC2S_MsgID = 12565
)

var LittleGameCardAwardC2S_MsgID_name = map[int32]string{
	12565: "eMsgID",
}
var LittleGameCardAwardC2S_MsgID_value = map[string]int32{
	"eMsgID": 12565,
}

func (x LittleGameCardAwardC2S_MsgID) Enum() *LittleGameCardAwardC2S_MsgID {
	p := new(LittleGameCardAwardC2S_MsgID)
	*p = x
	return p
}
func (x LittleGameCardAwardC2S_MsgID) String() string {
	return proto.EnumName(LittleGameCardAwardC2S_MsgID_name, int32(x))
}
func (x *LittleGameCardAwardC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LittleGameCardAwardC2S_MsgID_value, data, "LittleGameCardAwardC2S_MsgID")
	if err != nil {
		return err
	}
	*x = LittleGameCardAwardC2S_MsgID(value)
	return nil
}
func (LittleGameCardAwardC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor60, []int{27, 0}
}

type LittleGameCardAwardS2C_MsgID int32

const (
	LittleGameCardAwardS2C_eMsgID LittleGameCardAwardS2C_MsgID = 12565
)

var LittleGameCardAwardS2C_MsgID_name = map[int32]string{
	12565: "eMsgID",
}
var LittleGameCardAwardS2C_MsgID_value = map[string]int32{
	"eMsgID": 12565,
}

func (x LittleGameCardAwardS2C_MsgID) Enum() *LittleGameCardAwardS2C_MsgID {
	p := new(LittleGameCardAwardS2C_MsgID)
	*p = x
	return p
}
func (x LittleGameCardAwardS2C_MsgID) String() string {
	return proto.EnumName(LittleGameCardAwardS2C_MsgID_name, int32(x))
}
func (x *LittleGameCardAwardS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LittleGameCardAwardS2C_MsgID_value, data, "LittleGameCardAwardS2C_MsgID")
	if err != nil {
		return err
	}
	*x = LittleGameCardAwardS2C_MsgID(value)
	return nil
}
func (LittleGameCardAwardS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor60, []int{28, 0}
}

type RecordHalfMonthDscC2S_MsgID int32

const (
	RecordHalfMonthDscC2S_eMsgID RecordHalfMonthDscC2S_MsgID = 12566
)

var RecordHalfMonthDscC2S_MsgID_name = map[int32]string{
	12566: "eMsgID",
}
var RecordHalfMonthDscC2S_MsgID_value = map[string]int32{
	"eMsgID": 12566,
}

func (x RecordHalfMonthDscC2S_MsgID) Enum() *RecordHalfMonthDscC2S_MsgID {
	p := new(RecordHalfMonthDscC2S_MsgID)
	*p = x
	return p
}
func (x RecordHalfMonthDscC2S_MsgID) String() string {
	return proto.EnumName(RecordHalfMonthDscC2S_MsgID_name, int32(x))
}
func (x *RecordHalfMonthDscC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RecordHalfMonthDscC2S_MsgID_value, data, "RecordHalfMonthDscC2S_MsgID")
	if err != nil {
		return err
	}
	*x = RecordHalfMonthDscC2S_MsgID(value)
	return nil
}
func (RecordHalfMonthDscC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor60, []int{29, 0}
}

type RecordHalfMonthDscS2C_MsgID int32

const (
	RecordHalfMonthDscS2C_eMsgID RecordHalfMonthDscS2C_MsgID = 12566
)

var RecordHalfMonthDscS2C_MsgID_name = map[int32]string{
	12566: "eMsgID",
}
var RecordHalfMonthDscS2C_MsgID_value = map[string]int32{
	"eMsgID": 12566,
}

func (x RecordHalfMonthDscS2C_MsgID) Enum() *RecordHalfMonthDscS2C_MsgID {
	p := new(RecordHalfMonthDscS2C_MsgID)
	*p = x
	return p
}
func (x RecordHalfMonthDscS2C_MsgID) String() string {
	return proto.EnumName(RecordHalfMonthDscS2C_MsgID_name, int32(x))
}
func (x *RecordHalfMonthDscS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RecordHalfMonthDscS2C_MsgID_value, data, "RecordHalfMonthDscS2C_MsgID")
	if err != nil {
		return err
	}
	*x = RecordHalfMonthDscS2C_MsgID(value)
	return nil
}
func (RecordHalfMonthDscS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor60, []int{30, 0}
}

// 常规赛离散数据
type RegularDiscreteData struct {
	LastEnterSeasonId *int32 `protobuf:"varint,1,opt,name=lastEnterSeasonId" json:"lastEnterSeasonId,omitempty"`
	XXX_unrecognized  []byte `json:"-"`
}

func (m *RegularDiscreteData) Reset()                    { *m = RegularDiscreteData{} }
func (m *RegularDiscreteData) String() string            { return proto.CompactTextString(m) }
func (*RegularDiscreteData) ProtoMessage()               {}
func (*RegularDiscreteData) Descriptor() ([]byte, []int) { return fileDescriptor60, []int{0} }

func (m *RegularDiscreteData) GetLastEnterSeasonId() int32 {
	if m != nil && m.LastEnterSeasonId != nil {
		return *m.LastEnterSeasonId
	}
	return 0
}

// 单个常规赛数据
type RegularData struct {
	// 赛季比赛数据
	MatchInfoList []*RegularMatchInfo `protobuf:"bytes,1,rep,name=matchInfoList" json:"matchInfoList,omitempty"`
	// 支线任务列表
	BranchInfoList []*RegularBranchInfo `protobuf:"bytes,2,rep,name=branchInfoList" json:"branchInfoList,omitempty"`
	// 已经领取的事件奖励id
	EventRewardId []int32 `protobuf:"varint,3,rep,name=eventRewardId" json:"eventRewardId,omitempty"`
	// 当前关卡（关卡、事件）
	CurrentLevel *int32 `protobuf:"varint,4,opt,name=currentLevel" json:"currentLevel,omitempty"`
	// 赛季id
	SeasonCfgId *int32 `protobuf:"varint,5,opt,name=seasonCfgId" json:"seasonCfgId,omitempty"`
	// 年度奖励是否领取
	YearRewardIsGet *bool `protobuf:"varint,6,opt,name=yearRewardIsGet" json:"yearRewardIsGet,omitempty"`
	// 半月月报记录
	HalfMonthDscRecord []int32 `protobuf:"varint,7,rep,name=halfMonthDscRecord" json:"halfMonthDscRecord,omitempty"`
	XXX_unrecognized   []byte  `json:"-"`
}

func (m *RegularData) Reset()                    { *m = RegularData{} }
func (m *RegularData) String() string            { return proto.CompactTextString(m) }
func (*RegularData) ProtoMessage()               {}
func (*RegularData) Descriptor() ([]byte, []int) { return fileDescriptor60, []int{1} }

func (m *RegularData) GetMatchInfoList() []*RegularMatchInfo {
	if m != nil {
		return m.MatchInfoList
	}
	return nil
}

func (m *RegularData) GetBranchInfoList() []*RegularBranchInfo {
	if m != nil {
		return m.BranchInfoList
	}
	return nil
}

func (m *RegularData) GetEventRewardId() []int32 {
	if m != nil {
		return m.EventRewardId
	}
	return nil
}

func (m *RegularData) GetCurrentLevel() int32 {
	if m != nil && m.CurrentLevel != nil {
		return *m.CurrentLevel
	}
	return 0
}

func (m *RegularData) GetSeasonCfgId() int32 {
	if m != nil && m.SeasonCfgId != nil {
		return *m.SeasonCfgId
	}
	return 0
}

func (m *RegularData) GetYearRewardIsGet() bool {
	if m != nil && m.YearRewardIsGet != nil {
		return *m.YearRewardIsGet
	}
	return false
}

func (m *RegularData) GetHalfMonthDscRecord() []int32 {
	if m != nil {
		return m.HalfMonthDscRecord
	}
	return nil
}

// 支线任务记录
type RegularBranchInfo struct {
	// 配置id
	CfgId *int32 `protobuf:"varint,1,opt,name=cfgId" json:"cfgId,omitempty"`
	// 是否完成
	IsFinish *bool `protobuf:"varint,2,opt,name=isFinish" json:"isFinish,omitempty"`
	// 参数
	Param []int32 `protobuf:"varint,3,rep,name=param" json:"param,omitempty"`
	// 限制时间
	TimeLimit        *int64 `protobuf:"varint,4,opt,name=timeLimit" json:"timeLimit,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *RegularBranchInfo) Reset()                    { *m = RegularBranchInfo{} }
func (m *RegularBranchInfo) String() string            { return proto.CompactTextString(m) }
func (*RegularBranchInfo) ProtoMessage()               {}
func (*RegularBranchInfo) Descriptor() ([]byte, []int) { return fileDescriptor60, []int{2} }

func (m *RegularBranchInfo) GetCfgId() int32 {
	if m != nil && m.CfgId != nil {
		return *m.CfgId
	}
	return 0
}

func (m *RegularBranchInfo) GetIsFinish() bool {
	if m != nil && m.IsFinish != nil {
		return *m.IsFinish
	}
	return false
}

func (m *RegularBranchInfo) GetParam() []int32 {
	if m != nil {
		return m.Param
	}
	return nil
}

func (m *RegularBranchInfo) GetTimeLimit() int64 {
	if m != nil && m.TimeLimit != nil {
		return *m.TimeLimit
	}
	return 0
}

// 常规赛比赛数据
type RegularMatchInfo struct {
	// 比赛配置id
	CfgId *int32 `protobuf:"varint,1,opt,name=cfgId" json:"cfgId,omitempty"`
	// 我方得分
	MyScore *int32 `protobuf:"varint,4,opt,name=myScore" json:"myScore,omitempty"`
	// 对方得分
	OppoScore        *int32 `protobuf:"varint,5,opt,name=oppoScore" json:"oppoScore,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *RegularMatchInfo) Reset()                    { *m = RegularMatchInfo{} }
func (m *RegularMatchInfo) String() string            { return proto.CompactTextString(m) }
func (*RegularMatchInfo) ProtoMessage()               {}
func (*RegularMatchInfo) Descriptor() ([]byte, []int) { return fileDescriptor60, []int{3} }

func (m *RegularMatchInfo) GetCfgId() int32 {
	if m != nil && m.CfgId != nil {
		return *m.CfgId
	}
	return 0
}

func (m *RegularMatchInfo) GetMyScore() int32 {
	if m != nil && m.MyScore != nil {
		return *m.MyScore
	}
	return 0
}

func (m *RegularMatchInfo) GetOppoScore() int32 {
	if m != nil && m.OppoScore != nil {
		return *m.OppoScore
	}
	return 0
}

// 记录飞机位置
type RecordCurrentLocationC2S struct {
	SeasonId         *int32 `protobuf:"varint,1,opt,name=seasonId" json:"seasonId,omitempty"`
	Location         *int32 `protobuf:"varint,2,opt,name=location" json:"location,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *RecordCurrentLocationC2S) Reset()                    { *m = RecordCurrentLocationC2S{} }
func (m *RecordCurrentLocationC2S) String() string            { return proto.CompactTextString(m) }
func (*RecordCurrentLocationC2S) ProtoMessage()               {}
func (*RecordCurrentLocationC2S) Descriptor() ([]byte, []int) { return fileDescriptor60, []int{4} }

func (m *RecordCurrentLocationC2S) GetSeasonId() int32 {
	if m != nil && m.SeasonId != nil {
		return *m.SeasonId
	}
	return 0
}

func (m *RecordCurrentLocationC2S) GetLocation() int32 {
	if m != nil && m.Location != nil {
		return *m.Location
	}
	return 0
}

// 常规赛扫荡
type RegularSweepC2S struct {
	SeasonId             *int32 `protobuf:"varint,1,opt,name=seasonId" json:"seasonId,omitempty"`
	RegularScheduleCfgId *int32 `protobuf:"varint,2,opt,name=regularScheduleCfgId" json:"regularScheduleCfgId,omitempty"`
	Count                *int32 `protobuf:"varint,3,opt,name=count" json:"count,omitempty"`
	XXX_unrecognized     []byte `json:"-"`
}

func (m *RegularSweepC2S) Reset()                    { *m = RegularSweepC2S{} }
func (m *RegularSweepC2S) String() string            { return proto.CompactTextString(m) }
func (*RegularSweepC2S) ProtoMessage()               {}
func (*RegularSweepC2S) Descriptor() ([]byte, []int) { return fileDescriptor60, []int{5} }

func (m *RegularSweepC2S) GetSeasonId() int32 {
	if m != nil && m.SeasonId != nil {
		return *m.SeasonId
	}
	return 0
}

func (m *RegularSweepC2S) GetRegularScheduleCfgId() int32 {
	if m != nil && m.RegularScheduleCfgId != nil {
		return *m.RegularScheduleCfgId
	}
	return 0
}

func (m *RegularSweepC2S) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

// 常规赛扫荡
type RegularSweepS2C struct {
	SeasonId             *int32                `protobuf:"varint,1,opt,name=seasonId" json:"seasonId,omitempty"`
	RegularScheduleCfgId *int32                `protobuf:"varint,2,opt,name=regularScheduleCfgId" json:"regularScheduleCfgId,omitempty"`
	ItemList             []*ItemVaryConfigList `protobuf:"bytes,3,rep,name=itemList" json:"itemList,omitempty"`
	XXX_unrecognized     []byte                `json:"-"`
}

func (m *RegularSweepS2C) Reset()                    { *m = RegularSweepS2C{} }
func (m *RegularSweepS2C) String() string            { return proto.CompactTextString(m) }
func (*RegularSweepS2C) ProtoMessage()               {}
func (*RegularSweepS2C) Descriptor() ([]byte, []int) { return fileDescriptor60, []int{6} }

func (m *RegularSweepS2C) GetSeasonId() int32 {
	if m != nil && m.SeasonId != nil {
		return *m.SeasonId
	}
	return 0
}

func (m *RegularSweepS2C) GetRegularScheduleCfgId() int32 {
	if m != nil && m.RegularScheduleCfgId != nil {
		return *m.RegularScheduleCfgId
	}
	return 0
}

func (m *RegularSweepS2C) GetItemList() []*ItemVaryConfigList {
	if m != nil {
		return m.ItemList
	}
	return nil
}

// 常规赛选择题
type RegularChoiceQuestionC2S struct {
	SeasonId             *int32 `protobuf:"varint,1,opt,name=seasonId" json:"seasonId,omitempty"`
	RegularScheduleCfgId *int32 `protobuf:"varint,2,opt,name=regularScheduleCfgId" json:"regularScheduleCfgId,omitempty"`
	Option               *int32 `protobuf:"varint,3,opt,name=option" json:"option,omitempty"`
	XXX_unrecognized     []byte `json:"-"`
}

func (m *RegularChoiceQuestionC2S) Reset()                    { *m = RegularChoiceQuestionC2S{} }
func (m *RegularChoiceQuestionC2S) String() string            { return proto.CompactTextString(m) }
func (*RegularChoiceQuestionC2S) ProtoMessage()               {}
func (*RegularChoiceQuestionC2S) Descriptor() ([]byte, []int) { return fileDescriptor60, []int{7} }

func (m *RegularChoiceQuestionC2S) GetSeasonId() int32 {
	if m != nil && m.SeasonId != nil {
		return *m.SeasonId
	}
	return 0
}

func (m *RegularChoiceQuestionC2S) GetRegularScheduleCfgId() int32 {
	if m != nil && m.RegularScheduleCfgId != nil {
		return *m.RegularScheduleCfgId
	}
	return 0
}

func (m *RegularChoiceQuestionC2S) GetOption() int32 {
	if m != nil && m.Option != nil {
		return *m.Option
	}
	return 0
}

// 常规赛选择题
type RegularChoiceQuestionS2C struct {
	SeasonId         *int32             `protobuf:"varint,1,opt,name=seasonId" json:"seasonId,omitempty"`
	BranchInfo       *RegularBranchInfo `protobuf:"bytes,2,opt,name=branchInfo" json:"branchInfo,omitempty"`
	Rewards          []*ItemVaryConfig  `protobuf:"bytes,3,rep,name=rewards" json:"rewards,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *RegularChoiceQuestionS2C) Reset()                    { *m = RegularChoiceQuestionS2C{} }
func (m *RegularChoiceQuestionS2C) String() string            { return proto.CompactTextString(m) }
func (*RegularChoiceQuestionS2C) ProtoMessage()               {}
func (*RegularChoiceQuestionS2C) Descriptor() ([]byte, []int) { return fileDescriptor60, []int{8} }

func (m *RegularChoiceQuestionS2C) GetSeasonId() int32 {
	if m != nil && m.SeasonId != nil {
		return *m.SeasonId
	}
	return 0
}

func (m *RegularChoiceQuestionS2C) GetBranchInfo() *RegularBranchInfo {
	if m != nil {
		return m.BranchInfo
	}
	return nil
}

func (m *RegularChoiceQuestionS2C) GetRewards() []*ItemVaryConfig {
	if m != nil {
		return m.Rewards
	}
	return nil
}

// 常规赛打折
type RegularSaleC2S struct {
	SeasonId             *int32 `protobuf:"varint,1,opt,name=seasonId" json:"seasonId,omitempty"`
	RegularScheduleCfgId *int32 `protobuf:"varint,2,opt,name=regularScheduleCfgId" json:"regularScheduleCfgId,omitempty"`
	Option               *int32 `protobuf:"varint,3,opt,name=option" json:"option,omitempty"`
	XXX_unrecognized     []byte `json:"-"`
}

func (m *RegularSaleC2S) Reset()                    { *m = RegularSaleC2S{} }
func (m *RegularSaleC2S) String() string            { return proto.CompactTextString(m) }
func (*RegularSaleC2S) ProtoMessage()               {}
func (*RegularSaleC2S) Descriptor() ([]byte, []int) { return fileDescriptor60, []int{9} }

func (m *RegularSaleC2S) GetSeasonId() int32 {
	if m != nil && m.SeasonId != nil {
		return *m.SeasonId
	}
	return 0
}

func (m *RegularSaleC2S) GetRegularScheduleCfgId() int32 {
	if m != nil && m.RegularScheduleCfgId != nil {
		return *m.RegularScheduleCfgId
	}
	return 0
}

func (m *RegularSaleC2S) GetOption() int32 {
	if m != nil && m.Option != nil {
		return *m.Option
	}
	return 0
}

// 常规赛打折
type RegularSaleS2C struct {
	SeasonId         *int32             `protobuf:"varint,1,opt,name=seasonId" json:"seasonId,omitempty"`
	BranchInfo       *RegularBranchInfo `protobuf:"bytes,2,opt,name=branchInfo" json:"branchInfo,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *RegularSaleS2C) Reset()                    { *m = RegularSaleS2C{} }
func (m *RegularSaleS2C) String() string            { return proto.CompactTextString(m) }
func (*RegularSaleS2C) ProtoMessage()               {}
func (*RegularSaleS2C) Descriptor() ([]byte, []int) { return fileDescriptor60, []int{10} }

func (m *RegularSaleS2C) GetSeasonId() int32 {
	if m != nil && m.SeasonId != nil {
		return *m.SeasonId
	}
	return 0
}

func (m *RegularSaleS2C) GetBranchInfo() *RegularBranchInfo {
	if m != nil {
		return m.BranchInfo
	}
	return nil
}

// 上线推送常规赛数据
type SendRegularInfoS2C struct {
	// 常规赛离散数据
	DiscreteData *RegularDiscreteData `protobuf:"bytes,1,opt,name=discreteData" json:"discreteData,omitempty"`
	// 常规赛赛季数据列表
	RegularDataList  []*RegularData `protobuf:"bytes,2,rep,name=regularDataList" json:"regularDataList,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *SendRegularInfoS2C) Reset()                    { *m = SendRegularInfoS2C{} }
func (m *SendRegularInfoS2C) String() string            { return proto.CompactTextString(m) }
func (*SendRegularInfoS2C) ProtoMessage()               {}
func (*SendRegularInfoS2C) Descriptor() ([]byte, []int) { return fileDescriptor60, []int{11} }

func (m *SendRegularInfoS2C) GetDiscreteData() *RegularDiscreteData {
	if m != nil {
		return m.DiscreteData
	}
	return nil
}

func (m *SendRegularInfoS2C) GetRegularDataList() []*RegularData {
	if m != nil {
		return m.RegularDataList
	}
	return nil
}

// 更新常规赛比赛信息
type UpdateRegularMatchInfoS2C struct {
	MatchInfo        *RegularMatchInfo `protobuf:"bytes,1,opt,name=matchInfo" json:"matchInfo,omitempty"`
	SeasonId         *int32            `protobuf:"varint,2,opt,name=seasonId" json:"seasonId,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *UpdateRegularMatchInfoS2C) Reset()                    { *m = UpdateRegularMatchInfoS2C{} }
func (m *UpdateRegularMatchInfoS2C) String() string            { return proto.CompactTextString(m) }
func (*UpdateRegularMatchInfoS2C) ProtoMessage()               {}
func (*UpdateRegularMatchInfoS2C) Descriptor() ([]byte, []int) { return fileDescriptor60, []int{12} }

func (m *UpdateRegularMatchInfoS2C) GetMatchInfo() *RegularMatchInfo {
	if m != nil {
		return m.MatchInfo
	}
	return nil
}

func (m *UpdateRegularMatchInfoS2C) GetSeasonId() int32 {
	if m != nil && m.SeasonId != nil {
		return *m.SeasonId
	}
	return 0
}

// 更新常规赛挑战赛
type UpdateRegularBranchInfoS2C struct {
	BranchInfoList   []*RegularBranchInfo `protobuf:"bytes,1,rep,name=branchInfoList" json:"branchInfoList,omitempty"`
	SeasonId         *int32               `protobuf:"varint,2,opt,name=seasonId" json:"seasonId,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *UpdateRegularBranchInfoS2C) Reset()                    { *m = UpdateRegularBranchInfoS2C{} }
func (m *UpdateRegularBranchInfoS2C) String() string            { return proto.CompactTextString(m) }
func (*UpdateRegularBranchInfoS2C) ProtoMessage()               {}
func (*UpdateRegularBranchInfoS2C) Descriptor() ([]byte, []int) { return fileDescriptor60, []int{13} }

func (m *UpdateRegularBranchInfoS2C) GetBranchInfoList() []*RegularBranchInfo {
	if m != nil {
		return m.BranchInfoList
	}
	return nil
}

func (m *UpdateRegularBranchInfoS2C) GetSeasonId() int32 {
	if m != nil && m.SeasonId != nil {
		return *m.SeasonId
	}
	return 0
}

// 领取常规赛任务奖励
type RegularGetTaskRewardC2S struct {
	// 赛季id
	SeasonId *int32 `protobuf:"varint,1,opt,name=seasonId" json:"seasonId,omitempty"`
	// 任务id
	TaskId *int32 `protobuf:"varint,2,opt,name=taskId" json:"taskId,omitempty"`
	// 新手引导id
	GuideId          *int32 `protobuf:"varint,3,opt,name=guideId" json:"guideId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *RegularGetTaskRewardC2S) Reset()                    { *m = RegularGetTaskRewardC2S{} }
func (m *RegularGetTaskRewardC2S) String() string            { return proto.CompactTextString(m) }
func (*RegularGetTaskRewardC2S) ProtoMessage()               {}
func (*RegularGetTaskRewardC2S) Descriptor() ([]byte, []int) { return fileDescriptor60, []int{14} }

func (m *RegularGetTaskRewardC2S) GetSeasonId() int32 {
	if m != nil && m.SeasonId != nil {
		return *m.SeasonId
	}
	return 0
}

func (m *RegularGetTaskRewardC2S) GetTaskId() int32 {
	if m != nil && m.TaskId != nil {
		return *m.TaskId
	}
	return 0
}

func (m *RegularGetTaskRewardC2S) GetGuideId() int32 {
	if m != nil && m.GuideId != nil {
		return *m.GuideId
	}
	return 0
}

// 领取常规赛任务奖励
type RegularGetTaskRewardS2C struct {
	SeasonId         *int32 `protobuf:"varint,1,opt,name=seasonId" json:"seasonId,omitempty"`
	TaskId           *int32 `protobuf:"varint,2,opt,name=taskId" json:"taskId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *RegularGetTaskRewardS2C) Reset()                    { *m = RegularGetTaskRewardS2C{} }
func (m *RegularGetTaskRewardS2C) String() string            { return proto.CompactTextString(m) }
func (*RegularGetTaskRewardS2C) ProtoMessage()               {}
func (*RegularGetTaskRewardS2C) Descriptor() ([]byte, []int) { return fileDescriptor60, []int{15} }

func (m *RegularGetTaskRewardS2C) GetSeasonId() int32 {
	if m != nil && m.SeasonId != nil {
		return *m.SeasonId
	}
	return 0
}

func (m *RegularGetTaskRewardS2C) GetTaskId() int32 {
	if m != nil && m.TaskId != nil {
		return *m.TaskId
	}
	return 0
}

// 新增赛季
type AddNewRegularSeasonS2C struct {
	Regular          *RegularData `protobuf:"bytes,1,opt,name=regular" json:"regular,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *AddNewRegularSeasonS2C) Reset()                    { *m = AddNewRegularSeasonS2C{} }
func (m *AddNewRegularSeasonS2C) String() string            { return proto.CompactTextString(m) }
func (*AddNewRegularSeasonS2C) ProtoMessage()               {}
func (*AddNewRegularSeasonS2C) Descriptor() ([]byte, []int) { return fileDescriptor60, []int{16} }

func (m *AddNewRegularSeasonS2C) GetRegular() *RegularData {
	if m != nil {
		return m.Regular
	}
	return nil
}

// 进入常规赛
type EnterRegularC2S struct {
	SeasonId         *int32 `protobuf:"varint,1,opt,name=seasonId" json:"seasonId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *EnterRegularC2S) Reset()                    { *m = EnterRegularC2S{} }
func (m *EnterRegularC2S) String() string            { return proto.CompactTextString(m) }
func (*EnterRegularC2S) ProtoMessage()               {}
func (*EnterRegularC2S) Descriptor() ([]byte, []int) { return fileDescriptor60, []int{17} }

func (m *EnterRegularC2S) GetSeasonId() int32 {
	if m != nil && m.SeasonId != nil {
		return *m.SeasonId
	}
	return 0
}

// 进入常规赛
type EnterRegularS2C struct {
	SeasonId         *int32 `protobuf:"varint,1,opt,name=seasonId" json:"seasonId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *EnterRegularS2C) Reset()                    { *m = EnterRegularS2C{} }
func (m *EnterRegularS2C) String() string            { return proto.CompactTextString(m) }
func (*EnterRegularS2C) ProtoMessage()               {}
func (*EnterRegularS2C) Descriptor() ([]byte, []int) { return fileDescriptor60, []int{18} }

func (m *EnterRegularS2C) GetSeasonId() int32 {
	if m != nil && m.SeasonId != nil {
		return *m.SeasonId
	}
	return 0
}

// 领常规赛赛季年度奖励
type GetRegularSeasonYearRewardC2S struct {
	SeasonId         *int32 `protobuf:"varint,1,opt,name=seasonId" json:"seasonId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GetRegularSeasonYearRewardC2S) Reset()         { *m = GetRegularSeasonYearRewardC2S{} }
func (m *GetRegularSeasonYearRewardC2S) String() string { return proto.CompactTextString(m) }
func (*GetRegularSeasonYearRewardC2S) ProtoMessage()    {}
func (*GetRegularSeasonYearRewardC2S) Descriptor() ([]byte, []int) {
	return fileDescriptor60, []int{19}
}

func (m *GetRegularSeasonYearRewardC2S) GetSeasonId() int32 {
	if m != nil && m.SeasonId != nil {
		return *m.SeasonId
	}
	return 0
}

// 领常规赛赛季年度奖励
type GetRegularSeasonYearRewardS2C struct {
	SeasonId         *int32 `protobuf:"varint,1,opt,name=seasonId" json:"seasonId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GetRegularSeasonYearRewardS2C) Reset()         { *m = GetRegularSeasonYearRewardS2C{} }
func (m *GetRegularSeasonYearRewardS2C) String() string { return proto.CompactTextString(m) }
func (*GetRegularSeasonYearRewardS2C) ProtoMessage()    {}
func (*GetRegularSeasonYearRewardS2C) Descriptor() ([]byte, []int) {
	return fileDescriptor60, []int{20}
}

func (m *GetRegularSeasonYearRewardS2C) GetSeasonId() int32 {
	if m != nil && m.SeasonId != nil {
		return *m.SeasonId
	}
	return 0
}

// 常规赛升阶扫荡（根据所需的道具进行精确扫荡）
type RegularSweepByItemC2S struct {
	SeasonId             *int32          `protobuf:"varint,1,opt,name=seasonId" json:"seasonId,omitempty"`
	RegularScheduleCfgId *int32          `protobuf:"varint,2,opt,name=regularScheduleCfgId" json:"regularScheduleCfgId,omitempty"`
	TargetItem           *ItemVaryConfig `protobuf:"bytes,3,opt,name=target_item" json:"target_item,omitempty"`
	IsOneKeySweep        *bool           `protobuf:"varint,4,opt,name=isOneKeySweep" json:"isOneKeySweep,omitempty"`
	PlayerInstId         *int64          `protobuf:"varint,5,opt,name=playerInstId" json:"playerInstId,omitempty"`
	Index                *int32          `protobuf:"varint,6,opt,name=index" json:"index,omitempty"`
	SlotId               *int32          `protobuf:"varint,7,opt,name=slotId" json:"slotId,omitempty"`
	XXX_unrecognized     []byte          `json:"-"`
}

func (m *RegularSweepByItemC2S) Reset()                    { *m = RegularSweepByItemC2S{} }
func (m *RegularSweepByItemC2S) String() string            { return proto.CompactTextString(m) }
func (*RegularSweepByItemC2S) ProtoMessage()               {}
func (*RegularSweepByItemC2S) Descriptor() ([]byte, []int) { return fileDescriptor60, []int{21} }

func (m *RegularSweepByItemC2S) GetSeasonId() int32 {
	if m != nil && m.SeasonId != nil {
		return *m.SeasonId
	}
	return 0
}

func (m *RegularSweepByItemC2S) GetRegularScheduleCfgId() int32 {
	if m != nil && m.RegularScheduleCfgId != nil {
		return *m.RegularScheduleCfgId
	}
	return 0
}

func (m *RegularSweepByItemC2S) GetTargetItem() *ItemVaryConfig {
	if m != nil {
		return m.TargetItem
	}
	return nil
}

func (m *RegularSweepByItemC2S) GetIsOneKeySweep() bool {
	if m != nil && m.IsOneKeySweep != nil {
		return *m.IsOneKeySweep
	}
	return false
}

func (m *RegularSweepByItemC2S) GetPlayerInstId() int64 {
	if m != nil && m.PlayerInstId != nil {
		return *m.PlayerInstId
	}
	return 0
}

func (m *RegularSweepByItemC2S) GetIndex() int32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *RegularSweepByItemC2S) GetSlotId() int32 {
	if m != nil && m.SlotId != nil {
		return *m.SlotId
	}
	return 0
}

// 常规赛升阶扫荡（根据所需的道具进行精确扫荡）
type RegularSweepByItemS2C struct {
	SeasonId             *int32                `protobuf:"varint,1,opt,name=seasonId" json:"seasonId,omitempty"`
	RegularScheduleCfgId *int32                `protobuf:"varint,2,opt,name=regularScheduleCfgId" json:"regularScheduleCfgId,omitempty"`
	ItemList             []*ItemVaryConfigList `protobuf:"bytes,3,rep,name=itemList" json:"itemList,omitempty"`
	IsOneKeySweep        *bool                 `protobuf:"varint,4,opt,name=isOneKeySweep" json:"isOneKeySweep,omitempty"`
	TargetItem           *ItemVaryConfig       `protobuf:"bytes,5,opt,name=target_item" json:"target_item,omitempty"`
	Index                *int32                `protobuf:"varint,6,opt,name=index" json:"index,omitempty"`
	SlotId               *int32                `protobuf:"varint,7,opt,name=slotId" json:"slotId,omitempty"`
	PlayerInstId         *int64                `protobuf:"varint,8,opt,name=playerInstId" json:"playerInstId,omitempty"`
	XXX_unrecognized     []byte                `json:"-"`
}

func (m *RegularSweepByItemS2C) Reset()                    { *m = RegularSweepByItemS2C{} }
func (m *RegularSweepByItemS2C) String() string            { return proto.CompactTextString(m) }
func (*RegularSweepByItemS2C) ProtoMessage()               {}
func (*RegularSweepByItemS2C) Descriptor() ([]byte, []int) { return fileDescriptor60, []int{22} }

func (m *RegularSweepByItemS2C) GetSeasonId() int32 {
	if m != nil && m.SeasonId != nil {
		return *m.SeasonId
	}
	return 0
}

func (m *RegularSweepByItemS2C) GetRegularScheduleCfgId() int32 {
	if m != nil && m.RegularScheduleCfgId != nil {
		return *m.RegularScheduleCfgId
	}
	return 0
}

func (m *RegularSweepByItemS2C) GetItemList() []*ItemVaryConfigList {
	if m != nil {
		return m.ItemList
	}
	return nil
}

func (m *RegularSweepByItemS2C) GetIsOneKeySweep() bool {
	if m != nil && m.IsOneKeySweep != nil {
		return *m.IsOneKeySweep
	}
	return false
}

func (m *RegularSweepByItemS2C) GetTargetItem() *ItemVaryConfig {
	if m != nil {
		return m.TargetItem
	}
	return nil
}

func (m *RegularSweepByItemS2C) GetIndex() int32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *RegularSweepByItemS2C) GetSlotId() int32 {
	if m != nil && m.SlotId != nil {
		return *m.SlotId
	}
	return 0
}

func (m *RegularSweepByItemS2C) GetPlayerInstId() int64 {
	if m != nil && m.PlayerInstId != nil {
		return *m.PlayerInstId
	}
	return 0
}

// 领取半月奖励
type RegularGetHalfMonthRewardC2S struct {
	SeasonId             *int32 `protobuf:"varint,1,opt,name=seasonId" json:"seasonId,omitempty"`
	RegularScheduleCfgId *int32 `protobuf:"varint,2,opt,name=regularScheduleCfgId" json:"regularScheduleCfgId,omitempty"`
	XXX_unrecognized     []byte `json:"-"`
}

func (m *RegularGetHalfMonthRewardC2S) Reset()                    { *m = RegularGetHalfMonthRewardC2S{} }
func (m *RegularGetHalfMonthRewardC2S) String() string            { return proto.CompactTextString(m) }
func (*RegularGetHalfMonthRewardC2S) ProtoMessage()               {}
func (*RegularGetHalfMonthRewardC2S) Descriptor() ([]byte, []int) { return fileDescriptor60, []int{23} }

func (m *RegularGetHalfMonthRewardC2S) GetSeasonId() int32 {
	if m != nil && m.SeasonId != nil {
		return *m.SeasonId
	}
	return 0
}

func (m *RegularGetHalfMonthRewardC2S) GetRegularScheduleCfgId() int32 {
	if m != nil && m.RegularScheduleCfgId != nil {
		return *m.RegularScheduleCfgId
	}
	return 0
}

// 领取半月奖励
type RegularGetHalfMonthRewardS2C struct {
	SeasonId             *int32 `protobuf:"varint,1,opt,name=seasonId" json:"seasonId,omitempty"`
	RegularScheduleCfgId *int32 `protobuf:"varint,2,opt,name=regularScheduleCfgId" json:"regularScheduleCfgId,omitempty"`
	XXX_unrecognized     []byte `json:"-"`
}

func (m *RegularGetHalfMonthRewardS2C) Reset()                    { *m = RegularGetHalfMonthRewardS2C{} }
func (m *RegularGetHalfMonthRewardS2C) String() string            { return proto.CompactTextString(m) }
func (*RegularGetHalfMonthRewardS2C) ProtoMessage()               {}
func (*RegularGetHalfMonthRewardS2C) Descriptor() ([]byte, []int) { return fileDescriptor60, []int{24} }

func (m *RegularGetHalfMonthRewardS2C) GetSeasonId() int32 {
	if m != nil && m.SeasonId != nil {
		return *m.SeasonId
	}
	return 0
}

func (m *RegularGetHalfMonthRewardS2C) GetRegularScheduleCfgId() int32 {
	if m != nil && m.RegularScheduleCfgId != nil {
		return *m.RegularScheduleCfgId
	}
	return 0
}

// 小游戏-看图识人 关卡挑战完成领取奖励
type LittleGameAwardC2S struct {
	SeasonId             *int32 `protobuf:"varint,1,opt,name=seasonId" json:"seasonId,omitempty"`
	RegularScheduleCfgId *int32 `protobuf:"varint,2,opt,name=regularScheduleCfgId" json:"regularScheduleCfgId,omitempty"`
	XXX_unrecognized     []byte `json:"-"`
}

func (m *LittleGameAwardC2S) Reset()                    { *m = LittleGameAwardC2S{} }
func (m *LittleGameAwardC2S) String() string            { return proto.CompactTextString(m) }
func (*LittleGameAwardC2S) ProtoMessage()               {}
func (*LittleGameAwardC2S) Descriptor() ([]byte, []int) { return fileDescriptor60, []int{25} }

func (m *LittleGameAwardC2S) GetSeasonId() int32 {
	if m != nil && m.SeasonId != nil {
		return *m.SeasonId
	}
	return 0
}

func (m *LittleGameAwardC2S) GetRegularScheduleCfgId() int32 {
	if m != nil && m.RegularScheduleCfgId != nil {
		return *m.RegularScheduleCfgId
	}
	return 0
}

// 小游戏-返回看图识人 关卡挑战完成领取奖励
type LittleGameAwardS2C struct {
	SeasonId         *int32             `protobuf:"varint,1,opt,name=seasonId" json:"seasonId,omitempty"`
	BranchInfo       *RegularBranchInfo `protobuf:"bytes,2,opt,name=branchInfo" json:"branchInfo,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *LittleGameAwardS2C) Reset()                    { *m = LittleGameAwardS2C{} }
func (m *LittleGameAwardS2C) String() string            { return proto.CompactTextString(m) }
func (*LittleGameAwardS2C) ProtoMessage()               {}
func (*LittleGameAwardS2C) Descriptor() ([]byte, []int) { return fileDescriptor60, []int{26} }

func (m *LittleGameAwardS2C) GetSeasonId() int32 {
	if m != nil && m.SeasonId != nil {
		return *m.SeasonId
	}
	return 0
}

func (m *LittleGameAwardS2C) GetBranchInfo() *RegularBranchInfo {
	if m != nil {
		return m.BranchInfo
	}
	return nil
}

// 小游戏-翻牌 关卡挑战完成领取奖励
type LittleGameCardAwardC2S struct {
	SeasonId             *int32 `protobuf:"varint,1,opt,name=seasonId" json:"seasonId,omitempty"`
	RegularScheduleCfgId *int32 `protobuf:"varint,2,opt,name=regularScheduleCfgId" json:"regularScheduleCfgId,omitempty"`
	XXX_unrecognized     []byte `json:"-"`
}

func (m *LittleGameCardAwardC2S) Reset()                    { *m = LittleGameCardAwardC2S{} }
func (m *LittleGameCardAwardC2S) String() string            { return proto.CompactTextString(m) }
func (*LittleGameCardAwardC2S) ProtoMessage()               {}
func (*LittleGameCardAwardC2S) Descriptor() ([]byte, []int) { return fileDescriptor60, []int{27} }

func (m *LittleGameCardAwardC2S) GetSeasonId() int32 {
	if m != nil && m.SeasonId != nil {
		return *m.SeasonId
	}
	return 0
}

func (m *LittleGameCardAwardC2S) GetRegularScheduleCfgId() int32 {
	if m != nil && m.RegularScheduleCfgId != nil {
		return *m.RegularScheduleCfgId
	}
	return 0
}

// 小游戏-返回翻牌 关卡挑战完成领取奖励
type LittleGameCardAwardS2C struct {
	SeasonId         *int32             `protobuf:"varint,1,opt,name=seasonId" json:"seasonId,omitempty"`
	BranchInfo       *RegularBranchInfo `protobuf:"bytes,2,opt,name=branchInfo" json:"branchInfo,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *LittleGameCardAwardS2C) Reset()                    { *m = LittleGameCardAwardS2C{} }
func (m *LittleGameCardAwardS2C) String() string            { return proto.CompactTextString(m) }
func (*LittleGameCardAwardS2C) ProtoMessage()               {}
func (*LittleGameCardAwardS2C) Descriptor() ([]byte, []int) { return fileDescriptor60, []int{28} }

func (m *LittleGameCardAwardS2C) GetSeasonId() int32 {
	if m != nil && m.SeasonId != nil {
		return *m.SeasonId
	}
	return 0
}

func (m *LittleGameCardAwardS2C) GetBranchInfo() *RegularBranchInfo {
	if m != nil {
		return m.BranchInfo
	}
	return nil
}

// 记录半月报展示状态
type RecordHalfMonthDscC2S struct {
	// 常规赛赛程id
	CfgId            *int32 `protobuf:"varint,1,opt,name=cfgId" json:"cfgId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *RecordHalfMonthDscC2S) Reset()                    { *m = RecordHalfMonthDscC2S{} }
func (m *RecordHalfMonthDscC2S) String() string            { return proto.CompactTextString(m) }
func (*RecordHalfMonthDscC2S) ProtoMessage()               {}
func (*RecordHalfMonthDscC2S) Descriptor() ([]byte, []int) { return fileDescriptor60, []int{29} }

func (m *RecordHalfMonthDscC2S) GetCfgId() int32 {
	if m != nil && m.CfgId != nil {
		return *m.CfgId
	}
	return 0
}

// 记录半月报展示状态
type RecordHalfMonthDscS2C struct {
	// 半月报配置id
	CfgId            *int32 `protobuf:"varint,1,opt,name=cfgId" json:"cfgId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *RecordHalfMonthDscS2C) Reset()                    { *m = RecordHalfMonthDscS2C{} }
func (m *RecordHalfMonthDscS2C) String() string            { return proto.CompactTextString(m) }
func (*RecordHalfMonthDscS2C) ProtoMessage()               {}
func (*RecordHalfMonthDscS2C) Descriptor() ([]byte, []int) { return fileDescriptor60, []int{30} }

func (m *RecordHalfMonthDscS2C) GetCfgId() int32 {
	if m != nil && m.CfgId != nil {
		return *m.CfgId
	}
	return 0
}

func init() {
	proto.RegisterType((*RegularDiscreteData)(nil), "RegularDiscreteData")
	proto.RegisterType((*RegularData)(nil), "RegularData")
	proto.RegisterType((*RegularBranchInfo)(nil), "RegularBranchInfo")
	proto.RegisterType((*RegularMatchInfo)(nil), "RegularMatchInfo")
	proto.RegisterType((*RecordCurrentLocationC2S)(nil), "RecordCurrentLocationC2S")
	proto.RegisterType((*RegularSweepC2S)(nil), "RegularSweepC2S")
	proto.RegisterType((*RegularSweepS2C)(nil), "RegularSweepS2C")
	proto.RegisterType((*RegularChoiceQuestionC2S)(nil), "RegularChoiceQuestionC2S")
	proto.RegisterType((*RegularChoiceQuestionS2C)(nil), "RegularChoiceQuestionS2C")
	proto.RegisterType((*RegularSaleC2S)(nil), "RegularSaleC2S")
	proto.RegisterType((*RegularSaleS2C)(nil), "RegularSaleS2C")
	proto.RegisterType((*SendRegularInfoS2C)(nil), "SendRegularInfoS2C")
	proto.RegisterType((*UpdateRegularMatchInfoS2C)(nil), "UpdateRegularMatchInfoS2C")
	proto.RegisterType((*UpdateRegularBranchInfoS2C)(nil), "UpdateRegularBranchInfoS2C")
	proto.RegisterType((*RegularGetTaskRewardC2S)(nil), "RegularGetTaskRewardC2S")
	proto.RegisterType((*RegularGetTaskRewardS2C)(nil), "RegularGetTaskRewardS2C")
	proto.RegisterType((*AddNewRegularSeasonS2C)(nil), "AddNewRegularSeasonS2C")
	proto.RegisterType((*EnterRegularC2S)(nil), "EnterRegularC2S")
	proto.RegisterType((*EnterRegularS2C)(nil), "EnterRegularS2C")
	proto.RegisterType((*GetRegularSeasonYearRewardC2S)(nil), "GetRegularSeasonYearRewardC2S")
	proto.RegisterType((*GetRegularSeasonYearRewardS2C)(nil), "GetRegularSeasonYearRewardS2C")
	proto.RegisterType((*RegularSweepByItemC2S)(nil), "RegularSweepByItemC2S")
	proto.RegisterType((*RegularSweepByItemS2C)(nil), "RegularSweepByItemS2C")
	proto.RegisterType((*RegularGetHalfMonthRewardC2S)(nil), "RegularGetHalfMonthRewardC2S")
	proto.RegisterType((*RegularGetHalfMonthRewardS2C)(nil), "RegularGetHalfMonthRewardS2C")
	proto.RegisterType((*LittleGameAwardC2S)(nil), "LittleGameAwardC2S")
	proto.RegisterType((*LittleGameAwardS2C)(nil), "LittleGameAwardS2C")
	proto.RegisterType((*LittleGameCardAwardC2S)(nil), "LittleGameCardAwardC2S")
	proto.RegisterType((*LittleGameCardAwardS2C)(nil), "LittleGameCardAwardS2C")
	proto.RegisterType((*RecordHalfMonthDscC2S)(nil), "RecordHalfMonthDscC2S")
	proto.RegisterType((*RecordHalfMonthDscS2C)(nil), "RecordHalfMonthDscS2C")
	proto.RegisterEnum("RecordCurrentLocationC2S_MsgID", RecordCurrentLocationC2S_MsgID_name, RecordCurrentLocationC2S_MsgID_value)
	proto.RegisterEnum("RegularSweepC2S_MsgID", RegularSweepC2S_MsgID_name, RegularSweepC2S_MsgID_value)
	proto.RegisterEnum("RegularSweepS2C_MsgID", RegularSweepS2C_MsgID_name, RegularSweepS2C_MsgID_value)
	proto.RegisterEnum("RegularChoiceQuestionC2S_MsgID", RegularChoiceQuestionC2S_MsgID_name, RegularChoiceQuestionC2S_MsgID_value)
	proto.RegisterEnum("RegularChoiceQuestionS2C_MsgID", RegularChoiceQuestionS2C_MsgID_name, RegularChoiceQuestionS2C_MsgID_value)
	proto.RegisterEnum("RegularSaleC2S_MsgID", RegularSaleC2S_MsgID_name, RegularSaleC2S_MsgID_value)
	proto.RegisterEnum("RegularSaleS2C_MsgID", RegularSaleS2C_MsgID_name, RegularSaleS2C_MsgID_value)
	proto.RegisterEnum("SendRegularInfoS2C_MsgID", SendRegularInfoS2C_MsgID_name, SendRegularInfoS2C_MsgID_value)
	proto.RegisterEnum("UpdateRegularMatchInfoS2C_MsgID", UpdateRegularMatchInfoS2C_MsgID_name, UpdateRegularMatchInfoS2C_MsgID_value)
	proto.RegisterEnum("UpdateRegularBranchInfoS2C_MsgID", UpdateRegularBranchInfoS2C_MsgID_name, UpdateRegularBranchInfoS2C_MsgID_value)
	proto.RegisterEnum("RegularGetTaskRewardC2S_MsgID", RegularGetTaskRewardC2S_MsgID_name, RegularGetTaskRewardC2S_MsgID_value)
	proto.RegisterEnum("RegularGetTaskRewardS2C_MsgID", RegularGetTaskRewardS2C_MsgID_name, RegularGetTaskRewardS2C_MsgID_value)
	proto.RegisterEnum("AddNewRegularSeasonS2C_MsgID", AddNewRegularSeasonS2C_MsgID_name, AddNewRegularSeasonS2C_MsgID_value)
	proto.RegisterEnum("EnterRegularC2S_MsgID", EnterRegularC2S_MsgID_name, EnterRegularC2S_MsgID_value)
	proto.RegisterEnum("EnterRegularS2C_MsgID", EnterRegularS2C_MsgID_name, EnterRegularS2C_MsgID_value)
	proto.RegisterEnum("GetRegularSeasonYearRewardC2S_MsgID", GetRegularSeasonYearRewardC2S_MsgID_name, GetRegularSeasonYearRewardC2S_MsgID_value)
	proto.RegisterEnum("GetRegularSeasonYearRewardS2C_MsgID", GetRegularSeasonYearRewardS2C_MsgID_name, GetRegularSeasonYearRewardS2C_MsgID_value)
	proto.RegisterEnum("RegularSweepByItemC2S_MsgID", RegularSweepByItemC2S_MsgID_name, RegularSweepByItemC2S_MsgID_value)
	proto.RegisterEnum("RegularSweepByItemS2C_MsgID", RegularSweepByItemS2C_MsgID_name, RegularSweepByItemS2C_MsgID_value)
	proto.RegisterEnum("RegularGetHalfMonthRewardC2S_MsgID", RegularGetHalfMonthRewardC2S_MsgID_name, RegularGetHalfMonthRewardC2S_MsgID_value)
	proto.RegisterEnum("RegularGetHalfMonthRewardS2C_MsgID", RegularGetHalfMonthRewardS2C_MsgID_name, RegularGetHalfMonthRewardS2C_MsgID_value)
	proto.RegisterEnum("LittleGameAwardC2S_MsgID", LittleGameAwardC2S_MsgID_name, LittleGameAwardC2S_MsgID_value)
	proto.RegisterEnum("LittleGameAwardS2C_MsgID", LittleGameAwardS2C_MsgID_name, LittleGameAwardS2C_MsgID_value)
	proto.RegisterEnum("LittleGameCardAwardC2S_MsgID", LittleGameCardAwardC2S_MsgID_name, LittleGameCardAwardC2S_MsgID_value)
	proto.RegisterEnum("LittleGameCardAwardS2C_MsgID", LittleGameCardAwardS2C_MsgID_name, LittleGameCardAwardS2C_MsgID_value)
	proto.RegisterEnum("RecordHalfMonthDscC2S_MsgID", RecordHalfMonthDscC2S_MsgID_name, RecordHalfMonthDscC2S_MsgID_value)
	proto.RegisterEnum("RecordHalfMonthDscS2C_MsgID", RecordHalfMonthDscS2C_MsgID_name, RecordHalfMonthDscS2C_MsgID_value)
}

func init() { proto.RegisterFile("regular.proto", fileDescriptor60) }

var fileDescriptor60 = []byte{
	// 926 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xb4, 0x56, 0x4d, 0x8f, 0x1b, 0x45,
	0x10, 0x95, 0x31, 0xde, 0xdd, 0x94, 0x77, 0xd7, 0xbb, 0xb3, 0x4e, 0xe2, 0xac, 0x12, 0x29, 0x6a,
	0x25, 0x68, 0x95, 0x83, 0x85, 0x7c, 0x43, 0xe2, 0x92, 0xd8, 0x61, 0x63, 0x61, 0x83, 0xb2, 0x0e,
	0x91, 0xe0, 0x00, 0xf4, 0xcc, 0x94, 0xed, 0x16, 0xe3, 0x99, 0x51, 0x77, 0x9b, 0xc5, 0x07, 0x90,
	0xf8, 0xfe, 0x0a, 0x37, 0xe0, 0x6f, 0x71, 0xe7, 0x87, 0x70, 0xa6, 0xbb, 0x3d, 0xfe, 0xee, 0x76,
	0x4c, 0xf0, 0xde, 0x46, 0xd3, 0xd5, 0xf5, 0xea, 0xbd, 0xa9, 0x7a, 0x35, 0x70, 0xc0, 0xb1, 0x37,
	0x8c, 0x28, 0xaf, 0xa6, 0x3c, 0x91, 0xc9, 0x29, 0x04, 0x49, 0xdc, 0x1d, 0x3f, 0x93, 0x37, 0xe1,
	0xe4, 0x62, 0x7c, 0xd8, 0x60, 0x22, 0xe0, 0x28, 0xb1, 0x41, 0x25, 0xf5, 0x6e, 0xc1, 0x71, 0x44,
	0x85, 0x7c, 0x1c, 0x4b, 0xe4, 0x1d, 0xa4, 0x22, 0x89, 0x9b, 0x61, 0x25, 0x77, 0x37, 0x77, 0x56,
	0x20, 0x7f, 0xe7, 0xa0, 0x38, 0xb9, 0xa2, 0x43, 0xcf, 0xe0, 0x60, 0x40, 0x65, 0xd0, 0x6f, 0xc6,
	0xdd, 0xa4, 0xc5, 0x84, 0x54, 0x61, 0xf9, 0xb3, 0x62, 0xed, 0xb8, 0x9a, 0x05, 0xb5, 0x27, 0x87,
	0xde, 0x03, 0x38, 0xf4, 0x39, 0x8d, 0xe7, 0x42, 0x5f, 0x33, 0xa1, 0xde, 0x24, 0xf4, 0xd1, 0xf4,
	0xd4, 0xbb, 0x0e, 0x07, 0xf8, 0x39, 0xc6, 0xf2, 0x02, 0x2f, 0x29, 0x0f, 0x15, 0x78, 0x5e, 0x85,
	0x16, 0xbc, 0x32, 0xec, 0x07, 0x43, 0xce, 0xd5, 0x41, 0x4b, 0x1d, 0x47, 0x95, 0xd7, 0x75, 0x49,
	0xde, 0x09, 0x14, 0x85, 0x29, 0xb2, 0xde, 0xed, 0xa9, 0xd0, 0x82, 0x79, 0x79, 0x13, 0x4a, 0x23,
	0xa4, 0x3c, 0x4b, 0x20, 0xce, 0x51, 0x56, 0x76, 0xd4, 0xc1, 0x9e, 0x77, 0x0a, 0x5e, 0x9f, 0x46,
	0xdd, 0x76, 0x12, 0xcb, 0x7e, 0x43, 0x04, 0x17, 0x18, 0x24, 0x3c, 0xac, 0xec, 0xea, 0xfc, 0xe4,
	0x39, 0x1c, 0xaf, 0xd6, 0x72, 0x00, 0x85, 0xc0, 0x24, 0x36, 0x02, 0x78, 0x47, 0xb0, 0xc7, 0xc4,
	0x3b, 0x2c, 0x66, 0xa2, 0xaf, 0x08, 0xe8, 0x8c, 0x2a, 0x20, 0xa5, 0x9c, 0x0e, 0xb2, 0x22, 0x8f,
	0xe1, 0x9a, 0x64, 0x03, 0x6c, 0xb1, 0x01, 0x93, 0xa6, 0xc2, 0x3c, 0x79, 0x0c, 0x47, 0x2b, 0x72,
	0x2c, 0xa5, 0x2d, 0xc1, 0xee, 0x60, 0xd4, 0x51, 0xb5, 0x60, 0xc6, 0x4a, 0xa5, 0x49, 0xd2, 0x34,
	0x19, 0xbf, 0x32, 0x9c, 0xc8, 0x33, 0xa8, 0x8c, 0xcb, 0xad, 0x67, 0x22, 0x24, 0x01, 0x95, 0x4c,
	0xf1, 0xae, 0x75, 0x74, 0x59, 0x62, 0xe1, 0x4b, 0xe9, 0x37, 0x51, 0x16, 0x60, 0x0a, 0x2d, 0x90,
	0x32, 0x14, 0xda, 0xa2, 0xd7, 0x6c, 0x78, 0x45, 0xd8, 0x41, 0xf3, 0x74, 0xf4, 0xb5, 0x4f, 0xba,
	0x50, 0xca, 0x8a, 0xeb, 0x5c, 0x22, 0xa6, 0xf6, 0x64, 0xb7, 0xa1, 0x9c, 0x75, 0x51, 0x27, 0xe8,
	0x63, 0x38, 0x8c, 0x70, 0x2c, 0xb6, 0x49, 0x6c, 0xb8, 0x24, 0xc3, 0x58, 0x2a, 0x05, 0x1c, 0x38,
	0xdf, 0xf8, 0xe4, 0xab, 0x45, 0x9c, 0x4e, 0xad, 0xfe, 0x9f, 0x71, 0xee, 0x2b, 0xed, 0x25, 0x0e,
	0x4c, 0xf3, 0xe4, 0x4d, 0xf3, 0x9c, 0x54, 0x9b, 0xea, 0xc5, 0x73, 0xca, 0x47, 0x75, 0xd5, 0xd5,
	0xac, 0xa7, 0x8f, 0x1c, 0xf8, 0xa9, 0x56, 0xcf, 0xa4, 0xae, 0xf7, 0x13, 0x16, 0xe0, 0xd3, 0x21,
	0x0a, 0xb7, 0x7a, 0xeb, 0x0b, 0x39, 0x84, 0x9d, 0x24, 0x35, 0xca, 0x3a, 0x19, 0x7f, 0xeb, 0x93,
	0x17, 0x39, 0x07, 0xa4, 0x9d, 0xfb, 0x1b, 0x00, 0xb3, 0x01, 0x31, 0x40, 0xf6, 0xe1, 0xb8, 0x0b,
	0xbb, 0xdc, 0xb4, 0xb5, 0xc8, 0x44, 0x28, 0x2d, 0x89, 0xe0, 0x28, 0xa7, 0x0b, 0x87, 0x93, 0x0f,
	0x40, 0x15, 0x9d, 0xab, 0xa1, 0xfd, 0x9d, 0x4f, 0x3e, 0x5d, 0xc0, 0xf9, 0x5f, 0x5c, 0x1d, 0x08,
	0x5f, 0x82, 0xd7, 0xc1, 0x38, 0xcc, 0xc2, 0x75, 0xa0, 0x46, 0x79, 0x00, 0xfb, 0xe1, 0x9c, 0x8b,
	0x19, 0xa4, 0x62, 0xad, 0x5c, 0xb5, 0x39, 0xdc, 0x7d, 0x28, 0xf1, 0x99, 0x8b, 0xcd, 0xb9, 0xd1,
	0x7e, 0x75, 0xce, 0xdd, 0x6c, 0xf0, 0xdf, 0xfb, 0x84, 0xc1, 0xad, 0x0f, 0xd2, 0x90, 0x4a, 0x5c,
	0x1e, 0x6a, 0x5d, 0xc5, 0x3d, 0xb8, 0x36, 0x35, 0xc4, 0xac, 0x04, 0x8b, 0x19, 0xce, 0x2b, 0xe2,
	0x1c, 0xce, 0x1f, 0x74, 0xd3, 0x9e, 0x2e, 0x40, 0xcd, 0xa4, 0x19, 0x33, 0x5e, 0xb6, 0xd4, 0x9c,
	0xd3, 0x52, 0x37, 0x42, 0xfc, 0xd1, 0x27, 0x3e, 0xdc, 0xcc, 0x2e, 0x2b, 0xcf, 0x7c, 0x46, 0xc5,
	0x67, 0x63, 0x0b, 0xb5, 0xb7, 0x8b, 0x6a, 0x08, 0xa9, 0x42, 0xa6, 0x0d, 0xa2, 0x5c, 0xac, 0x37,
	0x64, 0x21, 0x1a, 0xc7, 0x76, 0x60, 0xfc, 0xe4, 0x93, 0xa7, 0x76, 0x0c, 0x7b, 0xab, 0x2c, 0x61,
	0x38, 0x52, 0xb6, 0xe1, 0xc6, 0xc3, 0x30, 0x7c, 0x0f, 0x2f, 0x27, 0xad, 0x67, 0x92, 0xe8, 0x8c,
	0x77, 0xf4, 0xb8, 0x98, 0x77, 0xd9, 0xe7, 0x78, 0xe9, 0x27, 0xfe, 0xd9, 0x27, 0x6f, 0x41, 0xc9,
	0x6c, 0xbf, 0xc9, 0xf8, 0xda, 0xd8, 0xdb, 0xae, 0xfe, 0xb2, 0x72, 0xd5, 0x4a, 0xca, 0x71, 0xf5,
	0x1c, 0xee, 0x28, 0x41, 0x16, 0x18, 0x7c, 0x38, 0x5d, 0x62, 0x1b, 0xd7, 0xf0, 0xeb, 0x4b, 0x12,
	0x6d, 0x5c, 0x91, 0x4a, 0xf4, 0x57, 0x0e, 0xae, 0xcf, 0xbb, 0xf6, 0xa3, 0x91, 0xb6, 0x9a, 0x57,
	0xf1, 0x8e, 0x7b, 0x50, 0x94, 0x94, 0xf7, 0x50, 0x7e, 0xa2, 0x2d, 0xdc, 0xb4, 0xc7, 0xaa, 0x73,
	0xe9, 0xc5, 0xcf, 0xc4, 0xfb, 0x31, 0xbe, 0x8b, 0x23, 0x83, 0x67, 0x96, 0xe1, 0x9e, 0x5e, 0xfc,
	0x69, 0x44, 0x47, 0xa8, 0x66, 0x5d, 0xc8, 0x6c, 0xc7, 0xe7, 0xf5, 0xda, 0x61, 0x71, 0x88, 0x5f,
	0x98, 0xcd, 0x6e, 0x1a, 0x45, 0x44, 0x89, 0x3e, 0xde, 0x75, 0x31, 0x7a, 0xe1, 0x93, 0x7f, 0xac,
	0x8c, 0xae, 0x6e, 0x1b, 0xb9, 0x28, 0x2d, 0xe9, 0x51, 0xb0, 0xeb, 0xb1, 0x9e, 0xe2, 0x8a, 0x2e,
	0x7b, 0xe6, 0x77, 0xc3, 0x4e, 0x3c, 0x84, 0xdb, 0xb3, 0xa1, 0x7b, 0x32, 0xf9, 0x05, 0x5a, 0x37,
	0xdd, 0x6b, 0xe9, 0xdb, 0x50, 0x7e, 0x5b, 0x8f, 0xf2, 0x0a, 0x22, 0x3b, 0x50, 0x3e, 0x02, 0xaf,
	0xc5, 0xa4, 0x8c, 0xf0, 0x9c, 0x0e, 0xf0, 0xe1, 0x16, 0x19, 0xfc, 0xae, 0x19, 0x2c, 0xe7, 0xde,
	0xfa, 0x0a, 0x53, 0x28, 0x1f, 0xc3, 0x8d, 0x19, 0x4a, 0x5d, 0x81, 0x6c, 0x93, 0xc5, 0x1f, 0x3e,
	0xe9, 0x5b, 0xf3, 0x6f, 0x9d, 0x89, 0x42, 0x7a, 0x5b, 0xcf, 0x93, 0xfe, 0x2b, 0x7d, 0x32, 0xf7,
	0x5b, 0xad, 0x89, 0x2c, 0xfe, 0xe1, 0xda, 0x6e, 0xff, 0xe9, 0xb8, 0xad, 0xcb, 0xdc, 0xe4, 0xf6,
	0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xf3, 0xff, 0x7c, 0x28, 0xdb, 0x0c, 0x00, 0x00,
}
