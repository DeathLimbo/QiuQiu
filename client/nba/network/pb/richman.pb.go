// Code generated by protoc-gen-go.
// source: richman.proto
// DO NOT EDIT!

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type RichmanGameType int32

const (
	RichmanGameType_RGT_AnswerQuestion RichmanGameType = 1
	RichmanGameType_RGT_PickPicture    RichmanGameType = 2
	RichmanGameType_RGT_FlopCard       RichmanGameType = 3
)

var RichmanGameType_name = map[int32]string{
	1: "RGT_AnswerQuestion",
	2: "RGT_PickPicture",
	3: "RGT_FlopCard",
}
var RichmanGameType_value = map[string]int32{
	"RGT_AnswerQuestion": 1,
	"RGT_PickPicture":    2,
	"RGT_FlopCard":       3,
}

func (x RichmanGameType) Enum() *RichmanGameType {
	p := new(RichmanGameType)
	*p = x
	return p
}
func (x RichmanGameType) String() string {
	return proto.EnumName(RichmanGameType_name, int32(x))
}
func (x *RichmanGameType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RichmanGameType_value, data, "RichmanGameType")
	if err != nil {
		return err
	}
	*x = RichmanGameType(value)
	return nil
}
func (RichmanGameType) EnumDescriptor() ([]byte, []int) { return fileDescriptor62, []int{0} }

type SendRichmanDataS2C_MsgID int32

const (
	SendRichmanDataS2C_eMsgID SendRichmanDataS2C_MsgID = 18945
)

var SendRichmanDataS2C_MsgID_name = map[int32]string{
	18945: "eMsgID",
}
var SendRichmanDataS2C_MsgID_value = map[string]int32{
	"eMsgID": 18945,
}

func (x SendRichmanDataS2C_MsgID) Enum() *SendRichmanDataS2C_MsgID {
	p := new(SendRichmanDataS2C_MsgID)
	*p = x
	return p
}
func (x SendRichmanDataS2C_MsgID) String() string {
	return proto.EnumName(SendRichmanDataS2C_MsgID_name, int32(x))
}
func (x *SendRichmanDataS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SendRichmanDataS2C_MsgID_value, data, "SendRichmanDataS2C_MsgID")
	if err != nil {
		return err
	}
	*x = SendRichmanDataS2C_MsgID(value)
	return nil
}
func (SendRichmanDataS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor62, []int{0, 0}
}

type RollDiceC2S_MsgID int32

const (
	RollDiceC2S_eMsgID RollDiceC2S_MsgID = 18946
)

var RollDiceC2S_MsgID_name = map[int32]string{
	18946: "eMsgID",
}
var RollDiceC2S_MsgID_value = map[string]int32{
	"eMsgID": 18946,
}

func (x RollDiceC2S_MsgID) Enum() *RollDiceC2S_MsgID {
	p := new(RollDiceC2S_MsgID)
	*p = x
	return p
}
func (x RollDiceC2S_MsgID) String() string {
	return proto.EnumName(RollDiceC2S_MsgID_name, int32(x))
}
func (x *RollDiceC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RollDiceC2S_MsgID_value, data, "RollDiceC2S_MsgID")
	if err != nil {
		return err
	}
	*x = RollDiceC2S_MsgID(value)
	return nil
}
func (RollDiceC2S_MsgID) EnumDescriptor() ([]byte, []int) { return fileDescriptor62, []int{2, 0} }

type RollDiceS2C_MsgID int32

const (
	RollDiceS2C_eMsgID RollDiceS2C_MsgID = 18946
)

var RollDiceS2C_MsgID_name = map[int32]string{
	18946: "eMsgID",
}
var RollDiceS2C_MsgID_value = map[string]int32{
	"eMsgID": 18946,
}

func (x RollDiceS2C_MsgID) Enum() *RollDiceS2C_MsgID {
	p := new(RollDiceS2C_MsgID)
	*p = x
	return p
}
func (x RollDiceS2C_MsgID) String() string {
	return proto.EnumName(RollDiceS2C_MsgID_name, int32(x))
}
func (x *RollDiceS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RollDiceS2C_MsgID_value, data, "RollDiceS2C_MsgID")
	if err != nil {
		return err
	}
	*x = RollDiceS2C_MsgID(value)
	return nil
}
func (RollDiceS2C_MsgID) EnumDescriptor() ([]byte, []int) { return fileDescriptor62, []int{3, 0} }

type RichmanFinishGameC2S_MsgID int32

const (
	RichmanFinishGameC2S_eMsgID RichmanFinishGameC2S_MsgID = 18947
)

var RichmanFinishGameC2S_MsgID_name = map[int32]string{
	18947: "eMsgID",
}
var RichmanFinishGameC2S_MsgID_value = map[string]int32{
	"eMsgID": 18947,
}

func (x RichmanFinishGameC2S_MsgID) Enum() *RichmanFinishGameC2S_MsgID {
	p := new(RichmanFinishGameC2S_MsgID)
	*p = x
	return p
}
func (x RichmanFinishGameC2S_MsgID) String() string {
	return proto.EnumName(RichmanFinishGameC2S_MsgID_name, int32(x))
}
func (x *RichmanFinishGameC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RichmanFinishGameC2S_MsgID_value, data, "RichmanFinishGameC2S_MsgID")
	if err != nil {
		return err
	}
	*x = RichmanFinishGameC2S_MsgID(value)
	return nil
}
func (RichmanFinishGameC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor62, []int{4, 0}
}

type RichmanFinishGameS2C_MsgID int32

const (
	RichmanFinishGameS2C_eMsgID RichmanFinishGameS2C_MsgID = 18947
)

var RichmanFinishGameS2C_MsgID_name = map[int32]string{
	18947: "eMsgID",
}
var RichmanFinishGameS2C_MsgID_value = map[string]int32{
	"eMsgID": 18947,
}

func (x RichmanFinishGameS2C_MsgID) Enum() *RichmanFinishGameS2C_MsgID {
	p := new(RichmanFinishGameS2C_MsgID)
	*p = x
	return p
}
func (x RichmanFinishGameS2C_MsgID) String() string {
	return proto.EnumName(RichmanFinishGameS2C_MsgID_name, int32(x))
}
func (x *RichmanFinishGameS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RichmanFinishGameS2C_MsgID_value, data, "RichmanFinishGameS2C_MsgID")
	if err != nil {
		return err
	}
	*x = RichmanFinishGameS2C_MsgID(value)
	return nil
}
func (RichmanFinishGameS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor62, []int{5, 0}
}

type BuyDiceC2S_MsgID int32

const (
	BuyDiceC2S_eMsgID BuyDiceC2S_MsgID = 18949
)

var BuyDiceC2S_MsgID_name = map[int32]string{
	18949: "eMsgID",
}
var BuyDiceC2S_MsgID_value = map[string]int32{
	"eMsgID": 18949,
}

func (x BuyDiceC2S_MsgID) Enum() *BuyDiceC2S_MsgID {
	p := new(BuyDiceC2S_MsgID)
	*p = x
	return p
}
func (x BuyDiceC2S_MsgID) String() string {
	return proto.EnumName(BuyDiceC2S_MsgID_name, int32(x))
}
func (x *BuyDiceC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BuyDiceC2S_MsgID_value, data, "BuyDiceC2S_MsgID")
	if err != nil {
		return err
	}
	*x = BuyDiceC2S_MsgID(value)
	return nil
}
func (BuyDiceC2S_MsgID) EnumDescriptor() ([]byte, []int) { return fileDescriptor62, []int{6, 0} }

type BuyDiceS2C_MsgID int32

const (
	BuyDiceS2C_eMsgID BuyDiceS2C_MsgID = 18949
)

var BuyDiceS2C_MsgID_name = map[int32]string{
	18949: "eMsgID",
}
var BuyDiceS2C_MsgID_value = map[string]int32{
	"eMsgID": 18949,
}

func (x BuyDiceS2C_MsgID) Enum() *BuyDiceS2C_MsgID {
	p := new(BuyDiceS2C_MsgID)
	*p = x
	return p
}
func (x BuyDiceS2C_MsgID) String() string {
	return proto.EnumName(BuyDiceS2C_MsgID_name, int32(x))
}
func (x *BuyDiceS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BuyDiceS2C_MsgID_value, data, "BuyDiceS2C_MsgID")
	if err != nil {
		return err
	}
	*x = BuyDiceS2C_MsgID(value)
	return nil
}
func (BuyDiceS2C_MsgID) EnumDescriptor() ([]byte, []int) { return fileDescriptor62, []int{7, 0} }

type TakeRichmanTaskRewardC2S_MsgID int32

const (
	TakeRichmanTaskRewardC2S_eMsgID TakeRichmanTaskRewardC2S_MsgID = 18950
)

var TakeRichmanTaskRewardC2S_MsgID_name = map[int32]string{
	18950: "eMsgID",
}
var TakeRichmanTaskRewardC2S_MsgID_value = map[string]int32{
	"eMsgID": 18950,
}

func (x TakeRichmanTaskRewardC2S_MsgID) Enum() *TakeRichmanTaskRewardC2S_MsgID {
	p := new(TakeRichmanTaskRewardC2S_MsgID)
	*p = x
	return p
}
func (x TakeRichmanTaskRewardC2S_MsgID) String() string {
	return proto.EnumName(TakeRichmanTaskRewardC2S_MsgID_name, int32(x))
}
func (x *TakeRichmanTaskRewardC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TakeRichmanTaskRewardC2S_MsgID_value, data, "TakeRichmanTaskRewardC2S_MsgID")
	if err != nil {
		return err
	}
	*x = TakeRichmanTaskRewardC2S_MsgID(value)
	return nil
}
func (TakeRichmanTaskRewardC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor62, []int{8, 0}
}

type TakeRichmanTaskRewardS2C_MsgID int32

const (
	TakeRichmanTaskRewardS2C_eMsgID TakeRichmanTaskRewardS2C_MsgID = 18950
)

var TakeRichmanTaskRewardS2C_MsgID_name = map[int32]string{
	18950: "eMsgID",
}
var TakeRichmanTaskRewardS2C_MsgID_value = map[string]int32{
	"eMsgID": 18950,
}

func (x TakeRichmanTaskRewardS2C_MsgID) Enum() *TakeRichmanTaskRewardS2C_MsgID {
	p := new(TakeRichmanTaskRewardS2C_MsgID)
	*p = x
	return p
}
func (x TakeRichmanTaskRewardS2C_MsgID) String() string {
	return proto.EnumName(TakeRichmanTaskRewardS2C_MsgID_name, int32(x))
}
func (x *TakeRichmanTaskRewardS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TakeRichmanTaskRewardS2C_MsgID_value, data, "TakeRichmanTaskRewardS2C_MsgID")
	if err != nil {
		return err
	}
	*x = TakeRichmanTaskRewardS2C_MsgID(value)
	return nil
}
func (TakeRichmanTaskRewardS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor62, []int{9, 0}
}

// 下发大富翁数据
type SendRichmanDataS2C struct {
	Data             *RichmanData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Tasks            []*TaskItem  `protobuf:"bytes,2,rep,name=tasks" json:"tasks,omitempty"`
	Endtime          *int64       `protobuf:"varint,3,opt,name=Endtime" json:"Endtime,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *SendRichmanDataS2C) Reset()                    { *m = SendRichmanDataS2C{} }
func (m *SendRichmanDataS2C) String() string            { return proto.CompactTextString(m) }
func (*SendRichmanDataS2C) ProtoMessage()               {}
func (*SendRichmanDataS2C) Descriptor() ([]byte, []int) { return fileDescriptor62, []int{0} }

func (m *SendRichmanDataS2C) GetData() *RichmanData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *SendRichmanDataS2C) GetTasks() []*TaskItem {
	if m != nil {
		return m.Tasks
	}
	return nil
}

func (m *SendRichmanDataS2C) GetEndtime() int64 {
	if m != nil && m.Endtime != nil {
		return *m.Endtime
	}
	return 0
}

type RichmanData struct {
	Board               []int32 `protobuf:"varint,1,rep,name=board" json:"board,omitempty"`
	Pos                 *int32  `protobuf:"varint,2,opt,name=pos" json:"pos,omitempty"`
	BuffId              *int32  `protobuf:"varint,3,opt,name=buffId" json:"buffId,omitempty"`
	Finished            *bool   `protobuf:"varint,4,opt,name=finished" json:"finished,omitempty"`
	GameType            *int32  `protobuf:"varint,5,opt,name=gameType" json:"gameType,omitempty"`
	GameId              *int32  `protobuf:"varint,6,opt,name=gameId" json:"gameId,omitempty"`
	NormalDiceCnt       *int32  `protobuf:"varint,9,opt,name=normalDiceCnt" json:"normalDiceCnt,omitempty"`
	ControllableDiceCnt *int32  `protobuf:"varint,10,opt,name=controllableDiceCnt" json:"controllableDiceCnt,omitempty"`
	XXX_unrecognized    []byte  `json:"-"`
}

func (m *RichmanData) Reset()                    { *m = RichmanData{} }
func (m *RichmanData) String() string            { return proto.CompactTextString(m) }
func (*RichmanData) ProtoMessage()               {}
func (*RichmanData) Descriptor() ([]byte, []int) { return fileDescriptor62, []int{1} }

func (m *RichmanData) GetBoard() []int32 {
	if m != nil {
		return m.Board
	}
	return nil
}

func (m *RichmanData) GetPos() int32 {
	if m != nil && m.Pos != nil {
		return *m.Pos
	}
	return 0
}

func (m *RichmanData) GetBuffId() int32 {
	if m != nil && m.BuffId != nil {
		return *m.BuffId
	}
	return 0
}

func (m *RichmanData) GetFinished() bool {
	if m != nil && m.Finished != nil {
		return *m.Finished
	}
	return false
}

func (m *RichmanData) GetGameType() int32 {
	if m != nil && m.GameType != nil {
		return *m.GameType
	}
	return 0
}

func (m *RichmanData) GetGameId() int32 {
	if m != nil && m.GameId != nil {
		return *m.GameId
	}
	return 0
}

func (m *RichmanData) GetNormalDiceCnt() int32 {
	if m != nil && m.NormalDiceCnt != nil {
		return *m.NormalDiceCnt
	}
	return 0
}

func (m *RichmanData) GetControllableDiceCnt() int32 {
	if m != nil && m.ControllableDiceCnt != nil {
		return *m.ControllableDiceCnt
	}
	return 0
}

// 摇色子
type RollDiceC2S struct {
	Id               *int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Point            *int32 `protobuf:"varint,2,opt,name=point" json:"point,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *RollDiceC2S) Reset()                    { *m = RollDiceC2S{} }
func (m *RollDiceC2S) String() string            { return proto.CompactTextString(m) }
func (*RollDiceC2S) ProtoMessage()               {}
func (*RollDiceC2S) Descriptor() ([]byte, []int) { return fileDescriptor62, []int{2} }

func (m *RollDiceC2S) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *RollDiceC2S) GetPoint() int32 {
	if m != nil && m.Point != nil {
		return *m.Point
	}
	return 0
}

type RollDiceS2C struct {
	Id               *int32           `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Point            *int32           `protobuf:"varint,2,opt,name=point" json:"point,omitempty"`
	GameId           *int32           `protobuf:"varint,4,opt,name=gameId" json:"gameId,omitempty"`
	GameType         *RichmanGameType `protobuf:"varint,5,opt,name=gameType,enum=RichmanGameType" json:"gameType,omitempty"`
	Board            []int32          `protobuf:"varint,6,rep,name=board" json:"board,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *RollDiceS2C) Reset()                    { *m = RollDiceS2C{} }
func (m *RollDiceS2C) String() string            { return proto.CompactTextString(m) }
func (*RollDiceS2C) ProtoMessage()               {}
func (*RollDiceS2C) Descriptor() ([]byte, []int) { return fileDescriptor62, []int{3} }

func (m *RollDiceS2C) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *RollDiceS2C) GetPoint() int32 {
	if m != nil && m.Point != nil {
		return *m.Point
	}
	return 0
}

func (m *RollDiceS2C) GetGameId() int32 {
	if m != nil && m.GameId != nil {
		return *m.GameId
	}
	return 0
}

func (m *RollDiceS2C) GetGameType() RichmanGameType {
	if m != nil && m.GameType != nil {
		return *m.GameType
	}
	return RichmanGameType_RGT_AnswerQuestion
}

func (m *RollDiceS2C) GetBoard() []int32 {
	if m != nil {
		return m.Board
	}
	return nil
}

// 完成小游戏
type RichmanFinishGameC2S struct {
	GameId           *int32           `protobuf:"varint,1,opt,name=gameId" json:"gameId,omitempty"`
	GameType         *RichmanGameType `protobuf:"varint,2,opt,name=gameType,enum=RichmanGameType" json:"gameType,omitempty"`
	Win              *bool            `protobuf:"varint,3,opt,name=win" json:"win,omitempty"`
	Answer           *int32           `protobuf:"varint,4,opt,name=answer" json:"answer,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *RichmanFinishGameC2S) Reset()                    { *m = RichmanFinishGameC2S{} }
func (m *RichmanFinishGameC2S) String() string            { return proto.CompactTextString(m) }
func (*RichmanFinishGameC2S) ProtoMessage()               {}
func (*RichmanFinishGameC2S) Descriptor() ([]byte, []int) { return fileDescriptor62, []int{4} }

func (m *RichmanFinishGameC2S) GetGameId() int32 {
	if m != nil && m.GameId != nil {
		return *m.GameId
	}
	return 0
}

func (m *RichmanFinishGameC2S) GetGameType() RichmanGameType {
	if m != nil && m.GameType != nil {
		return *m.GameType
	}
	return RichmanGameType_RGT_AnswerQuestion
}

func (m *RichmanFinishGameC2S) GetWin() bool {
	if m != nil && m.Win != nil {
		return *m.Win
	}
	return false
}

func (m *RichmanFinishGameC2S) GetAnswer() int32 {
	if m != nil && m.Answer != nil {
		return *m.Answer
	}
	return 0
}

type RichmanFinishGameS2C struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *RichmanFinishGameS2C) Reset()                    { *m = RichmanFinishGameS2C{} }
func (m *RichmanFinishGameS2C) String() string            { return proto.CompactTextString(m) }
func (*RichmanFinishGameS2C) ProtoMessage()               {}
func (*RichmanFinishGameS2C) Descriptor() ([]byte, []int) { return fileDescriptor62, []int{5} }

// 购买色子
type BuyDiceC2S struct {
	Id               *int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Count            *int32 `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *BuyDiceC2S) Reset()                    { *m = BuyDiceC2S{} }
func (m *BuyDiceC2S) String() string            { return proto.CompactTextString(m) }
func (*BuyDiceC2S) ProtoMessage()               {}
func (*BuyDiceC2S) Descriptor() ([]byte, []int) { return fileDescriptor62, []int{6} }

func (m *BuyDiceC2S) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *BuyDiceC2S) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

type BuyDiceS2C struct {
	Id               *int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Count            *int32 `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *BuyDiceS2C) Reset()                    { *m = BuyDiceS2C{} }
func (m *BuyDiceS2C) String() string            { return proto.CompactTextString(m) }
func (*BuyDiceS2C) ProtoMessage()               {}
func (*BuyDiceS2C) Descriptor() ([]byte, []int) { return fileDescriptor62, []int{7} }

func (m *BuyDiceS2C) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *BuyDiceS2C) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

// 领取任务奖励
type TakeRichmanTaskRewardC2S struct {
	Id               *int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *TakeRichmanTaskRewardC2S) Reset()                    { *m = TakeRichmanTaskRewardC2S{} }
func (m *TakeRichmanTaskRewardC2S) String() string            { return proto.CompactTextString(m) }
func (*TakeRichmanTaskRewardC2S) ProtoMessage()               {}
func (*TakeRichmanTaskRewardC2S) Descriptor() ([]byte, []int) { return fileDescriptor62, []int{8} }

func (m *TakeRichmanTaskRewardC2S) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

type TakeRichmanTaskRewardS2C struct {
	Id               *int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *TakeRichmanTaskRewardS2C) Reset()                    { *m = TakeRichmanTaskRewardS2C{} }
func (m *TakeRichmanTaskRewardS2C) String() string            { return proto.CompactTextString(m) }
func (*TakeRichmanTaskRewardS2C) ProtoMessage()               {}
func (*TakeRichmanTaskRewardS2C) Descriptor() ([]byte, []int) { return fileDescriptor62, []int{9} }

func (m *TakeRichmanTaskRewardS2C) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

// 玩家大富翁数据
type GamerRichman struct {
	Data             *RichmanData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	JoinTs           *int64       `protobuf:"varint,2,opt,name=joinTs" json:"joinTs,omitempty"`
	NextRefresh      *int64       `protobuf:"varint,3,opt,name=nextRefresh" json:"nextRefresh,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *GamerRichman) Reset()                    { *m = GamerRichman{} }
func (m *GamerRichman) String() string            { return proto.CompactTextString(m) }
func (*GamerRichman) ProtoMessage()               {}
func (*GamerRichman) Descriptor() ([]byte, []int) { return fileDescriptor62, []int{10} }

func (m *GamerRichman) GetData() *RichmanData {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *GamerRichman) GetJoinTs() int64 {
	if m != nil && m.JoinTs != nil {
		return *m.JoinTs
	}
	return 0
}

func (m *GamerRichman) GetNextRefresh() int64 {
	if m != nil && m.NextRefresh != nil {
		return *m.NextRefresh
	}
	return 0
}

func init() {
	proto.RegisterType((*SendRichmanDataS2C)(nil), "SendRichmanDataS2C")
	proto.RegisterType((*RichmanData)(nil), "RichmanData")
	proto.RegisterType((*RollDiceC2S)(nil), "RollDiceC2S")
	proto.RegisterType((*RollDiceS2C)(nil), "RollDiceS2C")
	proto.RegisterType((*RichmanFinishGameC2S)(nil), "RichmanFinishGameC2S")
	proto.RegisterType((*RichmanFinishGameS2C)(nil), "RichmanFinishGameS2C")
	proto.RegisterType((*BuyDiceC2S)(nil), "BuyDiceC2S")
	proto.RegisterType((*BuyDiceS2C)(nil), "BuyDiceS2C")
	proto.RegisterType((*TakeRichmanTaskRewardC2S)(nil), "TakeRichmanTaskRewardC2S")
	proto.RegisterType((*TakeRichmanTaskRewardS2C)(nil), "TakeRichmanTaskRewardS2C")
	proto.RegisterType((*GamerRichman)(nil), "GamerRichman")
	proto.RegisterEnum("RichmanGameType", RichmanGameType_name, RichmanGameType_value)
	proto.RegisterEnum("SendRichmanDataS2C_MsgID", SendRichmanDataS2C_MsgID_name, SendRichmanDataS2C_MsgID_value)
	proto.RegisterEnum("RollDiceC2S_MsgID", RollDiceC2S_MsgID_name, RollDiceC2S_MsgID_value)
	proto.RegisterEnum("RollDiceS2C_MsgID", RollDiceS2C_MsgID_name, RollDiceS2C_MsgID_value)
	proto.RegisterEnum("RichmanFinishGameC2S_MsgID", RichmanFinishGameC2S_MsgID_name, RichmanFinishGameC2S_MsgID_value)
	proto.RegisterEnum("RichmanFinishGameS2C_MsgID", RichmanFinishGameS2C_MsgID_name, RichmanFinishGameS2C_MsgID_value)
	proto.RegisterEnum("BuyDiceC2S_MsgID", BuyDiceC2S_MsgID_name, BuyDiceC2S_MsgID_value)
	proto.RegisterEnum("BuyDiceS2C_MsgID", BuyDiceS2C_MsgID_name, BuyDiceS2C_MsgID_value)
	proto.RegisterEnum("TakeRichmanTaskRewardC2S_MsgID", TakeRichmanTaskRewardC2S_MsgID_name, TakeRichmanTaskRewardC2S_MsgID_value)
	proto.RegisterEnum("TakeRichmanTaskRewardS2C_MsgID", TakeRichmanTaskRewardS2C_MsgID_name, TakeRichmanTaskRewardS2C_MsgID_value)
}

func init() { proto.RegisterFile("richman.proto", fileDescriptor62) }

var fileDescriptor62 = []byte{
	// 515 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x53, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0x95, 0xe3, 0x38, 0xa4, 0x93, 0xa4, 0xb1, 0xb6, 0x14, 0x59, 0xe5, 0x52, 0xe5, 0x54, 0x21,
	0x91, 0x43, 0xee, 0x80, 0x20, 0xa1, 0x55, 0x0e, 0x88, 0x92, 0xe4, 0x8e, 0x36, 0xf6, 0xa6, 0x59,
	0x12, 0xef, 0x46, 0xeb, 0xb5, 0x42, 0x2f, 0x48, 0x14, 0xc1, 0x17, 0xf0, 0x03, 0xfc, 0x29, 0xb3,
	0x6b, 0x5b, 0x09, 0xc1, 0x8e, 0x7a, 0xb0, 0xb4, 0xf3, 0xc6, 0x6f, 0xe6, 0xcd, 0x9b, 0x5d, 0xe8,
	0x28, 0x1e, 0x2e, 0x63, 0x2a, 0xfa, 0x1b, 0x25, 0xb5, 0xbc, 0x68, 0x87, 0x32, 0x8e, 0x65, 0x11,
	0x41, 0x28, 0xc5, 0x22, 0x3f, 0xb7, 0x62, 0x1a, 0x2a, 0x59, 0x24, 0x34, 0x4d, 0x56, 0xd9, 0xb9,
	0xa7, 0x80, 0x4c, 0x99, 0x88, 0x26, 0x59, 0x9d, 0x11, 0xd5, 0x74, 0x3a, 0x18, 0x92, 0x0b, 0xa8,
	0x47, 0x78, 0x0c, 0x9c, 0x4b, 0xe7, 0xaa, 0x35, 0x68, 0xf7, 0xf7, 0xd2, 0x24, 0x00, 0xcf, 0xf0,
	0x93, 0xa0, 0x76, 0xe9, 0x62, 0xf2, 0xa4, 0x3f, 0xc3, 0x68, 0xac, 0x59, 0x4c, 0xba, 0xf0, 0xe4,
	0xbd, 0x88, 0x34, 0x8f, 0x59, 0xe0, 0x22, 0xd1, 0xed, 0x9d, 0x83, 0xf7, 0x21, 0xb9, 0x1b, 0x8f,
	0x48, 0x1b, 0x1a, 0xcc, 0x9e, 0xfc, 0xef, 0xbf, 0x9d, 0xde, 0x1f, 0x07, 0x5a, 0xfb, 0x15, 0x3b,
	0xe0, 0xcd, 0x25, 0x55, 0x11, 0xb6, 0x73, 0xaf, 0x3c, 0xd2, 0x02, 0x77, 0x23, 0x4d, 0x79, 0x07,
	0x83, 0x53, 0x68, 0xcc, 0xd3, 0xc5, 0x62, 0x1c, 0xd9, 0x92, 0x1e, 0xf1, 0xa1, 0xb9, 0xe0, 0x82,
	0x27, 0x4b, 0x16, 0x05, 0x75, 0x44, 0x9a, 0x06, 0xb9, 0xa3, 0x31, 0x9b, 0xdd, 0x6f, 0x58, 0xe0,
	0x15, 0x1c, 0x83, 0x20, 0xa7, 0x61, 0xe3, 0x73, 0xe8, 0x08, 0xa9, 0x62, 0xba, 0x1e, 0xf1, 0x90,
	0x0d, 0x85, 0x0e, 0x4e, 0x2c, 0xfc, 0x1c, 0xce, 0xd0, 0x21, 0xad, 0xe4, 0x7a, 0x4d, 0xe7, 0x6b,
	0x56, 0x24, 0xc1, 0x24, 0x7b, 0x6f, 0x50, 0x22, 0x26, 0x2c, 0x38, 0x98, 0x12, 0x80, 0x1a, 0x8f,
	0xac, 0x1d, 0x9e, 0x91, 0xbb, 0x91, 0x1c, 0xff, 0xb4, 0x0a, 0xcb, 0x86, 0x7c, 0xc0, 0x21, 0x1f,
	0x9c, 0x5d, 0x05, 0x63, 0x69, 0x75, 0x85, 0x3d, 0xbd, 0x75, 0x1b, 0xf7, 0x0e, 0x26, 0x3a, 0x1d,
	0xf8, 0xc5, 0x06, 0x6e, 0x72, 0x7c, 0xe7, 0x59, 0xc3, 0x78, 0x56, 0x25, 0xe2, 0x1b, 0x3c, 0xcd,
	0x89, 0xd7, 0xd6, 0x34, 0x43, 0x37, 0xe3, 0xec, 0x3a, 0x3a, 0xff, 0x75, 0xac, 0x55, 0x74, 0xc4,
	0xb5, 0x6c, 0xb9, 0xb0, 0x6b, 0x68, 0x9a, 0x02, 0x54, 0x24, 0x5b, 0xa6, 0x32, 0xc9, 0x65, 0xfd,
	0x7f, 0x60, 0xff, 0x97, 0x25, 0xfd, 0xd1, 0x8c, 0xaa, 0xdf, 0x5f, 0x03, 0xbc, 0x4b, 0xef, 0x2b,
	0x3c, 0x0f, 0x65, 0x7a, 0xcc, 0xf3, 0x9f, 0xff, 0xf0, 0x4b, 0x1c, 0x7f, 0x04, 0xff, 0x15, 0x04,
	0x33, 0xba, 0x62, 0xb9, 0x64, 0x73, 0xaf, 0x27, 0x6c, 0x8b, 0x26, 0x1f, 0xa8, 0x29, 0xa3, 0xff,
	0x3a, 0x42, 0x3f, 0x10, 0x53, 0x45, 0xff, 0x08, 0x6d, 0xe3, 0x8f, 0xca, 0xf9, 0x47, 0x1f, 0x21,
	0xfa, 0xff, 0x05, 0x6f, 0xd0, 0x2c, 0x7b, 0x26, 0x2e, 0x39, 0x83, 0x96, 0x60, 0x5f, 0xf5, 0x84,
	0x2d, 0x14, 0x4b, 0x96, 0xd9, 0xf3, 0x7b, 0x71, 0x0b, 0xdd, 0xc3, 0x25, 0x3e, 0x03, 0x32, 0xb9,
	0x99, 0x7d, 0x7e, 0x6b, 0x77, 0xf7, 0x29, 0x65, 0x89, 0xe6, 0x52, 0xf8, 0x0e, 0xf2, 0xbb, 0x06,
	0xbf, 0xe5, 0xe1, 0x0a, 0x3f, 0x9d, 0x2a, 0xe6, 0xd7, 0xf0, 0x65, 0xb5, 0x0d, 0x78, 0xbd, 0x96,
	0x9b, 0x21, 0x8e, 0xe1, 0xbb, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0xa7, 0x78, 0xcb, 0x26, 0x70,
	0x04, 0x00, 0x00,
}
