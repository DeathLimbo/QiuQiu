// Code generated by protoc-gen-go.
// source: arena.proto
// DO NOT EDIT!

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ArenaChallengeC2S_MsgID int32

const (
	ArenaChallengeC2S_eMsgID ArenaChallengeC2S_MsgID = 3585
)

var ArenaChallengeC2S_MsgID_name = map[int32]string{
	3585: "eMsgID",
}
var ArenaChallengeC2S_MsgID_value = map[string]int32{
	"eMsgID": 3585,
}

func (x ArenaChallengeC2S_MsgID) Enum() *ArenaChallengeC2S_MsgID {
	p := new(ArenaChallengeC2S_MsgID)
	*p = x
	return p
}
func (x ArenaChallengeC2S_MsgID) String() string {
	return proto.EnumName(ArenaChallengeC2S_MsgID_name, int32(x))
}
func (x *ArenaChallengeC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ArenaChallengeC2S_MsgID_value, data, "ArenaChallengeC2S_MsgID")
	if err != nil {
		return err
	}
	*x = ArenaChallengeC2S_MsgID(value)
	return nil
}
func (ArenaChallengeC2S_MsgID) EnumDescriptor() ([]byte, []int) { return fileDescriptor4, []int{14, 0} }

type ArenaChallengeS2C_MsgID int32

const (
	ArenaChallengeS2C_eMsgID ArenaChallengeS2C_MsgID = 3585
)

var ArenaChallengeS2C_MsgID_name = map[int32]string{
	3585: "eMsgID",
}
var ArenaChallengeS2C_MsgID_value = map[string]int32{
	"eMsgID": 3585,
}

func (x ArenaChallengeS2C_MsgID) Enum() *ArenaChallengeS2C_MsgID {
	p := new(ArenaChallengeS2C_MsgID)
	*p = x
	return p
}
func (x ArenaChallengeS2C_MsgID) String() string {
	return proto.EnumName(ArenaChallengeS2C_MsgID_name, int32(x))
}
func (x *ArenaChallengeS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ArenaChallengeS2C_MsgID_value, data, "ArenaChallengeS2C_MsgID")
	if err != nil {
		return err
	}
	*x = ArenaChallengeS2C_MsgID(value)
	return nil
}
func (ArenaChallengeS2C_MsgID) EnumDescriptor() ([]byte, []int) { return fileDescriptor4, []int{15, 0} }

type ArenaSweepC2S_MsgID int32

const (
	ArenaSweepC2S_eMsgID ArenaSweepC2S_MsgID = 3586
)

var ArenaSweepC2S_MsgID_name = map[int32]string{
	3586: "eMsgID",
}
var ArenaSweepC2S_MsgID_value = map[string]int32{
	"eMsgID": 3586,
}

func (x ArenaSweepC2S_MsgID) Enum() *ArenaSweepC2S_MsgID {
	p := new(ArenaSweepC2S_MsgID)
	*p = x
	return p
}
func (x ArenaSweepC2S_MsgID) String() string {
	return proto.EnumName(ArenaSweepC2S_MsgID_name, int32(x))
}
func (x *ArenaSweepC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ArenaSweepC2S_MsgID_value, data, "ArenaSweepC2S_MsgID")
	if err != nil {
		return err
	}
	*x = ArenaSweepC2S_MsgID(value)
	return nil
}
func (ArenaSweepC2S_MsgID) EnumDescriptor() ([]byte, []int) { return fileDescriptor4, []int{16, 0} }

type ArenaSweepS2C_MsgID int32

const (
	ArenaSweepS2C_eMsgID ArenaSweepS2C_MsgID = 3586
)

var ArenaSweepS2C_MsgID_name = map[int32]string{
	3586: "eMsgID",
}
var ArenaSweepS2C_MsgID_value = map[string]int32{
	"eMsgID": 3586,
}

func (x ArenaSweepS2C_MsgID) Enum() *ArenaSweepS2C_MsgID {
	p := new(ArenaSweepS2C_MsgID)
	*p = x
	return p
}
func (x ArenaSweepS2C_MsgID) String() string {
	return proto.EnumName(ArenaSweepS2C_MsgID_name, int32(x))
}
func (x *ArenaSweepS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ArenaSweepS2C_MsgID_value, data, "ArenaSweepS2C_MsgID")
	if err != nil {
		return err
	}
	*x = ArenaSweepS2C_MsgID(value)
	return nil
}
func (ArenaSweepS2C_MsgID) EnumDescriptor() ([]byte, []int) { return fileDescriptor4, []int{17, 0} }

type ArenaBuyChallengeCountC2S_MsgID int32

const (
	ArenaBuyChallengeCountC2S_eMsgID ArenaBuyChallengeCountC2S_MsgID = 3587
)

var ArenaBuyChallengeCountC2S_MsgID_name = map[int32]string{
	3587: "eMsgID",
}
var ArenaBuyChallengeCountC2S_MsgID_value = map[string]int32{
	"eMsgID": 3587,
}

func (x ArenaBuyChallengeCountC2S_MsgID) Enum() *ArenaBuyChallengeCountC2S_MsgID {
	p := new(ArenaBuyChallengeCountC2S_MsgID)
	*p = x
	return p
}
func (x ArenaBuyChallengeCountC2S_MsgID) String() string {
	return proto.EnumName(ArenaBuyChallengeCountC2S_MsgID_name, int32(x))
}
func (x *ArenaBuyChallengeCountC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ArenaBuyChallengeCountC2S_MsgID_value, data, "ArenaBuyChallengeCountC2S_MsgID")
	if err != nil {
		return err
	}
	*x = ArenaBuyChallengeCountC2S_MsgID(value)
	return nil
}
func (ArenaBuyChallengeCountC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor4, []int{18, 0}
}

type ArenaBuyChallengeCountS2C_MsgID int32

const (
	ArenaBuyChallengeCountS2C_eMsgID ArenaBuyChallengeCountS2C_MsgID = 3587
)

var ArenaBuyChallengeCountS2C_MsgID_name = map[int32]string{
	3587: "eMsgID",
}
var ArenaBuyChallengeCountS2C_MsgID_value = map[string]int32{
	"eMsgID": 3587,
}

func (x ArenaBuyChallengeCountS2C_MsgID) Enum() *ArenaBuyChallengeCountS2C_MsgID {
	p := new(ArenaBuyChallengeCountS2C_MsgID)
	*p = x
	return p
}
func (x ArenaBuyChallengeCountS2C_MsgID) String() string {
	return proto.EnumName(ArenaBuyChallengeCountS2C_MsgID_name, int32(x))
}
func (x *ArenaBuyChallengeCountS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ArenaBuyChallengeCountS2C_MsgID_value, data, "ArenaBuyChallengeCountS2C_MsgID")
	if err != nil {
		return err
	}
	*x = ArenaBuyChallengeCountS2C_MsgID(value)
	return nil
}
func (ArenaBuyChallengeCountS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor4, []int{19, 0}
}

type ArenaRefreshOppC2S_MsgID int32

const (
	ArenaRefreshOppC2S_eMsgID ArenaRefreshOppC2S_MsgID = 3588
)

var ArenaRefreshOppC2S_MsgID_name = map[int32]string{
	3588: "eMsgID",
}
var ArenaRefreshOppC2S_MsgID_value = map[string]int32{
	"eMsgID": 3588,
}

func (x ArenaRefreshOppC2S_MsgID) Enum() *ArenaRefreshOppC2S_MsgID {
	p := new(ArenaRefreshOppC2S_MsgID)
	*p = x
	return p
}
func (x ArenaRefreshOppC2S_MsgID) String() string {
	return proto.EnumName(ArenaRefreshOppC2S_MsgID_name, int32(x))
}
func (x *ArenaRefreshOppC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ArenaRefreshOppC2S_MsgID_value, data, "ArenaRefreshOppC2S_MsgID")
	if err != nil {
		return err
	}
	*x = ArenaRefreshOppC2S_MsgID(value)
	return nil
}
func (ArenaRefreshOppC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor4, []int{20, 0}
}

type ArenaRefreshOppS2C_MsgID int32

const (
	ArenaRefreshOppS2C_eMsgID ArenaRefreshOppS2C_MsgID = 3588
)

var ArenaRefreshOppS2C_MsgID_name = map[int32]string{
	3588: "eMsgID",
}
var ArenaRefreshOppS2C_MsgID_value = map[string]int32{
	"eMsgID": 3588,
}

func (x ArenaRefreshOppS2C_MsgID) Enum() *ArenaRefreshOppS2C_MsgID {
	p := new(ArenaRefreshOppS2C_MsgID)
	*p = x
	return p
}
func (x ArenaRefreshOppS2C_MsgID) String() string {
	return proto.EnumName(ArenaRefreshOppS2C_MsgID_name, int32(x))
}
func (x *ArenaRefreshOppS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ArenaRefreshOppS2C_MsgID_value, data, "ArenaRefreshOppS2C_MsgID")
	if err != nil {
		return err
	}
	*x = ArenaRefreshOppS2C_MsgID(value)
	return nil
}
func (ArenaRefreshOppS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor4, []int{21, 0}
}

type ArenaGetRankingBreakAwardC2S_MsgID int32

const (
	ArenaGetRankingBreakAwardC2S_eMsgID ArenaGetRankingBreakAwardC2S_MsgID = 3589
)

var ArenaGetRankingBreakAwardC2S_MsgID_name = map[int32]string{
	3589: "eMsgID",
}
var ArenaGetRankingBreakAwardC2S_MsgID_value = map[string]int32{
	"eMsgID": 3589,
}

func (x ArenaGetRankingBreakAwardC2S_MsgID) Enum() *ArenaGetRankingBreakAwardC2S_MsgID {
	p := new(ArenaGetRankingBreakAwardC2S_MsgID)
	*p = x
	return p
}
func (x ArenaGetRankingBreakAwardC2S_MsgID) String() string {
	return proto.EnumName(ArenaGetRankingBreakAwardC2S_MsgID_name, int32(x))
}
func (x *ArenaGetRankingBreakAwardC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ArenaGetRankingBreakAwardC2S_MsgID_value, data, "ArenaGetRankingBreakAwardC2S_MsgID")
	if err != nil {
		return err
	}
	*x = ArenaGetRankingBreakAwardC2S_MsgID(value)
	return nil
}
func (ArenaGetRankingBreakAwardC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor4, []int{22, 0}
}

type ArenaGetRankingBreakAwardS2C_MsgID int32

const (
	ArenaGetRankingBreakAwardS2C_eMsgID ArenaGetRankingBreakAwardS2C_MsgID = 3589
)

var ArenaGetRankingBreakAwardS2C_MsgID_name = map[int32]string{
	3589: "eMsgID",
}
var ArenaGetRankingBreakAwardS2C_MsgID_value = map[string]int32{
	"eMsgID": 3589,
}

func (x ArenaGetRankingBreakAwardS2C_MsgID) Enum() *ArenaGetRankingBreakAwardS2C_MsgID {
	p := new(ArenaGetRankingBreakAwardS2C_MsgID)
	*p = x
	return p
}
func (x ArenaGetRankingBreakAwardS2C_MsgID) String() string {
	return proto.EnumName(ArenaGetRankingBreakAwardS2C_MsgID_name, int32(x))
}
func (x *ArenaGetRankingBreakAwardS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ArenaGetRankingBreakAwardS2C_MsgID_value, data, "ArenaGetRankingBreakAwardS2C_MsgID")
	if err != nil {
		return err
	}
	*x = ArenaGetRankingBreakAwardS2C_MsgID(value)
	return nil
}
func (ArenaGetRankingBreakAwardS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor4, []int{23, 0}
}

type ArenaGetTaskAwardC2S_MsgID int32

const (
	ArenaGetTaskAwardC2S_eMsgID ArenaGetTaskAwardC2S_MsgID = 3590
)

var ArenaGetTaskAwardC2S_MsgID_name = map[int32]string{
	3590: "eMsgID",
}
var ArenaGetTaskAwardC2S_MsgID_value = map[string]int32{
	"eMsgID": 3590,
}

func (x ArenaGetTaskAwardC2S_MsgID) Enum() *ArenaGetTaskAwardC2S_MsgID {
	p := new(ArenaGetTaskAwardC2S_MsgID)
	*p = x
	return p
}
func (x ArenaGetTaskAwardC2S_MsgID) String() string {
	return proto.EnumName(ArenaGetTaskAwardC2S_MsgID_name, int32(x))
}
func (x *ArenaGetTaskAwardC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ArenaGetTaskAwardC2S_MsgID_value, data, "ArenaGetTaskAwardC2S_MsgID")
	if err != nil {
		return err
	}
	*x = ArenaGetTaskAwardC2S_MsgID(value)
	return nil
}
func (ArenaGetTaskAwardC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor4, []int{24, 0}
}

type ArenaGetTaskAwardS2C_MsgID int32

const (
	ArenaGetTaskAwardS2C_eMsgID ArenaGetTaskAwardS2C_MsgID = 3590
)

var ArenaGetTaskAwardS2C_MsgID_name = map[int32]string{
	3590: "eMsgID",
}
var ArenaGetTaskAwardS2C_MsgID_value = map[string]int32{
	"eMsgID": 3590,
}

func (x ArenaGetTaskAwardS2C_MsgID) Enum() *ArenaGetTaskAwardS2C_MsgID {
	p := new(ArenaGetTaskAwardS2C_MsgID)
	*p = x
	return p
}
func (x ArenaGetTaskAwardS2C_MsgID) String() string {
	return proto.EnumName(ArenaGetTaskAwardS2C_MsgID_name, int32(x))
}
func (x *ArenaGetTaskAwardS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ArenaGetTaskAwardS2C_MsgID_value, data, "ArenaGetTaskAwardS2C_MsgID")
	if err != nil {
		return err
	}
	*x = ArenaGetTaskAwardS2C_MsgID(value)
	return nil
}
func (ArenaGetTaskAwardS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor4, []int{25, 0}
}

type ArenaFlopC2S_MsgID int32

const (
	ArenaFlopC2S_eMsgID ArenaFlopC2S_MsgID = 3591
)

var ArenaFlopC2S_MsgID_name = map[int32]string{
	3591: "eMsgID",
}
var ArenaFlopC2S_MsgID_value = map[string]int32{
	"eMsgID": 3591,
}

func (x ArenaFlopC2S_MsgID) Enum() *ArenaFlopC2S_MsgID {
	p := new(ArenaFlopC2S_MsgID)
	*p = x
	return p
}
func (x ArenaFlopC2S_MsgID) String() string {
	return proto.EnumName(ArenaFlopC2S_MsgID_name, int32(x))
}
func (x *ArenaFlopC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ArenaFlopC2S_MsgID_value, data, "ArenaFlopC2S_MsgID")
	if err != nil {
		return err
	}
	*x = ArenaFlopC2S_MsgID(value)
	return nil
}
func (ArenaFlopC2S_MsgID) EnumDescriptor() ([]byte, []int) { return fileDescriptor4, []int{26, 0} }

type ArenaFlopS2C_MsgID int32

const (
	ArenaFlopS2C_eMsgID ArenaFlopS2C_MsgID = 3591
)

var ArenaFlopS2C_MsgID_name = map[int32]string{
	3591: "eMsgID",
}
var ArenaFlopS2C_MsgID_value = map[string]int32{
	"eMsgID": 3591,
}

func (x ArenaFlopS2C_MsgID) Enum() *ArenaFlopS2C_MsgID {
	p := new(ArenaFlopS2C_MsgID)
	*p = x
	return p
}
func (x ArenaFlopS2C_MsgID) String() string {
	return proto.EnumName(ArenaFlopS2C_MsgID_name, int32(x))
}
func (x *ArenaFlopS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ArenaFlopS2C_MsgID_value, data, "ArenaFlopS2C_MsgID")
	if err != nil {
		return err
	}
	*x = ArenaFlopS2C_MsgID(value)
	return nil
}
func (ArenaFlopS2C_MsgID) EnumDescriptor() ([]byte, []int) { return fileDescriptor4, []int{27, 0} }

type ArenaGetRankC2S_MsgID int32

const (
	ArenaGetRankC2S_eMsgID ArenaGetRankC2S_MsgID = 3592
)

var ArenaGetRankC2S_MsgID_name = map[int32]string{
	3592: "eMsgID",
}
var ArenaGetRankC2S_MsgID_value = map[string]int32{
	"eMsgID": 3592,
}

func (x ArenaGetRankC2S_MsgID) Enum() *ArenaGetRankC2S_MsgID {
	p := new(ArenaGetRankC2S_MsgID)
	*p = x
	return p
}
func (x ArenaGetRankC2S_MsgID) String() string {
	return proto.EnumName(ArenaGetRankC2S_MsgID_name, int32(x))
}
func (x *ArenaGetRankC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ArenaGetRankC2S_MsgID_value, data, "ArenaGetRankC2S_MsgID")
	if err != nil {
		return err
	}
	*x = ArenaGetRankC2S_MsgID(value)
	return nil
}
func (ArenaGetRankC2S_MsgID) EnumDescriptor() ([]byte, []int) { return fileDescriptor4, []int{28, 0} }

type ArenaGetRankS2C_MsgID int32

const (
	ArenaGetRankS2C_eMsgID ArenaGetRankS2C_MsgID = 3592
)

var ArenaGetRankS2C_MsgID_name = map[int32]string{
	3592: "eMsgID",
}
var ArenaGetRankS2C_MsgID_value = map[string]int32{
	"eMsgID": 3592,
}

func (x ArenaGetRankS2C_MsgID) Enum() *ArenaGetRankS2C_MsgID {
	p := new(ArenaGetRankS2C_MsgID)
	*p = x
	return p
}
func (x ArenaGetRankS2C_MsgID) String() string {
	return proto.EnumName(ArenaGetRankS2C_MsgID_name, int32(x))
}
func (x *ArenaGetRankS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ArenaGetRankS2C_MsgID_value, data, "ArenaGetRankS2C_MsgID")
	if err != nil {
		return err
	}
	*x = ArenaGetRankS2C_MsgID(value)
	return nil
}
func (ArenaGetRankS2C_MsgID) EnumDescriptor() ([]byte, []int) { return fileDescriptor4, []int{29, 0} }

type ArenaRefreshS2C_MsgID int32

const (
	ArenaRefreshS2C_eMsgID ArenaRefreshS2C_MsgID = 3593
)

var ArenaRefreshS2C_MsgID_name = map[int32]string{
	3593: "eMsgID",
}
var ArenaRefreshS2C_MsgID_value = map[string]int32{
	"eMsgID": 3593,
}

func (x ArenaRefreshS2C_MsgID) Enum() *ArenaRefreshS2C_MsgID {
	p := new(ArenaRefreshS2C_MsgID)
	*p = x
	return p
}
func (x ArenaRefreshS2C_MsgID) String() string {
	return proto.EnumName(ArenaRefreshS2C_MsgID_name, int32(x))
}
func (x *ArenaRefreshS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ArenaRefreshS2C_MsgID_value, data, "ArenaRefreshS2C_MsgID")
	if err != nil {
		return err
	}
	*x = ArenaRefreshS2C_MsgID(value)
	return nil
}
func (ArenaRefreshS2C_MsgID) EnumDescriptor() ([]byte, []int) { return fileDescriptor4, []int{30, 0} }

type SendArenaDataS2C_MsgID int32

const (
	SendArenaDataS2C_eMsgID SendArenaDataS2C_MsgID = 3594
)

var SendArenaDataS2C_MsgID_name = map[int32]string{
	3594: "eMsgID",
}
var SendArenaDataS2C_MsgID_value = map[string]int32{
	"eMsgID": 3594,
}

func (x SendArenaDataS2C_MsgID) Enum() *SendArenaDataS2C_MsgID {
	p := new(SendArenaDataS2C_MsgID)
	*p = x
	return p
}
func (x SendArenaDataS2C_MsgID) String() string {
	return proto.EnumName(SendArenaDataS2C_MsgID_name, int32(x))
}
func (x *SendArenaDataS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SendArenaDataS2C_MsgID_value, data, "SendArenaDataS2C_MsgID")
	if err != nil {
		return err
	}
	*x = SendArenaDataS2C_MsgID(value)
	return nil
}
func (SendArenaDataS2C_MsgID) EnumDescriptor() ([]byte, []int) { return fileDescriptor4, []int{31, 0} }

type GetArenaChallengeHistoryC2S_MsgID int32

const (
	GetArenaChallengeHistoryC2S_eMsgID GetArenaChallengeHistoryC2S_MsgID = 3595
)

var GetArenaChallengeHistoryC2S_MsgID_name = map[int32]string{
	3595: "eMsgID",
}
var GetArenaChallengeHistoryC2S_MsgID_value = map[string]int32{
	"eMsgID": 3595,
}

func (x GetArenaChallengeHistoryC2S_MsgID) Enum() *GetArenaChallengeHistoryC2S_MsgID {
	p := new(GetArenaChallengeHistoryC2S_MsgID)
	*p = x
	return p
}
func (x GetArenaChallengeHistoryC2S_MsgID) String() string {
	return proto.EnumName(GetArenaChallengeHistoryC2S_MsgID_name, int32(x))
}
func (x *GetArenaChallengeHistoryC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GetArenaChallengeHistoryC2S_MsgID_value, data, "GetArenaChallengeHistoryC2S_MsgID")
	if err != nil {
		return err
	}
	*x = GetArenaChallengeHistoryC2S_MsgID(value)
	return nil
}
func (GetArenaChallengeHistoryC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor4, []int{32, 0}
}

type GetArenaChallengeHistoryS2C_MsgID int32

const (
	GetArenaChallengeHistoryS2C_eMsgID GetArenaChallengeHistoryS2C_MsgID = 3595
)

var GetArenaChallengeHistoryS2C_MsgID_name = map[int32]string{
	3595: "eMsgID",
}
var GetArenaChallengeHistoryS2C_MsgID_value = map[string]int32{
	"eMsgID": 3595,
}

func (x GetArenaChallengeHistoryS2C_MsgID) Enum() *GetArenaChallengeHistoryS2C_MsgID {
	p := new(GetArenaChallengeHistoryS2C_MsgID)
	*p = x
	return p
}
func (x GetArenaChallengeHistoryS2C_MsgID) String() string {
	return proto.EnumName(GetArenaChallengeHistoryS2C_MsgID_name, int32(x))
}
func (x *GetArenaChallengeHistoryS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GetArenaChallengeHistoryS2C_MsgID_value, data, "GetArenaChallengeHistoryS2C_MsgID")
	if err != nil {
		return err
	}
	*x = GetArenaChallengeHistoryS2C_MsgID(value)
	return nil
}
func (GetArenaChallengeHistoryS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor4, []int{33, 0}
}

type GetArenaFightRewardC2S_MsgID int32

const (
	GetArenaFightRewardC2S_eMsgID GetArenaFightRewardC2S_MsgID = 3596
)

var GetArenaFightRewardC2S_MsgID_name = map[int32]string{
	3596: "eMsgID",
}
var GetArenaFightRewardC2S_MsgID_value = map[string]int32{
	"eMsgID": 3596,
}

func (x GetArenaFightRewardC2S_MsgID) Enum() *GetArenaFightRewardC2S_MsgID {
	p := new(GetArenaFightRewardC2S_MsgID)
	*p = x
	return p
}
func (x GetArenaFightRewardC2S_MsgID) String() string {
	return proto.EnumName(GetArenaFightRewardC2S_MsgID_name, int32(x))
}
func (x *GetArenaFightRewardC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GetArenaFightRewardC2S_MsgID_value, data, "GetArenaFightRewardC2S_MsgID")
	if err != nil {
		return err
	}
	*x = GetArenaFightRewardC2S_MsgID(value)
	return nil
}
func (GetArenaFightRewardC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor4, []int{34, 0}
}

type GetArenaFightRewardS2C_MsgID int32

const (
	GetArenaFightRewardS2C_eMsgID GetArenaFightRewardS2C_MsgID = 3596
)

var GetArenaFightRewardS2C_MsgID_name = map[int32]string{
	3596: "eMsgID",
}
var GetArenaFightRewardS2C_MsgID_value = map[string]int32{
	"eMsgID": 3596,
}

func (x GetArenaFightRewardS2C_MsgID) Enum() *GetArenaFightRewardS2C_MsgID {
	p := new(GetArenaFightRewardS2C_MsgID)
	*p = x
	return p
}
func (x GetArenaFightRewardS2C_MsgID) String() string {
	return proto.EnumName(GetArenaFightRewardS2C_MsgID_name, int32(x))
}
func (x *GetArenaFightRewardS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GetArenaFightRewardS2C_MsgID_value, data, "GetArenaFightRewardS2C_MsgID")
	if err != nil {
		return err
	}
	*x = GetArenaFightRewardS2C_MsgID(value)
	return nil
}
func (GetArenaFightRewardS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor4, []int{35, 0}
}

type SyncArenaRankingS2C_MsgID int32

const (
	SyncArenaRankingS2C_eMsgID SyncArenaRankingS2C_MsgID = 3597
)

var SyncArenaRankingS2C_MsgID_name = map[int32]string{
	3597: "eMsgID",
}
var SyncArenaRankingS2C_MsgID_value = map[string]int32{
	"eMsgID": 3597,
}

func (x SyncArenaRankingS2C_MsgID) Enum() *SyncArenaRankingS2C_MsgID {
	p := new(SyncArenaRankingS2C_MsgID)
	*p = x
	return p
}
func (x SyncArenaRankingS2C_MsgID) String() string {
	return proto.EnumName(SyncArenaRankingS2C_MsgID_name, int32(x))
}
func (x *SyncArenaRankingS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SyncArenaRankingS2C_MsgID_value, data, "SyncArenaRankingS2C_MsgID")
	if err != nil {
		return err
	}
	*x = SyncArenaRankingS2C_MsgID(value)
	return nil
}
func (SyncArenaRankingS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor4, []int{36, 0}
}

type PushNewArenaTaskS2C_MsgID int32

const (
	PushNewArenaTaskS2C_eMsgID PushNewArenaTaskS2C_MsgID = 3598
)

var PushNewArenaTaskS2C_MsgID_name = map[int32]string{
	3598: "eMsgID",
}
var PushNewArenaTaskS2C_MsgID_value = map[string]int32{
	"eMsgID": 3598,
}

func (x PushNewArenaTaskS2C_MsgID) Enum() *PushNewArenaTaskS2C_MsgID {
	p := new(PushNewArenaTaskS2C_MsgID)
	*p = x
	return p
}
func (x PushNewArenaTaskS2C_MsgID) String() string {
	return proto.EnumName(PushNewArenaTaskS2C_MsgID_name, int32(x))
}
func (x *PushNewArenaTaskS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PushNewArenaTaskS2C_MsgID_value, data, "PushNewArenaTaskS2C_MsgID")
	if err != nil {
		return err
	}
	*x = PushNewArenaTaskS2C_MsgID(value)
	return nil
}
func (PushNewArenaTaskS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor4, []int{37, 0}
}

type GetArenaOppSquadC2S_MsgID int32

const (
	GetArenaOppSquadC2S_eMsgID GetArenaOppSquadC2S_MsgID = 3599
)

var GetArenaOppSquadC2S_MsgID_name = map[int32]string{
	3599: "eMsgID",
}
var GetArenaOppSquadC2S_MsgID_value = map[string]int32{
	"eMsgID": 3599,
}

func (x GetArenaOppSquadC2S_MsgID) Enum() *GetArenaOppSquadC2S_MsgID {
	p := new(GetArenaOppSquadC2S_MsgID)
	*p = x
	return p
}
func (x GetArenaOppSquadC2S_MsgID) String() string {
	return proto.EnumName(GetArenaOppSquadC2S_MsgID_name, int32(x))
}
func (x *GetArenaOppSquadC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GetArenaOppSquadC2S_MsgID_value, data, "GetArenaOppSquadC2S_MsgID")
	if err != nil {
		return err
	}
	*x = GetArenaOppSquadC2S_MsgID(value)
	return nil
}
func (GetArenaOppSquadC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor4, []int{38, 0}
}

type GetArenaOppSquadS2C_MsgID int32

const (
	GetArenaOppSquadS2C_eMsgID GetArenaOppSquadS2C_MsgID = 3599
)

var GetArenaOppSquadS2C_MsgID_name = map[int32]string{
	3599: "eMsgID",
}
var GetArenaOppSquadS2C_MsgID_value = map[string]int32{
	"eMsgID": 3599,
}

func (x GetArenaOppSquadS2C_MsgID) Enum() *GetArenaOppSquadS2C_MsgID {
	p := new(GetArenaOppSquadS2C_MsgID)
	*p = x
	return p
}
func (x GetArenaOppSquadS2C_MsgID) String() string {
	return proto.EnumName(GetArenaOppSquadS2C_MsgID_name, int32(x))
}
func (x *GetArenaOppSquadS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GetArenaOppSquadS2C_MsgID_value, data, "GetArenaOppSquadS2C_MsgID")
	if err != nil {
		return err
	}
	*x = GetArenaOppSquadS2C_MsgID(value)
	return nil
}
func (GetArenaOppSquadS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor4, []int{39, 0}
}

// 竞技场排行榜item
type ArenaRankItem struct {
	Gid              *int32  `protobuf:"varint,1,opt,name=gid" json:"gid,omitempty"`
	GamerName        *string `protobuf:"bytes,2,opt,name=gamerName" json:"gamerName,omitempty"`
	BattlePower      *int32  `protobuf:"varint,4,opt,name=battlePower" json:"battlePower,omitempty"`
	Ranking          *int32  `protobuf:"varint,5,opt,name=ranking" json:"ranking,omitempty"`
	IsRobot          *bool   `protobuf:"varint,6,opt,name=isRobot" json:"isRobot,omitempty"`
	PlayerId         *int32  `protobuf:"varint,8,opt,name=playerId" json:"playerId,omitempty"`
	TeamId           *int32  `protobuf:"varint,9,opt,name=teamId" json:"teamId,omitempty"`
	Level            *int32  `protobuf:"varint,10,opt,name=level" json:"level,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ArenaRankItem) Reset()                    { *m = ArenaRankItem{} }
func (m *ArenaRankItem) String() string            { return proto.CompactTextString(m) }
func (*ArenaRankItem) ProtoMessage()               {}
func (*ArenaRankItem) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

func (m *ArenaRankItem) GetGid() int32 {
	if m != nil && m.Gid != nil {
		return *m.Gid
	}
	return 0
}

func (m *ArenaRankItem) GetGamerName() string {
	if m != nil && m.GamerName != nil {
		return *m.GamerName
	}
	return ""
}

func (m *ArenaRankItem) GetBattlePower() int32 {
	if m != nil && m.BattlePower != nil {
		return *m.BattlePower
	}
	return 0
}

func (m *ArenaRankItem) GetRanking() int32 {
	if m != nil && m.Ranking != nil {
		return *m.Ranking
	}
	return 0
}

func (m *ArenaRankItem) GetIsRobot() bool {
	if m != nil && m.IsRobot != nil {
		return *m.IsRobot
	}
	return false
}

func (m *ArenaRankItem) GetPlayerId() int32 {
	if m != nil && m.PlayerId != nil {
		return *m.PlayerId
	}
	return 0
}

func (m *ArenaRankItem) GetTeamId() int32 {
	if m != nil && m.TeamId != nil {
		return *m.TeamId
	}
	return 0
}

func (m *ArenaRankItem) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

// 玩家竞技场数据
type ArenaData struct {
	TaskItemList                []*TaskItem       `protobuf:"bytes,2,rep,name=taskItemList" json:"taskItemList,omitempty"`
	TodayChallengeCount         *int32            `protobuf:"varint,3,opt,name=todayChallengeCount" json:"todayChallengeCount,omitempty"`
	TodayBuyChallengeCount      *int32            `protobuf:"varint,4,opt,name=todayBuyChallengeCount" json:"todayBuyChallengeCount,omitempty"`
	NextRefreshTime             *int64            `protobuf:"varint,5,opt,name=nextRefreshTime" json:"nextRefreshTime,omitempty"`
	CanFlop                     *bool             `protobuf:"varint,6,opt,name=canFlop" json:"canFlop,omitempty"`
	LastAward                   []*ItemVaryConfig `protobuf:"bytes,8,rep,name=lastAward" json:"lastAward,omitempty"`
	HistoryTopRanking           *int32            `protobuf:"varint,9,opt,name=historyTopRanking" json:"historyTopRanking,omitempty"`
	LastHistoryTopRewardRanking *int32            `protobuf:"varint,10,opt,name=lastHistoryTopRewardRanking" json:"lastHistoryTopRewardRanking,omitempty"`
	OppGidList                  []int32           `protobuf:"varint,11,rep,name=oppGidList" json:"oppGidList,omitempty"`
	TotalChallengeCount         *int32            `protobuf:"varint,12,opt,name=totalChallengeCount" json:"totalChallengeCount,omitempty"`
	XXX_unrecognized            []byte            `json:"-"`
}

func (m *ArenaData) Reset()                    { *m = ArenaData{} }
func (m *ArenaData) String() string            { return proto.CompactTextString(m) }
func (*ArenaData) ProtoMessage()               {}
func (*ArenaData) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{1} }

func (m *ArenaData) GetTaskItemList() []*TaskItem {
	if m != nil {
		return m.TaskItemList
	}
	return nil
}

func (m *ArenaData) GetTodayChallengeCount() int32 {
	if m != nil && m.TodayChallengeCount != nil {
		return *m.TodayChallengeCount
	}
	return 0
}

func (m *ArenaData) GetTodayBuyChallengeCount() int32 {
	if m != nil && m.TodayBuyChallengeCount != nil {
		return *m.TodayBuyChallengeCount
	}
	return 0
}

func (m *ArenaData) GetNextRefreshTime() int64 {
	if m != nil && m.NextRefreshTime != nil {
		return *m.NextRefreshTime
	}
	return 0
}

func (m *ArenaData) GetCanFlop() bool {
	if m != nil && m.CanFlop != nil {
		return *m.CanFlop
	}
	return false
}

func (m *ArenaData) GetLastAward() []*ItemVaryConfig {
	if m != nil {
		return m.LastAward
	}
	return nil
}

func (m *ArenaData) GetHistoryTopRanking() int32 {
	if m != nil && m.HistoryTopRanking != nil {
		return *m.HistoryTopRanking
	}
	return 0
}

func (m *ArenaData) GetLastHistoryTopRewardRanking() int32 {
	if m != nil && m.LastHistoryTopRewardRanking != nil {
		return *m.LastHistoryTopRewardRanking
	}
	return 0
}

func (m *ArenaData) GetOppGidList() []int32 {
	if m != nil {
		return m.OppGidList
	}
	return nil
}

func (m *ArenaData) GetTotalChallengeCount() int32 {
	if m != nil && m.TotalChallengeCount != nil {
		return *m.TotalChallengeCount
	}
	return 0
}

// 竞技场排行榜item详情（包含阵型等数据，客户端展示用）
type ArenaRankingItemDetail struct {
	RankItem         *ArenaRankItem    `protobuf:"bytes,1,opt,name=rankItem" json:"rankItem,omitempty"`
	SquadInfo        *PvpRoleSquadInfo `protobuf:"bytes,2,opt,name=squadInfo" json:"squadInfo,omitempty"`
	Ranking          *int32            `protobuf:"varint,3,opt,name=ranking" json:"ranking,omitempty"`
	Score            *int32            `protobuf:"varint,4,opt,name=score" json:"score,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *ArenaRankingItemDetail) Reset()                    { *m = ArenaRankingItemDetail{} }
func (m *ArenaRankingItemDetail) String() string            { return proto.CompactTextString(m) }
func (*ArenaRankingItemDetail) ProtoMessage()               {}
func (*ArenaRankingItemDetail) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{2} }

func (m *ArenaRankingItemDetail) GetRankItem() *ArenaRankItem {
	if m != nil {
		return m.RankItem
	}
	return nil
}

func (m *ArenaRankingItemDetail) GetSquadInfo() *PvpRoleSquadInfo {
	if m != nil {
		return m.SquadInfo
	}
	return nil
}

func (m *ArenaRankingItemDetail) GetRanking() int32 {
	if m != nil && m.Ranking != nil {
		return *m.Ranking
	}
	return 0
}

func (m *ArenaRankingItemDetail) GetScore() int32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

// 挑战历史item new
type ArenaFightRecord struct {
	Record           *FightDataRecord `protobuf:"bytes,1,opt,name=record" json:"record,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *ArenaFightRecord) Reset()                    { *m = ArenaFightRecord{} }
func (m *ArenaFightRecord) String() string            { return proto.CompactTextString(m) }
func (*ArenaFightRecord) ProtoMessage()               {}
func (*ArenaFightRecord) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{3} }

func (m *ArenaFightRecord) GetRecord() *FightDataRecord {
	if m != nil {
		return m.Record
	}
	return nil
}

// pvp的机器人队伍信息
type ArenaRobotTeamInfo struct {
	RobotId          *int32                  `protobuf:"varint,1,opt,name=robotId" json:"robotId,omitempty"`
	Starter          []*ArenaRobotBallerInfo `protobuf:"bytes,2,rep,name=Starter" json:"Starter,omitempty"`
	Bench            []*ArenaRobotBallerInfo `protobuf:"bytes,3,rep,name=Bench" json:"Bench,omitempty"`
	BattleValue      *int32                  `protobuf:"varint,4,opt,name=BattleValue" json:"BattleValue,omitempty"`
	NpcLv            *int32                  `protobuf:"varint,5,opt,name=NpcLv" json:"NpcLv,omitempty"`
	HalfId           *int32                  `protobuf:"varint,6,opt,name=halfId" json:"halfId,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *ArenaRobotTeamInfo) Reset()                    { *m = ArenaRobotTeamInfo{} }
func (m *ArenaRobotTeamInfo) String() string            { return proto.CompactTextString(m) }
func (*ArenaRobotTeamInfo) ProtoMessage()               {}
func (*ArenaRobotTeamInfo) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{4} }

func (m *ArenaRobotTeamInfo) GetRobotId() int32 {
	if m != nil && m.RobotId != nil {
		return *m.RobotId
	}
	return 0
}

func (m *ArenaRobotTeamInfo) GetStarter() []*ArenaRobotBallerInfo {
	if m != nil {
		return m.Starter
	}
	return nil
}

func (m *ArenaRobotTeamInfo) GetBench() []*ArenaRobotBallerInfo {
	if m != nil {
		return m.Bench
	}
	return nil
}

func (m *ArenaRobotTeamInfo) GetBattleValue() int32 {
	if m != nil && m.BattleValue != nil {
		return *m.BattleValue
	}
	return 0
}

func (m *ArenaRobotTeamInfo) GetNpcLv() int32 {
	if m != nil && m.NpcLv != nil {
		return *m.NpcLv
	}
	return 0
}

func (m *ArenaRobotTeamInfo) GetHalfId() int32 {
	if m != nil && m.HalfId != nil {
		return *m.HalfId
	}
	return 0
}

// pvp的机器人球员信息
type ArenaRobotBallerInfo struct {
	NIndexpos        *int32 `protobuf:"varint,1,opt,name=nIndexpos" json:"nIndexpos,omitempty"`
	NpcID            *int32 `protobuf:"varint,2,opt,name=npcID" json:"npcID,omitempty"`
	Quality          *int32 `protobuf:"varint,3,opt,name=quality" json:"quality,omitempty"`
	Level            *int32 `protobuf:"varint,4,opt,name=level" json:"level,omitempty"`
	Star             *int32 `protobuf:"varint,5,opt,name=star" json:"star,omitempty"`
	ExtraAttrs       *int32 `protobuf:"varint,7,opt,name=extraAttrs" json:"extraAttrs,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ArenaRobotBallerInfo) Reset()                    { *m = ArenaRobotBallerInfo{} }
func (m *ArenaRobotBallerInfo) String() string            { return proto.CompactTextString(m) }
func (*ArenaRobotBallerInfo) ProtoMessage()               {}
func (*ArenaRobotBallerInfo) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{5} }

func (m *ArenaRobotBallerInfo) GetNIndexpos() int32 {
	if m != nil && m.NIndexpos != nil {
		return *m.NIndexpos
	}
	return 0
}

func (m *ArenaRobotBallerInfo) GetNpcID() int32 {
	if m != nil && m.NpcID != nil {
		return *m.NpcID
	}
	return 0
}

func (m *ArenaRobotBallerInfo) GetQuality() int32 {
	if m != nil && m.Quality != nil {
		return *m.Quality
	}
	return 0
}

func (m *ArenaRobotBallerInfo) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *ArenaRobotBallerInfo) GetStar() int32 {
	if m != nil && m.Star != nil {
		return *m.Star
	}
	return 0
}

func (m *ArenaRobotBallerInfo) GetExtraAttrs() int32 {
	if m != nil && m.ExtraAttrs != nil {
		return *m.ExtraAttrs
	}
	return 0
}

// pvp的排名信息
type ArenaRankInfo struct {
	Gid              *int32 `protobuf:"varint,1,opt,name=gid" json:"gid,omitempty"`
	Rank             *int32 `protobuf:"varint,2,opt,name=rank" json:"rank,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ArenaRankInfo) Reset()                    { *m = ArenaRankInfo{} }
func (m *ArenaRankInfo) String() string            { return proto.CompactTextString(m) }
func (*ArenaRankInfo) ProtoMessage()               {}
func (*ArenaRankInfo) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{6} }

func (m *ArenaRankInfo) GetGid() int32 {
	if m != nil && m.Gid != nil {
		return *m.Gid
	}
	return 0
}

func (m *ArenaRankInfo) GetRank() int32 {
	if m != nil && m.Rank != nil {
		return *m.Rank
	}
	return 0
}

// 从匹配服请求竞技场挑战信息
type GetArenaChallengeInfoResp struct {
	OppInfo          *ArenaRankingItemDetail `protobuf:"bytes,1,opt,name=oppInfo" json:"oppInfo,omitempty"`
	MyInfo           *ArenaRankingItemDetail `protobuf:"bytes,2,opt,name=myInfo" json:"myInfo,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *GetArenaChallengeInfoResp) Reset()                    { *m = GetArenaChallengeInfoResp{} }
func (m *GetArenaChallengeInfoResp) String() string            { return proto.CompactTextString(m) }
func (*GetArenaChallengeInfoResp) ProtoMessage()               {}
func (*GetArenaChallengeInfoResp) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{7} }

func (m *GetArenaChallengeInfoResp) GetOppInfo() *ArenaRankingItemDetail {
	if m != nil {
		return m.OppInfo
	}
	return nil
}

func (m *GetArenaChallengeInfoResp) GetMyInfo() *ArenaRankingItemDetail {
	if m != nil {
		return m.MyInfo
	}
	return nil
}

// 发送竞技场挑战结果给匹配服
type SendArenaChallengeResultReq struct {
	AttackerTeamInfo *ArenaRankingItemDetail `protobuf:"bytes,1,opt,name=attackerTeamInfo" json:"attackerTeamInfo,omitempty"`
	DefenderTeamInfo *ArenaRankingItemDetail `protobuf:"bytes,2,opt,name=defenderTeamInfo" json:"defenderTeamInfo,omitempty"`
	ArenaRecord      *ArenaFightRecord       `protobuf:"bytes,3,opt,name=arenaRecord" json:"arenaRecord,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *SendArenaChallengeResultReq) Reset()                    { *m = SendArenaChallengeResultReq{} }
func (m *SendArenaChallengeResultReq) String() string            { return proto.CompactTextString(m) }
func (*SendArenaChallengeResultReq) ProtoMessage()               {}
func (*SendArenaChallengeResultReq) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{8} }

func (m *SendArenaChallengeResultReq) GetAttackerTeamInfo() *ArenaRankingItemDetail {
	if m != nil {
		return m.AttackerTeamInfo
	}
	return nil
}

func (m *SendArenaChallengeResultReq) GetDefenderTeamInfo() *ArenaRankingItemDetail {
	if m != nil {
		return m.DefenderTeamInfo
	}
	return nil
}

func (m *SendArenaChallengeResultReq) GetArenaRecord() *ArenaFightRecord {
	if m != nil {
		return m.ArenaRecord
	}
	return nil
}

// 请求竞技场名次req
type GetArenaRankingReq struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *GetArenaRankingReq) Reset()                    { *m = GetArenaRankingReq{} }
func (m *GetArenaRankingReq) String() string            { return proto.CompactTextString(m) }
func (*GetArenaRankingReq) ProtoMessage()               {}
func (*GetArenaRankingReq) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{9} }

// 请求竞技场名次resp
type GetArenaRankingResp struct {
	Ranking          *int32 `protobuf:"varint,1,opt,name=ranking" json:"ranking,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GetArenaRankingResp) Reset()                    { *m = GetArenaRankingResp{} }
func (m *GetArenaRankingResp) String() string            { return proto.CompactTextString(m) }
func (*GetArenaRankingResp) ProtoMessage()               {}
func (*GetArenaRankingResp) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{10} }

func (m *GetArenaRankingResp) GetRanking() int32 {
	if m != nil && m.Ranking != nil {
		return *m.Ranking
	}
	return 0
}

// 请求修改竞技场名次
type GMChangeArenaRankingReq struct {
	Ranking          *int32 `protobuf:"varint,1,opt,name=ranking" json:"ranking,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GMChangeArenaRankingReq) Reset()                    { *m = GMChangeArenaRankingReq{} }
func (m *GMChangeArenaRankingReq) String() string            { return proto.CompactTextString(m) }
func (*GMChangeArenaRankingReq) ProtoMessage()               {}
func (*GMChangeArenaRankingReq) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{11} }

func (m *GMChangeArenaRankingReq) GetRanking() int32 {
	if m != nil && m.Ranking != nil {
		return *m.Ranking
	}
	return 0
}

// 修改竞技场（无双竞技场）玩家名字
type ArenaChangeGamerNameReq struct {
	Gid              *int32  `protobuf:"varint,1,opt,name=gid" json:"gid,omitempty"`
	Name             *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Icon             *int32  `protobuf:"varint,3,opt,name=icon" json:"icon,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ArenaChangeGamerNameReq) Reset()                    { *m = ArenaChangeGamerNameReq{} }
func (m *ArenaChangeGamerNameReq) String() string            { return proto.CompactTextString(m) }
func (*ArenaChangeGamerNameReq) ProtoMessage()               {}
func (*ArenaChangeGamerNameReq) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{12} }

func (m *ArenaChangeGamerNameReq) GetGid() int32 {
	if m != nil && m.Gid != nil {
		return *m.Gid
	}
	return 0
}

func (m *ArenaChangeGamerNameReq) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *ArenaChangeGamerNameReq) GetIcon() int32 {
	if m != nil && m.Icon != nil {
		return *m.Icon
	}
	return 0
}

// 修改竞技场（无双竞技场）玩家等级
type ArenaChangeGamerLvReq struct {
	// gid
	Gid *int32 `protobuf:"varint,1,opt,name=gid" json:"gid,omitempty"`
	// 等级
	Lv               *int32 `protobuf:"varint,2,opt,name=lv" json:"lv,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ArenaChangeGamerLvReq) Reset()                    { *m = ArenaChangeGamerLvReq{} }
func (m *ArenaChangeGamerLvReq) String() string            { return proto.CompactTextString(m) }
func (*ArenaChangeGamerLvReq) ProtoMessage()               {}
func (*ArenaChangeGamerLvReq) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{13} }

func (m *ArenaChangeGamerLvReq) GetGid() int32 {
	if m != nil && m.Gid != nil {
		return *m.Gid
	}
	return 0
}

func (m *ArenaChangeGamerLvReq) GetLv() int32 {
	if m != nil && m.Lv != nil {
		return *m.Lv
	}
	return 0
}

// 竞技场挑战
type ArenaChallengeC2S struct {
	OppGid           *int32 `protobuf:"varint,3,opt,name=oppGid" json:"oppGid,omitempty"`
	OppRanking       *int32 `protobuf:"varint,4,opt,name=oppRanking" json:"oppRanking,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ArenaChallengeC2S) Reset()                    { *m = ArenaChallengeC2S{} }
func (m *ArenaChallengeC2S) String() string            { return proto.CompactTextString(m) }
func (*ArenaChallengeC2S) ProtoMessage()               {}
func (*ArenaChallengeC2S) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{14} }

func (m *ArenaChallengeC2S) GetOppGid() int32 {
	if m != nil && m.OppGid != nil {
		return *m.OppGid
	}
	return 0
}

func (m *ArenaChallengeC2S) GetOppRanking() int32 {
	if m != nil && m.OppRanking != nil {
		return *m.OppRanking
	}
	return 0
}

// 竞技场挑战
type ArenaChallengeS2C struct {
	ReplayId         *int64 `protobuf:"varint,1,opt,name=replayId" json:"replayId,omitempty"`
	CanFlop          *bool  `protobuf:"varint,2,opt,name=canFlop" json:"canFlop,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ArenaChallengeS2C) Reset()                    { *m = ArenaChallengeS2C{} }
func (m *ArenaChallengeS2C) String() string            { return proto.CompactTextString(m) }
func (*ArenaChallengeS2C) ProtoMessage()               {}
func (*ArenaChallengeS2C) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{15} }

func (m *ArenaChallengeS2C) GetReplayId() int64 {
	if m != nil && m.ReplayId != nil {
		return *m.ReplayId
	}
	return 0
}

func (m *ArenaChallengeS2C) GetCanFlop() bool {
	if m != nil && m.CanFlop != nil {
		return *m.CanFlop
	}
	return false
}

// 竞技场扫荡
type ArenaSweepC2S struct {
	SweepCount       *int32 `protobuf:"varint,1,opt,name=sweepCount" json:"sweepCount,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ArenaSweepC2S) Reset()                    { *m = ArenaSweepC2S{} }
func (m *ArenaSweepC2S) String() string            { return proto.CompactTextString(m) }
func (*ArenaSweepC2S) ProtoMessage()               {}
func (*ArenaSweepC2S) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{16} }

func (m *ArenaSweepC2S) GetSweepCount() int32 {
	if m != nil && m.SweepCount != nil {
		return *m.SweepCount
	}
	return 0
}

// 竞技场扫荡
type ArenaSweepS2C struct {
	RewardList          []*ItemVaryConfigList `protobuf:"bytes,1,rep,name=rewardList" json:"rewardList,omitempty"`
	TodayChallengeCount *int32                `protobuf:"varint,2,opt,name=todayChallengeCount" json:"todayChallengeCount,omitempty"`
	TotalChallengeCount *int32                `protobuf:"varint,3,opt,name=totalChallengeCount" json:"totalChallengeCount,omitempty"`
	XXX_unrecognized    []byte                `json:"-"`
}

func (m *ArenaSweepS2C) Reset()                    { *m = ArenaSweepS2C{} }
func (m *ArenaSweepS2C) String() string            { return proto.CompactTextString(m) }
func (*ArenaSweepS2C) ProtoMessage()               {}
func (*ArenaSweepS2C) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{17} }

func (m *ArenaSweepS2C) GetRewardList() []*ItemVaryConfigList {
	if m != nil {
		return m.RewardList
	}
	return nil
}

func (m *ArenaSweepS2C) GetTodayChallengeCount() int32 {
	if m != nil && m.TodayChallengeCount != nil {
		return *m.TodayChallengeCount
	}
	return 0
}

func (m *ArenaSweepS2C) GetTotalChallengeCount() int32 {
	if m != nil && m.TotalChallengeCount != nil {
		return *m.TotalChallengeCount
	}
	return 0
}

// 竞技场购买挑战次数
type ArenaBuyChallengeCountC2S struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *ArenaBuyChallengeCountC2S) Reset()                    { *m = ArenaBuyChallengeCountC2S{} }
func (m *ArenaBuyChallengeCountC2S) String() string            { return proto.CompactTextString(m) }
func (*ArenaBuyChallengeCountC2S) ProtoMessage()               {}
func (*ArenaBuyChallengeCountC2S) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{18} }

// 竞技场购买挑战次数
type ArenaBuyChallengeCountS2C struct {
	TodayBuyChallengeCount *int32 `protobuf:"varint,1,opt,name=todayBuyChallengeCount" json:"todayBuyChallengeCount,omitempty"`
	XXX_unrecognized       []byte `json:"-"`
}

func (m *ArenaBuyChallengeCountS2C) Reset()                    { *m = ArenaBuyChallengeCountS2C{} }
func (m *ArenaBuyChallengeCountS2C) String() string            { return proto.CompactTextString(m) }
func (*ArenaBuyChallengeCountS2C) ProtoMessage()               {}
func (*ArenaBuyChallengeCountS2C) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{19} }

func (m *ArenaBuyChallengeCountS2C) GetTodayBuyChallengeCount() int32 {
	if m != nil && m.TodayBuyChallengeCount != nil {
		return *m.TodayBuyChallengeCount
	}
	return 0
}

// 竞技场刷新对手
type ArenaRefreshOppC2S struct {
	// 是否打开界面
	IsOpenUI         *bool  `protobuf:"varint,1,opt,name=isOpenUI" json:"isOpenUI,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ArenaRefreshOppC2S) Reset()                    { *m = ArenaRefreshOppC2S{} }
func (m *ArenaRefreshOppC2S) String() string            { return proto.CompactTextString(m) }
func (*ArenaRefreshOppC2S) ProtoMessage()               {}
func (*ArenaRefreshOppC2S) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{20} }

func (m *ArenaRefreshOppC2S) GetIsOpenUI() bool {
	if m != nil && m.IsOpenUI != nil {
		return *m.IsOpenUI
	}
	return false
}

// 竞技场刷新对手
type ArenaRefreshOppS2C struct {
	ArenaRankItemList []*ArenaRankingItemDetail `protobuf:"bytes,1,rep,name=arenaRankItemList" json:"arenaRankItemList,omitempty"`
	XXX_unrecognized  []byte                    `json:"-"`
}

func (m *ArenaRefreshOppS2C) Reset()                    { *m = ArenaRefreshOppS2C{} }
func (m *ArenaRefreshOppS2C) String() string            { return proto.CompactTextString(m) }
func (*ArenaRefreshOppS2C) ProtoMessage()               {}
func (*ArenaRefreshOppS2C) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{21} }

func (m *ArenaRefreshOppS2C) GetArenaRankItemList() []*ArenaRankingItemDetail {
	if m != nil {
		return m.ArenaRankItemList
	}
	return nil
}

// 竞技场领取排名突破奖励
type ArenaGetRankingBreakAwardC2S struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *ArenaGetRankingBreakAwardC2S) Reset()                    { *m = ArenaGetRankingBreakAwardC2S{} }
func (m *ArenaGetRankingBreakAwardC2S) String() string            { return proto.CompactTextString(m) }
func (*ArenaGetRankingBreakAwardC2S) ProtoMessage()               {}
func (*ArenaGetRankingBreakAwardC2S) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{22} }

// 竞技场领取排名突破奖励
type ArenaGetRankingBreakAwardS2C struct {
	BeginRanking     *int32 `protobuf:"varint,1,opt,name=beginRanking" json:"beginRanking,omitempty"`
	EndRanking       *int32 `protobuf:"varint,2,opt,name=endRanking" json:"endRanking,omitempty"`
	DiamondNum       *int32 `protobuf:"varint,3,opt,name=diamondNum" json:"diamondNum,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ArenaGetRankingBreakAwardS2C) Reset()                    { *m = ArenaGetRankingBreakAwardS2C{} }
func (m *ArenaGetRankingBreakAwardS2C) String() string            { return proto.CompactTextString(m) }
func (*ArenaGetRankingBreakAwardS2C) ProtoMessage()               {}
func (*ArenaGetRankingBreakAwardS2C) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{23} }

func (m *ArenaGetRankingBreakAwardS2C) GetBeginRanking() int32 {
	if m != nil && m.BeginRanking != nil {
		return *m.BeginRanking
	}
	return 0
}

func (m *ArenaGetRankingBreakAwardS2C) GetEndRanking() int32 {
	if m != nil && m.EndRanking != nil {
		return *m.EndRanking
	}
	return 0
}

func (m *ArenaGetRankingBreakAwardS2C) GetDiamondNum() int32 {
	if m != nil && m.DiamondNum != nil {
		return *m.DiamondNum
	}
	return 0
}

// 竞技场领取任务奖励
type ArenaGetTaskAwardC2S struct {
	CfgId            *int32 `protobuf:"varint,1,opt,name=cfgId" json:"cfgId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ArenaGetTaskAwardC2S) Reset()                    { *m = ArenaGetTaskAwardC2S{} }
func (m *ArenaGetTaskAwardC2S) String() string            { return proto.CompactTextString(m) }
func (*ArenaGetTaskAwardC2S) ProtoMessage()               {}
func (*ArenaGetTaskAwardC2S) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{24} }

func (m *ArenaGetTaskAwardC2S) GetCfgId() int32 {
	if m != nil && m.CfgId != nil {
		return *m.CfgId
	}
	return 0
}

// 竞技场领取任务奖励
type ArenaGetTaskAwardS2C struct {
	CfgId            *int32 `protobuf:"varint,1,opt,name=cfgId" json:"cfgId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ArenaGetTaskAwardS2C) Reset()                    { *m = ArenaGetTaskAwardS2C{} }
func (m *ArenaGetTaskAwardS2C) String() string            { return proto.CompactTextString(m) }
func (*ArenaGetTaskAwardS2C) ProtoMessage()               {}
func (*ArenaGetTaskAwardS2C) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{25} }

func (m *ArenaGetTaskAwardS2C) GetCfgId() int32 {
	if m != nil && m.CfgId != nil {
		return *m.CfgId
	}
	return 0
}

// 竞技场翻牌
type ArenaFlopC2S struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *ArenaFlopC2S) Reset()                    { *m = ArenaFlopC2S{} }
func (m *ArenaFlopC2S) String() string            { return proto.CompactTextString(m) }
func (*ArenaFlopC2S) ProtoMessage()               {}
func (*ArenaFlopC2S) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{26} }

// 竞技场翻牌
type ArenaFlopS2C struct {
	RewardList       []*ItemVaryConfigList `protobuf:"bytes,1,rep,name=rewardList" json:"rewardList,omitempty"`
	RewardIndex      *int32                `protobuf:"varint,2,opt,name=rewardIndex" json:"rewardIndex,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *ArenaFlopS2C) Reset()                    { *m = ArenaFlopS2C{} }
func (m *ArenaFlopS2C) String() string            { return proto.CompactTextString(m) }
func (*ArenaFlopS2C) ProtoMessage()               {}
func (*ArenaFlopS2C) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{27} }

func (m *ArenaFlopS2C) GetRewardList() []*ItemVaryConfigList {
	if m != nil {
		return m.RewardList
	}
	return nil
}

func (m *ArenaFlopS2C) GetRewardIndex() int32 {
	if m != nil && m.RewardIndex != nil {
		return *m.RewardIndex
	}
	return 0
}

// 竞技场：获取排行榜数据
type ArenaGetRankC2S struct {
	Start            *int32 `protobuf:"varint,1,opt,name=start" json:"start,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ArenaGetRankC2S) Reset()                    { *m = ArenaGetRankC2S{} }
func (m *ArenaGetRankC2S) String() string            { return proto.CompactTextString(m) }
func (*ArenaGetRankC2S) ProtoMessage()               {}
func (*ArenaGetRankC2S) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{28} }

func (m *ArenaGetRankC2S) GetStart() int32 {
	if m != nil && m.Start != nil {
		return *m.Start
	}
	return 0
}

// 竞技场：获取排行榜数据
type ArenaGetRankS2C struct {
	ArenaRankItems   []*ArenaRankingItemDetail `protobuf:"bytes,1,rep,name=arenaRankItems" json:"arenaRankItems,omitempty"`
	Self             *ArenaRankingItemDetail   `protobuf:"bytes,2,opt,name=self" json:"self,omitempty"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *ArenaGetRankS2C) Reset()                    { *m = ArenaGetRankS2C{} }
func (m *ArenaGetRankS2C) String() string            { return proto.CompactTextString(m) }
func (*ArenaGetRankS2C) ProtoMessage()               {}
func (*ArenaGetRankS2C) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{29} }

func (m *ArenaGetRankS2C) GetArenaRankItems() []*ArenaRankingItemDetail {
	if m != nil {
		return m.ArenaRankItems
	}
	return nil
}

func (m *ArenaGetRankS2C) GetSelf() *ArenaRankingItemDetail {
	if m != nil {
		return m.Self
	}
	return nil
}

// 竞技场每日刷新
type ArenaRefreshS2C struct {
	NextRefreshTime  *int64 `protobuf:"varint,1,opt,name=nextRefreshTime" json:"nextRefreshTime,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ArenaRefreshS2C) Reset()                    { *m = ArenaRefreshS2C{} }
func (m *ArenaRefreshS2C) String() string            { return proto.CompactTextString(m) }
func (*ArenaRefreshS2C) ProtoMessage()               {}
func (*ArenaRefreshS2C) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{30} }

func (m *ArenaRefreshS2C) GetNextRefreshTime() int64 {
	if m != nil && m.NextRefreshTime != nil {
		return *m.NextRefreshTime
	}
	return 0
}

// 登录发送竞技场数据
type SendArenaDataS2C struct {
	Data             *ArenaData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *SendArenaDataS2C) Reset()                    { *m = SendArenaDataS2C{} }
func (m *SendArenaDataS2C) String() string            { return proto.CompactTextString(m) }
func (*SendArenaDataS2C) ProtoMessage()               {}
func (*SendArenaDataS2C) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{31} }

func (m *SendArenaDataS2C) GetData() *ArenaData {
	if m != nil {
		return m.Data
	}
	return nil
}

// 获取竞技场挑战历史信息列表
type GetArenaChallengeHistoryC2S struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *GetArenaChallengeHistoryC2S) Reset()                    { *m = GetArenaChallengeHistoryC2S{} }
func (m *GetArenaChallengeHistoryC2S) String() string            { return proto.CompactTextString(m) }
func (*GetArenaChallengeHistoryC2S) ProtoMessage()               {}
func (*GetArenaChallengeHistoryC2S) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{32} }

// 获取竞技场挑战历史信息列表
type GetArenaChallengeHistoryS2C struct {
	HistoryList      []*ArenaFightRecord `protobuf:"bytes,1,rep,name=historyList" json:"historyList,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *GetArenaChallengeHistoryS2C) Reset()                    { *m = GetArenaChallengeHistoryS2C{} }
func (m *GetArenaChallengeHistoryS2C) String() string            { return proto.CompactTextString(m) }
func (*GetArenaChallengeHistoryS2C) ProtoMessage()               {}
func (*GetArenaChallengeHistoryS2C) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{33} }

func (m *GetArenaChallengeHistoryS2C) GetHistoryList() []*ArenaFightRecord {
	if m != nil {
		return m.HistoryList
	}
	return nil
}

// 领取竞技场战斗奖励
type GetArenaFightRewardC2S struct {
	// 回放id
	ReplayId         *int64 `protobuf:"varint,1,opt,name=replayId" json:"replayId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GetArenaFightRewardC2S) Reset()                    { *m = GetArenaFightRewardC2S{} }
func (m *GetArenaFightRewardC2S) String() string            { return proto.CompactTextString(m) }
func (*GetArenaFightRewardC2S) ProtoMessage()               {}
func (*GetArenaFightRewardC2S) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{34} }

func (m *GetArenaFightRewardC2S) GetReplayId() int64 {
	if m != nil && m.ReplayId != nil {
		return *m.ReplayId
	}
	return 0
}

// 领取竞技场战斗奖励
type GetArenaFightRewardS2C struct {
	Reward              []*ItemVaryConfig `protobuf:"bytes,3,rep,name=reward" json:"reward,omitempty"`
	TotalChallengeCount *int32            `protobuf:"varint,4,opt,name=totalChallengeCount" json:"totalChallengeCount,omitempty"`
	XXX_unrecognized    []byte            `json:"-"`
}

func (m *GetArenaFightRewardS2C) Reset()                    { *m = GetArenaFightRewardS2C{} }
func (m *GetArenaFightRewardS2C) String() string            { return proto.CompactTextString(m) }
func (*GetArenaFightRewardS2C) ProtoMessage()               {}
func (*GetArenaFightRewardS2C) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{35} }

func (m *GetArenaFightRewardS2C) GetReward() []*ItemVaryConfig {
	if m != nil {
		return m.Reward
	}
	return nil
}

func (m *GetArenaFightRewardS2C) GetTotalChallengeCount() int32 {
	if m != nil && m.TotalChallengeCount != nil {
		return *m.TotalChallengeCount
	}
	return 0
}

// 同步竞技场排名
type SyncArenaRankingS2C struct {
	CurrentRanking    *int32 `protobuf:"varint,1,opt,name=currentRanking" json:"currentRanking,omitempty"`
	HistoryTopRanking *int32 `protobuf:"varint,2,opt,name=historyTopRanking" json:"historyTopRanking,omitempty"`
	XXX_unrecognized  []byte `json:"-"`
}

func (m *SyncArenaRankingS2C) Reset()                    { *m = SyncArenaRankingS2C{} }
func (m *SyncArenaRankingS2C) String() string            { return proto.CompactTextString(m) }
func (*SyncArenaRankingS2C) ProtoMessage()               {}
func (*SyncArenaRankingS2C) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{36} }

func (m *SyncArenaRankingS2C) GetCurrentRanking() int32 {
	if m != nil && m.CurrentRanking != nil {
		return *m.CurrentRanking
	}
	return 0
}

func (m *SyncArenaRankingS2C) GetHistoryTopRanking() int32 {
	if m != nil && m.HistoryTopRanking != nil {
		return *m.HistoryTopRanking
	}
	return 0
}

// 推送竞技场任务
type PushNewArenaTaskS2C struct {
	TaskItems        []*TaskItem `protobuf:"bytes,1,rep,name=taskItems" json:"taskItems,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *PushNewArenaTaskS2C) Reset()                    { *m = PushNewArenaTaskS2C{} }
func (m *PushNewArenaTaskS2C) String() string            { return proto.CompactTextString(m) }
func (*PushNewArenaTaskS2C) ProtoMessage()               {}
func (*PushNewArenaTaskS2C) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{37} }

func (m *PushNewArenaTaskS2C) GetTaskItems() []*TaskItem {
	if m != nil {
		return m.TaskItems
	}
	return nil
}

// 获取竞技场对手阵型
type GetArenaOppSquadC2S struct {
	Gid              *int32 `protobuf:"varint,1,opt,name=gid" json:"gid,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GetArenaOppSquadC2S) Reset()                    { *m = GetArenaOppSquadC2S{} }
func (m *GetArenaOppSquadC2S) String() string            { return proto.CompactTextString(m) }
func (*GetArenaOppSquadC2S) ProtoMessage()               {}
func (*GetArenaOppSquadC2S) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{38} }

func (m *GetArenaOppSquadC2S) GetGid() int32 {
	if m != nil && m.Gid != nil {
		return *m.Gid
	}
	return 0
}

// 获取竞技场对手阵型
type GetArenaOppSquadS2C struct {
	// 阵型
	Detail           *ArenaRankingItemDetail `protobuf:"bytes,2,opt,name=detail" json:"detail,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *GetArenaOppSquadS2C) Reset()                    { *m = GetArenaOppSquadS2C{} }
func (m *GetArenaOppSquadS2C) String() string            { return proto.CompactTextString(m) }
func (*GetArenaOppSquadS2C) ProtoMessage()               {}
func (*GetArenaOppSquadS2C) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{39} }

func (m *GetArenaOppSquadS2C) GetDetail() *ArenaRankingItemDetail {
	if m != nil {
		return m.Detail
	}
	return nil
}

func init() {
	proto.RegisterType((*ArenaRankItem)(nil), "ArenaRankItem")
	proto.RegisterType((*ArenaData)(nil), "ArenaData")
	proto.RegisterType((*ArenaRankingItemDetail)(nil), "ArenaRankingItemDetail")
	proto.RegisterType((*ArenaFightRecord)(nil), "ArenaFightRecord")
	proto.RegisterType((*ArenaRobotTeamInfo)(nil), "ArenaRobotTeamInfo")
	proto.RegisterType((*ArenaRobotBallerInfo)(nil), "ArenaRobotBallerInfo")
	proto.RegisterType((*ArenaRankInfo)(nil), "ArenaRankInfo")
	proto.RegisterType((*GetArenaChallengeInfoResp)(nil), "GetArenaChallengeInfoResp")
	proto.RegisterType((*SendArenaChallengeResultReq)(nil), "SendArenaChallengeResultReq")
	proto.RegisterType((*GetArenaRankingReq)(nil), "GetArenaRankingReq")
	proto.RegisterType((*GetArenaRankingResp)(nil), "GetArenaRankingResp")
	proto.RegisterType((*GMChangeArenaRankingReq)(nil), "GMChangeArenaRankingReq")
	proto.RegisterType((*ArenaChangeGamerNameReq)(nil), "ArenaChangeGamerNameReq")
	proto.RegisterType((*ArenaChangeGamerLvReq)(nil), "ArenaChangeGamerLvReq")
	proto.RegisterType((*ArenaChallengeC2S)(nil), "ArenaChallengeC2S")
	proto.RegisterType((*ArenaChallengeS2C)(nil), "ArenaChallengeS2C")
	proto.RegisterType((*ArenaSweepC2S)(nil), "ArenaSweepC2S")
	proto.RegisterType((*ArenaSweepS2C)(nil), "ArenaSweepS2C")
	proto.RegisterType((*ArenaBuyChallengeCountC2S)(nil), "ArenaBuyChallengeCountC2S")
	proto.RegisterType((*ArenaBuyChallengeCountS2C)(nil), "ArenaBuyChallengeCountS2C")
	proto.RegisterType((*ArenaRefreshOppC2S)(nil), "ArenaRefreshOppC2S")
	proto.RegisterType((*ArenaRefreshOppS2C)(nil), "ArenaRefreshOppS2C")
	proto.RegisterType((*ArenaGetRankingBreakAwardC2S)(nil), "ArenaGetRankingBreakAwardC2S")
	proto.RegisterType((*ArenaGetRankingBreakAwardS2C)(nil), "ArenaGetRankingBreakAwardS2C")
	proto.RegisterType((*ArenaGetTaskAwardC2S)(nil), "ArenaGetTaskAwardC2S")
	proto.RegisterType((*ArenaGetTaskAwardS2C)(nil), "ArenaGetTaskAwardS2C")
	proto.RegisterType((*ArenaFlopC2S)(nil), "ArenaFlopC2S")
	proto.RegisterType((*ArenaFlopS2C)(nil), "ArenaFlopS2C")
	proto.RegisterType((*ArenaGetRankC2S)(nil), "ArenaGetRankC2S")
	proto.RegisterType((*ArenaGetRankS2C)(nil), "ArenaGetRankS2C")
	proto.RegisterType((*ArenaRefreshS2C)(nil), "ArenaRefreshS2C")
	proto.RegisterType((*SendArenaDataS2C)(nil), "SendArenaDataS2C")
	proto.RegisterType((*GetArenaChallengeHistoryC2S)(nil), "GetArenaChallengeHistoryC2S")
	proto.RegisterType((*GetArenaChallengeHistoryS2C)(nil), "GetArenaChallengeHistoryS2C")
	proto.RegisterType((*GetArenaFightRewardC2S)(nil), "GetArenaFightRewardC2S")
	proto.RegisterType((*GetArenaFightRewardS2C)(nil), "GetArenaFightRewardS2C")
	proto.RegisterType((*SyncArenaRankingS2C)(nil), "SyncArenaRankingS2C")
	proto.RegisterType((*PushNewArenaTaskS2C)(nil), "PushNewArenaTaskS2C")
	proto.RegisterType((*GetArenaOppSquadC2S)(nil), "GetArenaOppSquadC2S")
	proto.RegisterType((*GetArenaOppSquadS2C)(nil), "GetArenaOppSquadS2C")
	proto.RegisterEnum("ArenaChallengeC2S_MsgID", ArenaChallengeC2S_MsgID_name, ArenaChallengeC2S_MsgID_value)
	proto.RegisterEnum("ArenaChallengeS2C_MsgID", ArenaChallengeS2C_MsgID_name, ArenaChallengeS2C_MsgID_value)
	proto.RegisterEnum("ArenaSweepC2S_MsgID", ArenaSweepC2S_MsgID_name, ArenaSweepC2S_MsgID_value)
	proto.RegisterEnum("ArenaSweepS2C_MsgID", ArenaSweepS2C_MsgID_name, ArenaSweepS2C_MsgID_value)
	proto.RegisterEnum("ArenaBuyChallengeCountC2S_MsgID", ArenaBuyChallengeCountC2S_MsgID_name, ArenaBuyChallengeCountC2S_MsgID_value)
	proto.RegisterEnum("ArenaBuyChallengeCountS2C_MsgID", ArenaBuyChallengeCountS2C_MsgID_name, ArenaBuyChallengeCountS2C_MsgID_value)
	proto.RegisterEnum("ArenaRefreshOppC2S_MsgID", ArenaRefreshOppC2S_MsgID_name, ArenaRefreshOppC2S_MsgID_value)
	proto.RegisterEnum("ArenaRefreshOppS2C_MsgID", ArenaRefreshOppS2C_MsgID_name, ArenaRefreshOppS2C_MsgID_value)
	proto.RegisterEnum("ArenaGetRankingBreakAwardC2S_MsgID", ArenaGetRankingBreakAwardC2S_MsgID_name, ArenaGetRankingBreakAwardC2S_MsgID_value)
	proto.RegisterEnum("ArenaGetRankingBreakAwardS2C_MsgID", ArenaGetRankingBreakAwardS2C_MsgID_name, ArenaGetRankingBreakAwardS2C_MsgID_value)
	proto.RegisterEnum("ArenaGetTaskAwardC2S_MsgID", ArenaGetTaskAwardC2S_MsgID_name, ArenaGetTaskAwardC2S_MsgID_value)
	proto.RegisterEnum("ArenaGetTaskAwardS2C_MsgID", ArenaGetTaskAwardS2C_MsgID_name, ArenaGetTaskAwardS2C_MsgID_value)
	proto.RegisterEnum("ArenaFlopC2S_MsgID", ArenaFlopC2S_MsgID_name, ArenaFlopC2S_MsgID_value)
	proto.RegisterEnum("ArenaFlopS2C_MsgID", ArenaFlopS2C_MsgID_name, ArenaFlopS2C_MsgID_value)
	proto.RegisterEnum("ArenaGetRankC2S_MsgID", ArenaGetRankC2S_MsgID_name, ArenaGetRankC2S_MsgID_value)
	proto.RegisterEnum("ArenaGetRankS2C_MsgID", ArenaGetRankS2C_MsgID_name, ArenaGetRankS2C_MsgID_value)
	proto.RegisterEnum("ArenaRefreshS2C_MsgID", ArenaRefreshS2C_MsgID_name, ArenaRefreshS2C_MsgID_value)
	proto.RegisterEnum("SendArenaDataS2C_MsgID", SendArenaDataS2C_MsgID_name, SendArenaDataS2C_MsgID_value)
	proto.RegisterEnum("GetArenaChallengeHistoryC2S_MsgID", GetArenaChallengeHistoryC2S_MsgID_name, GetArenaChallengeHistoryC2S_MsgID_value)
	proto.RegisterEnum("GetArenaChallengeHistoryS2C_MsgID", GetArenaChallengeHistoryS2C_MsgID_name, GetArenaChallengeHistoryS2C_MsgID_value)
	proto.RegisterEnum("GetArenaFightRewardC2S_MsgID", GetArenaFightRewardC2S_MsgID_name, GetArenaFightRewardC2S_MsgID_value)
	proto.RegisterEnum("GetArenaFightRewardS2C_MsgID", GetArenaFightRewardS2C_MsgID_name, GetArenaFightRewardS2C_MsgID_value)
	proto.RegisterEnum("SyncArenaRankingS2C_MsgID", SyncArenaRankingS2C_MsgID_name, SyncArenaRankingS2C_MsgID_value)
	proto.RegisterEnum("PushNewArenaTaskS2C_MsgID", PushNewArenaTaskS2C_MsgID_name, PushNewArenaTaskS2C_MsgID_value)
	proto.RegisterEnum("GetArenaOppSquadC2S_MsgID", GetArenaOppSquadC2S_MsgID_name, GetArenaOppSquadC2S_MsgID_value)
	proto.RegisterEnum("GetArenaOppSquadS2C_MsgID", GetArenaOppSquadS2C_MsgID_name, GetArenaOppSquadS2C_MsgID_value)
}

func init() { proto.RegisterFile("arena.proto", fileDescriptor4) }

var fileDescriptor4 = []byte{
	// 1310 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x57, 0xdf, 0x6f, 0x1b, 0xc5,
	0x13, 0x97, 0xe3, 0xda, 0x89, 0xc7, 0x69, 0xe2, 0x9c, 0xd3, 0xc4, 0xfd, 0xe6, 0xf4, 0x6d, 0x75,
	0x94, 0xb6, 0xe2, 0xc1, 0x50, 0x53, 0x21, 0x10, 0x3c, 0xb4, 0x4e, 0xd4, 0x60, 0x29, 0x49, 0x83,
	0x1d, 0xfa, 0x82, 0x84, 0xb4, 0xf1, 0xad, 0xed, 0x53, 0xce, 0x77, 0xd7, 0xbb, 0xb5, 0x53, 0xf3,
	0xc2, 0x6f, 0x28, 0x50, 0xe8, 0x23, 0x7f, 0x02, 0x48, 0xfc, 0x93, 0xcc, 0xec, 0xee, 0xc5, 0x67,
	0xfb, 0x2e, 0x01, 0x5e, 0xac, 0xbd, 0xdd, 0x9d, 0x99, 0xcf, 0xcc, 0x7c, 0x66, 0x66, 0x0d, 0x65,
	0x16, 0x72, 0x8f, 0xd5, 0x83, 0xd0, 0x17, 0xfe, 0xff, 0x40, 0xb0, 0xe8, 0x2c, 0x5e, 0x77, 0x7d,
	0xaf, 0xa7, 0xd7, 0xa5, 0x60, 0x1c, 0xe8, 0x65, 0xb9, 0xe7, 0xf4, 0x07, 0x42, 0x7d, 0x58, 0xbf,
	0xe7, 0xe0, 0xfa, 0x63, 0x92, 0x6f, 0x33, 0xef, 0xac, 0x25, 0xf8, 0xd0, 0x28, 0x43, 0xbe, 0xef,
	0xd8, 0xb5, 0xdc, 0xed, 0xdc, 0xfd, 0x82, 0xb1, 0x01, 0xa5, 0x3e, 0x1b, 0xf2, 0xf0, 0x08, 0x7f,
	0x6a, 0x4b, 0xb8, 0x55, 0x32, 0xaa, 0x50, 0x3e, 0x65, 0x42, 0xb8, 0xfc, 0xd8, 0x3f, 0xe7, 0x61,
	0xed, 0x9a, 0xbc, 0xb7, 0x0e, 0xcb, 0x21, 0x2a, 0x70, 0xbc, 0x7e, 0xad, 0x10, 0x6f, 0x38, 0x51,
	0xdb, 0x3f, 0xf5, 0x45, 0xad, 0x88, 0x1b, 0x2b, 0x46, 0x05, 0x56, 0x02, 0x97, 0x4d, 0x78, 0xd8,
	0xb2, 0x6b, 0x2b, 0xf2, 0xca, 0x1a, 0x14, 0x05, 0x67, 0x43, 0xfc, 0x2e, 0xc9, 0xef, 0xeb, 0x50,
	0x70, 0xf9, 0x98, 0xbb, 0x35, 0xa0, 0x4f, 0xeb, 0xcf, 0x25, 0x28, 0x49, 0x64, 0x7b, 0x4c, 0x30,
	0xe3, 0x16, 0xac, 0x92, 0x67, 0x84, 0xf0, 0xc0, 0x89, 0x04, 0x62, 0xc9, 0xdf, 0x2f, 0x37, 0x4a,
	0xf5, 0x13, 0xbd, 0x69, 0xec, 0x40, 0x55, 0xf8, 0x36, 0x9b, 0xec, 0x0e, 0x98, 0xeb, 0x72, 0xaf,
	0xcf, 0x77, 0xfd, 0x91, 0x27, 0x6a, 0x79, 0xa9, 0xfa, 0xff, 0xb0, 0x25, 0x0f, 0x9b, 0xa3, 0xf9,
	0x73, 0x05, 0x7f, 0x1b, 0xd6, 0x3d, 0xfe, 0x42, 0xb4, 0x79, 0x2f, 0xe4, 0xd1, 0xe0, 0xc4, 0x41,
	0x67, 0xc9, 0x8d, 0x3c, 0xb9, 0xd1, 0x65, 0xde, 0x13, 0xd7, 0x0f, 0xb4, 0x1b, 0x16, 0x94, 0x5c,
	0x16, 0x89, 0xc7, 0xe7, 0x2c, 0x24, 0x3f, 0x08, 0xc4, 0x7a, 0x9d, 0x00, 0x3c, 0x63, 0xe1, 0x64,
	0x17, 0xe3, 0xed, 0xf4, 0x8d, 0x9b, 0xb0, 0x31, 0x40, 0x8c, 0x7e, 0x38, 0x39, 0xf1, 0x83, 0xb6,
	0x0e, 0x8b, 0xf2, 0xf1, 0x0d, 0xd8, 0x21, 0xf1, 0x8f, 0xa7, 0xc7, 0x9c, 0x34, 0xc5, 0x97, 0xa4,
	0xe7, 0x86, 0x01, 0xe0, 0x07, 0xc1, 0xbe, 0x63, 0x4b, 0x4f, 0xcb, 0x68, 0xa4, 0xa0, 0xdc, 0x13,
	0xcc, 0x9d, 0x83, 0xbf, 0x2a, 0x43, 0xf5, 0x55, 0x0e, 0xb6, 0x2e, 0x92, 0x88, 0x7a, 0x08, 0xcf,
	0x1e, 0x17, 0xcc, 0x71, 0x8d, 0xdb, 0xb0, 0x12, 0xea, 0xcc, 0xca, 0x94, 0x96, 0x1b, 0x6b, 0xf5,
	0xd9, 0x7c, 0xdf, 0x81, 0x52, 0xf4, 0x7c, 0xc4, 0xec, 0x96, 0xd7, 0xf3, 0x65, 0x8a, 0xcb, 0x8d,
	0x8d, 0xfa, 0xf1, 0x38, 0x68, 0xfb, 0x2e, 0xef, 0xc4, 0x07, 0xc9, 0x04, 0xe7, 0xe3, 0x6c, 0x45,
	0x5d, 0x3f, 0xe4, 0x2a, 0x82, 0xd6, 0x43, 0xa8, 0x48, 0xb5, 0x4f, 0x88, 0x5b, 0x6d, 0x8e, 0x27,
	0x36, 0xda, 0x2e, 0x86, 0x72, 0xa5, 0x2d, 0x57, 0xea, 0xf2, 0x94, 0xf2, 0xa9, 0x6e, 0x58, 0x7f,
	0xe4, 0xc0, 0x50, 0x68, 0x88, 0x29, 0x27, 0xc4, 0x86, 0xd8, 0x18, 0x6d, 0xb4, 0x62, 0x1a, 0xde,
	0x85, 0xe5, 0x8e, 0x60, 0xa1, 0x40, 0xbe, 0xa9, 0xc4, 0xdf, 0xa8, 0x4f, 0xc5, 0x9a, 0x14, 0x91,
	0x50, 0x0a, 0xde, 0x81, 0x42, 0x93, 0x7b, 0xdd, 0x01, 0x62, 0xbc, 0xe4, 0x16, 0x32, 0xb8, 0x29,
	0x19, 0xfc, 0x8c, 0xb9, 0x23, 0xed, 0x00, 0xf9, 0x73, 0x14, 0x74, 0x0f, 0xc6, 0x9a, 0xbf, 0x48,
	0x4e, 0x8c, 0x74, 0x0f, 0x11, 0x14, 0xa5, 0x7f, 0x5f, 0xc0, 0x66, 0xaa, 0x2e, 0x2c, 0x10, 0xaf,
	0xe5, 0xd9, 0xfc, 0x45, 0xe0, 0x47, 0x1a, 0x2c, 0x6a, 0xf2, 0x82, 0x6e, 0x6b, 0x4f, 0x06, 0x53,
	0x56, 0x02, 0x46, 0xd1, 0x75, 0xc4, 0x64, 0x1a, 0x39, 0xc5, 0x73, 0x65, 0x78, 0x15, 0xae, 0x45,
	0xe8, 0x9b, 0xb6, 0x8b, 0xb9, 0x47, 0x22, 0x86, 0xec, 0xb1, 0x10, 0x61, 0x54, 0x5b, 0x96, 0xb6,
	0xdf, 0x4a, 0x96, 0x28, 0x19, 0x9d, 0x29, 0x51, 0x94, 0xa7, 0xcc, 0x28, 0x6b, 0x96, 0x07, 0x37,
	0xf7, 0xb9, 0x90, 0xd7, 0x2f, 0xa8, 0x42, 0x32, 0x6d, 0x1e, 0x05, 0xc6, 0x7d, 0x58, 0x46, 0x62,
	0xc9, 0x44, 0xab, 0x8c, 0x6c, 0xd7, 0x33, 0x68, 0x73, 0x0f, 0x8a, 0xc3, 0x49, 0x82, 0x11, 0x59,
	0x17, 0xad, 0xbf, 0x72, 0xb0, 0xd3, 0xe1, 0x9e, 0x3d, 0x6b, 0x11, 0xad, 0x8d, 0x5c, 0xa4, 0xc1,
	0x73, 0xe3, 0x01, 0x54, 0x30, 0xd4, 0xac, 0x7b, 0xc6, 0xc3, 0x38, 0xbd, 0x57, 0xd9, 0x46, 0x11,
	0x9b, 0xf7, 0x50, 0x67, 0x42, 0xe4, 0x72, 0x14, 0xc8, 0x0f, 0xd5, 0x04, 0x15, 0xad, 0x64, 0x9c,
	0x89, 0xc5, 0xf3, 0x8c, 0xb4, 0x36, 0xc1, 0x88, 0xa3, 0xa3, 0x95, 0x20, 0x46, 0xeb, 0x2e, 0x54,
	0x17, 0x76, 0x31, 0x5a, 0x09, 0xca, 0xe7, 0x74, 0x1e, 0xb6, 0xf7, 0x0f, 0xd1, 0x47, 0x74, 0x70,
	0x4e, 0xc5, 0xe2, 0xdd, 0x26, 0x6c, 0xc7, 0x21, 0xc1, 0xeb, 0xfb, 0x71, 0x0f, 0xa5, 0xbb, 0xf3,
	0xd9, 0xf3, 0xa6, 0xbd, 0x15, 0xbf, 0x1c, 0x6c, 0xda, 0x8a, 0x28, 0xd6, 0x3b, 0x70, 0x63, 0x5e,
	0xc7, 0xc1, 0x78, 0x41, 0x03, 0xc0, 0x92, 0x3b, 0xd6, 0xd9, 0x3f, 0x84, 0x8d, 0xd9, 0x44, 0xec,
	0x36, 0x3a, 0x44, 0x65, 0xd5, 0x4e, 0x34, 0xff, 0x54, 0x7b, 0x89, 0x5b, 0x8e, 0x2a, 0xdf, 0x4d,
	0x28, 0x1c, 0x46, 0xfd, 0xd6, 0x1e, 0xaa, 0x2e, 0x72, 0xb9, 0xaa, 0x7c, 0x6d, 0x5a, 0x07, 0xf3,
	0xea, 0x3a, 0x8d, 0x5d, 0x6a, 0xe4, 0x21, 0xa7, 0x56, 0xae, 0xab, 0x73, 0xa6, 0x49, 0x12, 0x8c,
	0x95, 0x0c, 0x6d, 0x1f, 0x68, 0x1a, 0x77, 0xce, 0x39, 0x0f, 0x08, 0x18, 0x02, 0x89, 0xe4, 0x5a,
	0xb6, 0xb2, 0x5c, 0x16, 0x90, 0x6f, 0x4c, 0xeb, 0x65, 0x2e, 0x29, 0x4b, 0x28, 0xee, 0x01, 0x84,
	0xb2, 0x75, 0xca, 0x1e, 0x99, 0x93, 0xe5, 0x5e, 0x9d, 0x6b, 0xc4, 0x74, 0x94, 0x35, 0x17, 0x54,
	0x6d, 0x66, 0x74, 0xd5, 0xfc, 0x25, 0x50, 0x1e, 0xc0, 0x4d, 0x89, 0x64, 0x61, 0x94, 0xa0, 0x47,
	0x69, 0x22, 0xdf, 0x9a, 0xd6, 0x27, 0x59, 0x22, 0xe4, 0x48, 0xf6, 0x68, 0xca, 0x0c, 0x08, 0xaa,
	0xfc, 0x28, 0xee, 0x9b, 0x6a, 0x62, 0x3d, 0x0d, 0x64, 0x40, 0x31, 0x35, 0x4e, 0xf4, 0x34, 0xe0,
	0xde, 0xa7, 0x2d, 0x29, 0x9d, 0x9a, 0x89, 0xef, 0x4c, 0xeb, 0xf3, 0x05, 0x69, 0x42, 0xd2, 0x80,
	0x0d, 0x96, 0x9c, 0x0c, 0x89, 0xc8, 0x66, 0x96, 0x7f, 0xba, 0xfe, 0x87, 0x60, 0xca, 0xfb, 0x58,
	0x55, 0x5a, 0xa4, 0x19, 0x72, 0x76, 0x26, 0x87, 0x66, 0x46, 0x98, 0xbe, 0x37, 0xad, 0xf0, 0x12,
	0x29, 0xc2, 0xb7, 0x09, 0xab, 0xa7, 0xbc, 0xef, 0x78, 0xed, 0x64, 0xa1, 0xc9, 0x86, 0xe9, 0x5d,
	0x0c, 0xd0, 0xa5, 0x78, 0xcf, 0x76, 0xd8, 0xd0, 0xf7, 0xec, 0xa3, 0xd1, 0x30, 0x3b, 0x9b, 0x68,
	0xf3, 0x43, 0xdd, 0xd6, 0xd1, 0x26, 0xbd, 0x24, 0x62, 0x84, 0xd4, 0xa3, 0xbb, 0xbd, 0x7e, 0x3c,
	0x7f, 0xd2, 0x84, 0x7f, 0x48, 0x17, 0x26, 0xa0, 0xff, 0x48, 0xf8, 0x0e, 0xac, 0xaa, 0xf6, 0x84,
	0x65, 0x93, 0x11, 0x93, 0x1f, 0x4d, 0xeb, 0x34, 0x71, 0xeb, 0x5f, 0xd1, 0x1e, 0x67, 0x9c, 0xba,
	0x28, 0x87, 0x93, 0x6e, 0x0f, 0xe9, 0x36, 0xde, 0x83, 0xf5, 0x64, 0xdc, 0xb5, 0xfb, 0x34, 0x93,
	0x2e, 0xe1, 0xe0, 0x4b, 0xd3, 0xfa, 0x72, 0x56, 0x8e, 0xe0, 0xbd, 0x0d, 0x6b, 0x33, 0x14, 0x8a,
	0xae, 0xe0, 0x8f, 0xf1, 0x26, 0x0e, 0x3f, 0xee, 0xf6, 0xae, 0x9a, 0x32, 0xe9, 0x00, 0x1e, 0x69,
	0x00, 0x9a, 0xc6, 0x04, 0x20, 0xe5, 0x21, 0x27, 0x7b, 0x54, 0x9a, 0x86, 0x9f, 0x4c, 0xec, 0xd2,
	0x95, 0x8b, 0xe1, 0x45, 0xcf, 0x12, 0x52, 0x51, 0x83, 0x6b, 0x36, 0x2e, 0xf5, 0x94, 0x82, 0xfa,
	0xc5, 0x61, 0x9a, 0x8e, 0x9f, 0x4d, 0xeb, 0x5d, 0xd8, 0x59, 0x98, 0xb8, 0xfa, 0x7d, 0x97, 0x91,
	0xd7, 0x5f, 0x4c, 0xeb, 0xb3, 0x6c, 0x21, 0xc2, 0x80, 0xf3, 0x4c, 0xbf, 0x20, 0x13, 0x79, 0x4e,
	0x9d, 0x67, 0x69, 0xca, 0x1f, 0xc1, 0x56, 0xac, 0x5c, 0x5f, 0x8e, 0x69, 0xbd, 0xd0, 0xbb, 0xd3,
	0x34, 0xbc, 0x32, 0x2d, 0x37, 0x55, 0x03, 0x21, 0xbb, 0x45, 0x6f, 0x3a, 0xf9, 0xf8, 0xcd, 0xa7,
	0x3f, 0x7e, 0x33, 0x5a, 0x6a, 0xe6, 0x98, 0x79, 0x45, 0xed, 0xa8, 0xda, 0x99, 0x78, 0xdd, 0x64,
	0xee, 0xc9, 0xd4, 0x16, 0xac, 0x75, 0x47, 0x21, 0x6e, 0x8a, 0xd9, 0x8a, 0x4f, 0x7d, 0x5e, 0x67,
	0x12, 0xfc, 0x57, 0xd3, 0x6a, 0x41, 0xf5, 0x78, 0x14, 0x0d, 0x8e, 0xf8, 0xb9, 0x34, 0x41, 0xb5,
	0x4a, 0xfa, 0x4d, 0x28, 0xc5, 0x7f, 0x29, 0x62, 0x9e, 0x4e, 0xff, 0x4f, 0xa4, 0xa9, 0xfa, 0xcd,
	0xb4, 0xde, 0x9f, 0x3e, 0x15, 0xa8, 0x6b, 0xd2, 0xf3, 0x98, 0xe2, 0x9a, 0x1c, 0xc8, 0x69, 0x92,
	0xaf, 0x4d, 0xeb, 0x64, 0x51, 0x52, 0x15, 0x74, 0xd1, 0x96, 0x1c, 0xff, 0x0f, 0x25, 0xf0, 0xda,
	0xfc, 0x3b, 0x00, 0x00, 0xff, 0xff, 0xa3, 0x83, 0x70, 0xeb, 0xfc, 0x0d, 0x00, 0x00,
}
