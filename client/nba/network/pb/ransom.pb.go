// Code generated by protoc-gen-go.
// source: ransom.proto
// DO NOT EDIT!

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type SendRansomDataS2C_MsgID int32

const (
	SendRansomDataS2C_eMsgID SendRansomDataS2C_MsgID = 1814
)

var SendRansomDataS2C_MsgID_name = map[int32]string{
	1814: "eMsgID",
}
var SendRansomDataS2C_MsgID_value = map[string]int32{
	"eMsgID": 1814,
}

func (x SendRansomDataS2C_MsgID) Enum() *SendRansomDataS2C_MsgID {
	p := new(SendRansomDataS2C_MsgID)
	*p = x
	return p
}
func (x SendRansomDataS2C_MsgID) String() string {
	return proto.EnumName(SendRansomDataS2C_MsgID_name, int32(x))
}
func (x *SendRansomDataS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SendRansomDataS2C_MsgID_value, data, "SendRansomDataS2C_MsgID")
	if err != nil {
		return err
	}
	*x = SendRansomDataS2C_MsgID(value)
	return nil
}
func (SendRansomDataS2C_MsgID) EnumDescriptor() ([]byte, []int) { return fileDescriptor56, []int{3, 0} }

type RansomGetAwardC2S_MsgID int32

const (
	RansomGetAwardC2S_eMsgID RansomGetAwardC2S_MsgID = 1815
)

var RansomGetAwardC2S_MsgID_name = map[int32]string{
	1815: "eMsgID",
}
var RansomGetAwardC2S_MsgID_value = map[string]int32{
	"eMsgID": 1815,
}

func (x RansomGetAwardC2S_MsgID) Enum() *RansomGetAwardC2S_MsgID {
	p := new(RansomGetAwardC2S_MsgID)
	*p = x
	return p
}
func (x RansomGetAwardC2S_MsgID) String() string {
	return proto.EnumName(RansomGetAwardC2S_MsgID_name, int32(x))
}
func (x *RansomGetAwardC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RansomGetAwardC2S_MsgID_value, data, "RansomGetAwardC2S_MsgID")
	if err != nil {
		return err
	}
	*x = RansomGetAwardC2S_MsgID(value)
	return nil
}
func (RansomGetAwardC2S_MsgID) EnumDescriptor() ([]byte, []int) { return fileDescriptor56, []int{4, 0} }

type RansomGetAwardS2C_MsgID int32

const (
	RansomGetAwardS2C_eMsgID RansomGetAwardS2C_MsgID = 1815
)

var RansomGetAwardS2C_MsgID_name = map[int32]string{
	1815: "eMsgID",
}
var RansomGetAwardS2C_MsgID_value = map[string]int32{
	"eMsgID": 1815,
}

func (x RansomGetAwardS2C_MsgID) Enum() *RansomGetAwardS2C_MsgID {
	p := new(RansomGetAwardS2C_MsgID)
	*p = x
	return p
}
func (x RansomGetAwardS2C_MsgID) String() string {
	return proto.EnumName(RansomGetAwardS2C_MsgID_name, int32(x))
}
func (x *RansomGetAwardS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RansomGetAwardS2C_MsgID_value, data, "RansomGetAwardS2C_MsgID")
	if err != nil {
		return err
	}
	*x = RansomGetAwardS2C_MsgID(value)
	return nil
}
func (RansomGetAwardS2C_MsgID) EnumDescriptor() ([]byte, []int) { return fileDescriptor56, []int{5, 0} }

// 资源找回 次数
type RansomNum struct {
	// 未挑战次数、精力未领取次数、未完成或未领取的日常任务数量
	UnusedNum *int32 `protobuf:"varint,1,opt,name=unusedNum" json:"unusedNum,omitempty"`
	// 当日的奖励
	Rewards          []*ItemVaryConfig `protobuf:"bytes,2,rep,name=rewards" json:"rewards,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *RansomNum) Reset()                    { *m = RansomNum{} }
func (m *RansomNum) String() string            { return proto.CompactTextString(m) }
func (*RansomNum) ProtoMessage()               {}
func (*RansomNum) Descriptor() ([]byte, []int) { return fileDescriptor56, []int{0} }

func (m *RansomNum) GetUnusedNum() int32 {
	if m != nil && m.UnusedNum != nil {
		return *m.UnusedNum
	}
	return 0
}

func (m *RansomNum) GetRewards() []*ItemVaryConfig {
	if m != nil {
		return m.Rewards
	}
	return nil
}

// 资源找回
type RansomData struct {
	// 类型
	Type *RansomType `protobuf:"varint,1,opt,name=type,enum=RansomType" json:"type,omitempty"`
	// 是否使用了免费找回，使用了免费找回、次日需要清理旧数据
	UseFree *bool `protobuf:"varint,2,opt,name=useFree" json:"useFree,omitempty"`
	// 未挑战次数、精力未领取次数、日常任务玩家经验值(最多14条走配置)
	RansomNum []*RansomNum `protobuf:"bytes,3,rep,name=ransomNum" json:"ransomNum,omitempty"`
	// 是否可以找回
	GetState         *bool  `protobuf:"varint,4,opt,name=getState" json:"getState,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *RansomData) Reset()                    { *m = RansomData{} }
func (m *RansomData) String() string            { return proto.CompactTextString(m) }
func (*RansomData) ProtoMessage()               {}
func (*RansomData) Descriptor() ([]byte, []int) { return fileDescriptor56, []int{1} }

func (m *RansomData) GetType() RansomType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return RansomType_RT_Unknown
}

func (m *RansomData) GetUseFree() bool {
	if m != nil && m.UseFree != nil {
		return *m.UseFree
	}
	return false
}

func (m *RansomData) GetRansomNum() []*RansomNum {
	if m != nil {
		return m.RansomNum
	}
	return nil
}

func (m *RansomData) GetGetState() bool {
	if m != nil && m.GetState != nil {
		return *m.GetState
	}
	return false
}

// 客户端使用的数据结构
type RansomCliData struct {
	// 类型
	Type *RansomType `protobuf:"varint,1,opt,name=type,enum=RansomType" json:"type,omitempty"`
	// 是否使用了免费找回，使用了免费找回、次日需要清理旧数据
	UseFree *bool `protobuf:"varint,2,opt,name=useFree" json:"useFree,omitempty"`
	// 是否可以找回
	GetState *bool `protobuf:"varint,3,opt,name=getState" json:"getState,omitempty"`
	// 累积的次数
	UnusedNum *int32 `protobuf:"varint,4,opt,name=unusedNum" json:"unusedNum,omitempty"`
	// 累积的奖励
	Rewards          []*ItemVaryConfig `protobuf:"bytes,5,rep,name=rewards" json:"rewards,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *RansomCliData) Reset()                    { *m = RansomCliData{} }
func (m *RansomCliData) String() string            { return proto.CompactTextString(m) }
func (*RansomCliData) ProtoMessage()               {}
func (*RansomCliData) Descriptor() ([]byte, []int) { return fileDescriptor56, []int{2} }

func (m *RansomCliData) GetType() RansomType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return RansomType_RT_Unknown
}

func (m *RansomCliData) GetUseFree() bool {
	if m != nil && m.UseFree != nil {
		return *m.UseFree
	}
	return false
}

func (m *RansomCliData) GetGetState() bool {
	if m != nil && m.GetState != nil {
		return *m.GetState
	}
	return false
}

func (m *RansomCliData) GetUnusedNum() int32 {
	if m != nil && m.UnusedNum != nil {
		return *m.UnusedNum
	}
	return 0
}

func (m *RansomCliData) GetRewards() []*ItemVaryConfig {
	if m != nil {
		return m.Rewards
	}
	return nil
}

// 上线同步资源找回数据
type SendRansomDataS2C struct {
	// 资源找回数据
	RansomCliDatas []*RansomCliData `protobuf:"bytes,1,rep,name=ransomCliDatas" json:"ransomCliDatas,omitempty"`
	// 下次刷新时间戳
	NextRefreshTime  *int64 `protobuf:"varint,2,opt,name=nextRefreshTime" json:"nextRefreshTime,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SendRansomDataS2C) Reset()                    { *m = SendRansomDataS2C{} }
func (m *SendRansomDataS2C) String() string            { return proto.CompactTextString(m) }
func (*SendRansomDataS2C) ProtoMessage()               {}
func (*SendRansomDataS2C) Descriptor() ([]byte, []int) { return fileDescriptor56, []int{3} }

func (m *SendRansomDataS2C) GetRansomCliDatas() []*RansomCliData {
	if m != nil {
		return m.RansomCliDatas
	}
	return nil
}

func (m *SendRansomDataS2C) GetNextRefreshTime() int64 {
	if m != nil && m.NextRefreshTime != nil {
		return *m.NextRefreshTime
	}
	return 0
}

// 资源找回、获取奖励
type RansomGetAwardC2S struct {
	// 类型
	Type *RansomType `protobuf:"varint,1,opt,name=type,enum=RansomType" json:"type,omitempty"`
	// 是否使用了免费找回，使用了免费找回、次日需要清理旧数据
	UseFree          *bool  `protobuf:"varint,2,opt,name=useFree" json:"useFree,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *RansomGetAwardC2S) Reset()                    { *m = RansomGetAwardC2S{} }
func (m *RansomGetAwardC2S) String() string            { return proto.CompactTextString(m) }
func (*RansomGetAwardC2S) ProtoMessage()               {}
func (*RansomGetAwardC2S) Descriptor() ([]byte, []int) { return fileDescriptor56, []int{4} }

func (m *RansomGetAwardC2S) GetType() RansomType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return RansomType_RT_Unknown
}

func (m *RansomGetAwardC2S) GetUseFree() bool {
	if m != nil && m.UseFree != nil {
		return *m.UseFree
	}
	return false
}

// 资源找回、获取奖励
type RansomGetAwardS2C struct {
	// 类型
	RansomCliData    *RansomCliData `protobuf:"bytes,1,opt,name=ransomCliData" json:"ransomCliData,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *RansomGetAwardS2C) Reset()                    { *m = RansomGetAwardS2C{} }
func (m *RansomGetAwardS2C) String() string            { return proto.CompactTextString(m) }
func (*RansomGetAwardS2C) ProtoMessage()               {}
func (*RansomGetAwardS2C) Descriptor() ([]byte, []int) { return fileDescriptor56, []int{5} }

func (m *RansomGetAwardS2C) GetRansomCliData() *RansomCliData {
	if m != nil {
		return m.RansomCliData
	}
	return nil
}

func init() {
	proto.RegisterType((*RansomNum)(nil), "RansomNum")
	proto.RegisterType((*RansomData)(nil), "RansomData")
	proto.RegisterType((*RansomCliData)(nil), "RansomCliData")
	proto.RegisterType((*SendRansomDataS2C)(nil), "SendRansomDataS2C")
	proto.RegisterType((*RansomGetAwardC2S)(nil), "RansomGetAwardC2S")
	proto.RegisterType((*RansomGetAwardS2C)(nil), "RansomGetAwardS2C")
	proto.RegisterEnum("SendRansomDataS2C_MsgID", SendRansomDataS2C_MsgID_name, SendRansomDataS2C_MsgID_value)
	proto.RegisterEnum("RansomGetAwardC2S_MsgID", RansomGetAwardC2S_MsgID_name, RansomGetAwardC2S_MsgID_value)
	proto.RegisterEnum("RansomGetAwardS2C_MsgID", RansomGetAwardS2C_MsgID_name, RansomGetAwardS2C_MsgID_value)
}

func init() { proto.RegisterFile("ransom.proto", fileDescriptor56) }

var fileDescriptor56 = []byte{
	// 314 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x8f, 0x51, 0x4f, 0xf2, 0x30,
	0x14, 0x86, 0xb3, 0x6f, 0xf0, 0x01, 0x67, 0x32, 0xa0, 0x31, 0x71, 0x9a, 0x98, 0x90, 0x26, 0x1a,
	0xae, 0x76, 0xb1, 0x5f, 0xa0, 0x19, 0xd1, 0x70, 0xa1, 0x31, 0x0c, 0xbd, 0x6f, 0xd8, 0x61, 0xce,
	0xb8, 0x8d, 0xb4, 0x5d, 0x94, 0x5b, 0x7f, 0x84, 0xfe, 0x5d, 0xbb, 0x56, 0x03, 0xc3, 0xdd, 0x70,
	0xd7, 0xf6, 0xf4, 0x7d, 0xce, 0xfb, 0xc0, 0x11, 0x67, 0xb9, 0x28, 0x32, 0x7f, 0xcd, 0x0b, 0x59,
	0x9c, 0xc1, 0xb2, 0xc8, 0x57, 0x3f, 0x67, 0x27, 0x63, 0x4b, 0x5e, 0x98, 0x0b, 0xbd, 0x82, 0xde,
	0x5c, 0x7f, 0xbc, 0x2f, 0x33, 0x32, 0x82, 0x5e, 0x99, 0x97, 0x02, 0x63, 0x75, 0xf1, 0xac, 0xb1,
	0x35, 0x69, 0x93, 0x31, 0x74, 0x38, 0xbe, 0x31, 0x1e, 0x0b, 0xef, 0xdf, 0xd8, 0x9e, 0x38, 0xc1,
	0xc0, 0x9f, 0x49, 0xcc, 0x9e, 0x18, 0xdf, 0x84, 0x0a, 0x99, 0x26, 0x34, 0x05, 0x30, 0x84, 0x29,
	0x93, 0x8c, 0x9c, 0x42, 0x4b, 0x6e, 0xd6, 0xa8, 0xd3, 0x6e, 0xe0, 0xf8, 0x66, 0xb4, 0x50, 0x4f,
	0x64, 0x00, 0x1d, 0xc5, 0xbe, 0xe1, 0x88, 0x0a, 0x65, 0x4d, 0xba, 0xe4, 0x1c, 0x7a, 0xfc, 0x77,
	0xb7, 0x67, 0x6b, 0x3a, 0xf8, 0xdb, 0x36, 0x43, 0xe8, 0x26, 0x28, 0x23, 0xc9, 0x24, 0x7a, 0xad,
	0x2a, 0x40, 0x3f, 0x2c, 0xe8, 0x9b, 0x79, 0xf8, 0x9a, 0x1e, 0xbc, 0x6e, 0x97, 0x67, 0xeb, 0x97,
	0x9a, 0x6f, 0x6b, 0xdf, 0xb7, 0xdd, 0xec, 0xfb, 0x02, 0xa3, 0x08, 0xf3, 0x78, 0xeb, 0x1c, 0x05,
	0x21, 0xb9, 0x04, 0x97, 0xef, 0x16, 0x13, 0xaa, 0x51, 0x95, 0x76, 0xfd, 0x7a, 0xdf, 0x13, 0x18,
	0xe4, 0xf8, 0x2e, 0xe7, 0xb8, 0xe2, 0x28, 0x9e, 0x17, 0x69, 0x66, 0xca, 0xd9, 0xf4, 0x18, 0xda,
	0x77, 0x22, 0x99, 0x4d, 0x89, 0x03, 0xff, 0x51, 0x9f, 0x86, 0x9f, 0x2e, 0x7d, 0x84, 0x91, 0xc9,
	0xdf, 0xa2, 0xbc, 0xae, 0x5a, 0x85, 0x41, 0x74, 0x88, 0x73, 0x13, 0xf6, 0xcb, 0xa5, 0x0f, 0xfb,
	0xd8, 0x4a, 0xe1, 0x02, 0xfa, 0x35, 0x05, 0xcd, 0xff, 0x63, 0xd0, 0x4c, 0xfc, 0x0e, 0x00, 0x00,
	0xff, 0xff, 0x6e, 0xd8, 0xc8, 0x07, 0x6e, 0x02, 0x00, 0x00,
}
