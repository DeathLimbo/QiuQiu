// Code generated by protoc-gen-go.
// source: league_battle.proto
// DO NOT EDIT!

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 联盟战阶段
type LeagueBattleStage int32

const (
	// 报名阶段
	LeagueBattleStage_LBS_APPLY LeagueBattleStage = 1
	// 准备阶段
	LeagueBattleStage_LBS_READY LeagueBattleStage = 2
	// 积分赛阶段
	LeagueBattleStage_LBS_POINT_RACE LeagueBattleStage = 3
	// 冠军赛8进4
	LeagueBattleStage_LBS_FINAL_ROUND_1 LeagueBattleStage = 5
	// 冠军赛4进2
	LeagueBattleStage_LBS_FINAL_ROUND_2 LeagueBattleStage = 6
	// 冠军赛决赛
	LeagueBattleStage_LBS_TOTAL_FINAL LeagueBattleStage = 7
	// 休赛期
	LeagueBattleStage_LBS_OFF_SEASON LeagueBattleStage = 8
	// 上限
	LeagueBattleStage_LBS_MAX LeagueBattleStage = 9
)

var LeagueBattleStage_name = map[int32]string{
	1: "LBS_APPLY",
	2: "LBS_READY",
	3: "LBS_POINT_RACE",
	5: "LBS_FINAL_ROUND_1",
	6: "LBS_FINAL_ROUND_2",
	7: "LBS_TOTAL_FINAL",
	8: "LBS_OFF_SEASON",
	9: "LBS_MAX",
}
var LeagueBattleStage_value = map[string]int32{
	"LBS_APPLY":         1,
	"LBS_READY":         2,
	"LBS_POINT_RACE":    3,
	"LBS_FINAL_ROUND_1": 5,
	"LBS_FINAL_ROUND_2": 6,
	"LBS_TOTAL_FINAL":   7,
	"LBS_OFF_SEASON":    8,
	"LBS_MAX":           9,
}

func (x LeagueBattleStage) Enum() *LeagueBattleStage {
	p := new(LeagueBattleStage)
	*p = x
	return p
}
func (x LeagueBattleStage) String() string {
	return proto.EnumName(LeagueBattleStage_name, int32(x))
}
func (x *LeagueBattleStage) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LeagueBattleStage_value, data, "LeagueBattleStage")
	if err != nil {
		return err
	}
	*x = LeagueBattleStage(value)
	return nil
}
func (LeagueBattleStage) EnumDescriptor() ([]byte, []int) { return fileDescriptor36, []int{0} }

// 联盟战跨服类型
type LeagueBattleServerGroupType int32

const (
	// 积分赛
	LeagueBattleServerGroupType_LBSGT_POINT_RACE_STAGE LeagueBattleServerGroupType = 1
	// 淘汰赛
	LeagueBattleServerGroupType_LBSGT_FINAL_STAGE LeagueBattleServerGroupType = 2
)

var LeagueBattleServerGroupType_name = map[int32]string{
	1: "LBSGT_POINT_RACE_STAGE",
	2: "LBSGT_FINAL_STAGE",
}
var LeagueBattleServerGroupType_value = map[string]int32{
	"LBSGT_POINT_RACE_STAGE": 1,
	"LBSGT_FINAL_STAGE":      2,
}

func (x LeagueBattleServerGroupType) Enum() *LeagueBattleServerGroupType {
	p := new(LeagueBattleServerGroupType)
	*p = x
	return p
}
func (x LeagueBattleServerGroupType) String() string {
	return proto.EnumName(LeagueBattleServerGroupType_name, int32(x))
}
func (x *LeagueBattleServerGroupType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LeagueBattleServerGroupType_value, data, "LeagueBattleServerGroupType")
	if err != nil {
		return err
	}
	*x = LeagueBattleServerGroupType(value)
	return nil
}
func (LeagueBattleServerGroupType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor36, []int{1}
}

// 更新联盟战队伍信息类型
type UpdateLeagueBattleTeamInfoType int32

const (
	// 新增
	UpdateLeagueBattleTeamInfoType_ULBTIT_ADD UpdateLeagueBattleTeamInfoType = 1
	// 更新
	UpdateLeagueBattleTeamInfoType_ULBTIT_UPATE UpdateLeagueBattleTeamInfoType = 2
)

var UpdateLeagueBattleTeamInfoType_name = map[int32]string{
	1: "ULBTIT_ADD",
	2: "ULBTIT_UPATE",
}
var UpdateLeagueBattleTeamInfoType_value = map[string]int32{
	"ULBTIT_ADD":   1,
	"ULBTIT_UPATE": 2,
}

func (x UpdateLeagueBattleTeamInfoType) Enum() *UpdateLeagueBattleTeamInfoType {
	p := new(UpdateLeagueBattleTeamInfoType)
	*p = x
	return p
}
func (x UpdateLeagueBattleTeamInfoType) String() string {
	return proto.EnumName(UpdateLeagueBattleTeamInfoType_name, int32(x))
}
func (x *UpdateLeagueBattleTeamInfoType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(UpdateLeagueBattleTeamInfoType_value, data, "UpdateLeagueBattleTeamInfoType")
	if err != nil {
		return err
	}
	*x = UpdateLeagueBattleTeamInfoType(value)
	return nil
}
func (UpdateLeagueBattleTeamInfoType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor36, []int{2}
}

// 联盟战时间节点类型
type LeagueBattleTimeNodeType int32

const (
	// 下次报名阶段开始时间
	LeagueBattleTimeNodeType_LBTNT_NextApplyStageStart LeagueBattleTimeNodeType = 1
	// 下次准备阶段开始时间
	LeagueBattleTimeNodeType_LBTNT_NextReadyStageStart LeagueBattleTimeNodeType = 2
	// 下次积分赛阶段开始时间
	LeagueBattleTimeNodeType_LBTNT_NextPointRaceStageStart LeagueBattleTimeNodeType = 3
	// 下次积分赛发奖时间
	LeagueBattleTimeNodeType_LBTNT_NextPointRaceReward LeagueBattleTimeNodeType = 4
	// 下次决赛阶段开始时间
	LeagueBattleTimeNodeType_LBTNT_NextFinalStageStart LeagueBattleTimeNodeType = 5
	// 下次决赛第一轮开始时间
	LeagueBattleTimeNodeType_LBTNT_NextFinalFirstRoundStart LeagueBattleTimeNodeType = 6
	// 下次决赛第二轮开始时间
	LeagueBattleTimeNodeType_LBTNT_NextFinalSecondRoundStart LeagueBattleTimeNodeType = 7
	// 下次总决赛开始时间
	LeagueBattleTimeNodeType_LBTNT_NextTotalFinalStart LeagueBattleTimeNodeType = 8
	// 最大值
	LeagueBattleTimeNodeType_LBTNT_Max LeagueBattleTimeNodeType = 9
)

var LeagueBattleTimeNodeType_name = map[int32]string{
	1: "LBTNT_NextApplyStageStart",
	2: "LBTNT_NextReadyStageStart",
	3: "LBTNT_NextPointRaceStageStart",
	4: "LBTNT_NextPointRaceReward",
	5: "LBTNT_NextFinalStageStart",
	6: "LBTNT_NextFinalFirstRoundStart",
	7: "LBTNT_NextFinalSecondRoundStart",
	8: "LBTNT_NextTotalFinalStart",
	9: "LBTNT_Max",
}
var LeagueBattleTimeNodeType_value = map[string]int32{
	"LBTNT_NextApplyStageStart":       1,
	"LBTNT_NextReadyStageStart":       2,
	"LBTNT_NextPointRaceStageStart":   3,
	"LBTNT_NextPointRaceReward":       4,
	"LBTNT_NextFinalStageStart":       5,
	"LBTNT_NextFinalFirstRoundStart":  6,
	"LBTNT_NextFinalSecondRoundStart": 7,
	"LBTNT_NextTotalFinalStart":       8,
	"LBTNT_Max":                       9,
}

func (x LeagueBattleTimeNodeType) Enum() *LeagueBattleTimeNodeType {
	p := new(LeagueBattleTimeNodeType)
	*p = x
	return p
}
func (x LeagueBattleTimeNodeType) String() string {
	return proto.EnumName(LeagueBattleTimeNodeType_name, int32(x))
}
func (x *LeagueBattleTimeNodeType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LeagueBattleTimeNodeType_value, data, "LeagueBattleTimeNodeType")
	if err != nil {
		return err
	}
	*x = LeagueBattleTimeNodeType(value)
	return nil
}
func (LeagueBattleTimeNodeType) EnumDescriptor() ([]byte, []int) { return fileDescriptor36, []int{3} }

// 联盟战事件
type LeagueBattleEvent int32

const (
	// 报名
	LeagueBattleEvent_LBE_Apply LeagueBattleEvent = 1
	// 准备
	LeagueBattleEvent_LBE_Ready LeagueBattleEvent = 2
	// 准备
	LeagueBattleEvent_LBE_PointRace LeagueBattleEvent = 3
	// 积分赛发奖
	LeagueBattleEvent_LBE_PointRaceReward LeagueBattleEvent = 4
	// 决赛发奖
	LeagueBattleEvent_LBE_FinalReward LeagueBattleEvent = 5
	// 决赛数据初始化
	LeagueBattleEvent_LBE_FinalDataInit LeagueBattleEvent = 6
)

var LeagueBattleEvent_name = map[int32]string{
	1: "LBE_Apply",
	2: "LBE_Ready",
	3: "LBE_PointRace",
	4: "LBE_PointRaceReward",
	5: "LBE_FinalReward",
	6: "LBE_FinalDataInit",
}
var LeagueBattleEvent_value = map[string]int32{
	"LBE_Apply":           1,
	"LBE_Ready":           2,
	"LBE_PointRace":       3,
	"LBE_PointRaceReward": 4,
	"LBE_FinalReward":     5,
	"LBE_FinalDataInit":   6,
}

func (x LeagueBattleEvent) Enum() *LeagueBattleEvent {
	p := new(LeagueBattleEvent)
	*p = x
	return p
}
func (x LeagueBattleEvent) String() string {
	return proto.EnumName(LeagueBattleEvent_name, int32(x))
}
func (x *LeagueBattleEvent) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LeagueBattleEvent_value, data, "LeagueBattleEvent")
	if err != nil {
		return err
	}
	*x = LeagueBattleEvent(value)
	return nil
}
func (LeagueBattleEvent) EnumDescriptor() ([]byte, []int) { return fileDescriptor36, []int{4} }

type LeagueBattleApplyC2S_MsgID int32

const (
	LeagueBattleApplyC2S_eMsgID LeagueBattleApplyC2S_MsgID = 4664
)

var LeagueBattleApplyC2S_MsgID_name = map[int32]string{
	4664: "eMsgID",
}
var LeagueBattleApplyC2S_MsgID_value = map[string]int32{
	"eMsgID": 4664,
}

func (x LeagueBattleApplyC2S_MsgID) Enum() *LeagueBattleApplyC2S_MsgID {
	p := new(LeagueBattleApplyC2S_MsgID)
	*p = x
	return p
}
func (x LeagueBattleApplyC2S_MsgID) String() string {
	return proto.EnumName(LeagueBattleApplyC2S_MsgID_name, int32(x))
}
func (x *LeagueBattleApplyC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LeagueBattleApplyC2S_MsgID_value, data, "LeagueBattleApplyC2S_MsgID")
	if err != nil {
		return err
	}
	*x = LeagueBattleApplyC2S_MsgID(value)
	return nil
}
func (LeagueBattleApplyC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor36, []int{20, 0}
}

type LeagueBattleApplyS2C_MsgID int32

const (
	LeagueBattleApplyS2C_eMsgID LeagueBattleApplyS2C_MsgID = 4664
)

var LeagueBattleApplyS2C_MsgID_name = map[int32]string{
	4664: "eMsgID",
}
var LeagueBattleApplyS2C_MsgID_value = map[string]int32{
	"eMsgID": 4664,
}

func (x LeagueBattleApplyS2C_MsgID) Enum() *LeagueBattleApplyS2C_MsgID {
	p := new(LeagueBattleApplyS2C_MsgID)
	*p = x
	return p
}
func (x LeagueBattleApplyS2C_MsgID) String() string {
	return proto.EnumName(LeagueBattleApplyS2C_MsgID_name, int32(x))
}
func (x *LeagueBattleApplyS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LeagueBattleApplyS2C_MsgID_value, data, "LeagueBattleApplyS2C_MsgID")
	if err != nil {
		return err
	}
	*x = LeagueBattleApplyS2C_MsgID(value)
	return nil
}
func (LeagueBattleApplyS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor36, []int{21, 0}
}

type LeagueBattleSubmitSquadC2S_MsgID int32

const (
	LeagueBattleSubmitSquadC2S_eMsgID LeagueBattleSubmitSquadC2S_MsgID = 4665
)

var LeagueBattleSubmitSquadC2S_MsgID_name = map[int32]string{
	4665: "eMsgID",
}
var LeagueBattleSubmitSquadC2S_MsgID_value = map[string]int32{
	"eMsgID": 4665,
}

func (x LeagueBattleSubmitSquadC2S_MsgID) Enum() *LeagueBattleSubmitSquadC2S_MsgID {
	p := new(LeagueBattleSubmitSquadC2S_MsgID)
	*p = x
	return p
}
func (x LeagueBattleSubmitSquadC2S_MsgID) String() string {
	return proto.EnumName(LeagueBattleSubmitSquadC2S_MsgID_name, int32(x))
}
func (x *LeagueBattleSubmitSquadC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LeagueBattleSubmitSquadC2S_MsgID_value, data, "LeagueBattleSubmitSquadC2S_MsgID")
	if err != nil {
		return err
	}
	*x = LeagueBattleSubmitSquadC2S_MsgID(value)
	return nil
}
func (LeagueBattleSubmitSquadC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor36, []int{22, 0}
}

type LeagueBattleSubmitSquadS2C_MsgID int32

const (
	LeagueBattleSubmitSquadS2C_eMsgID LeagueBattleSubmitSquadS2C_MsgID = 4665
)

var LeagueBattleSubmitSquadS2C_MsgID_name = map[int32]string{
	4665: "eMsgID",
}
var LeagueBattleSubmitSquadS2C_MsgID_value = map[string]int32{
	"eMsgID": 4665,
}

func (x LeagueBattleSubmitSquadS2C_MsgID) Enum() *LeagueBattleSubmitSquadS2C_MsgID {
	p := new(LeagueBattleSubmitSquadS2C_MsgID)
	*p = x
	return p
}
func (x LeagueBattleSubmitSquadS2C_MsgID) String() string {
	return proto.EnumName(LeagueBattleSubmitSquadS2C_MsgID_name, int32(x))
}
func (x *LeagueBattleSubmitSquadS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LeagueBattleSubmitSquadS2C_MsgID_value, data, "LeagueBattleSubmitSquadS2C_MsgID")
	if err != nil {
		return err
	}
	*x = LeagueBattleSubmitSquadS2C_MsgID(value)
	return nil
}
func (LeagueBattleSubmitSquadS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor36, []int{23, 0}
}

type LeagueBattleChangeFightOrderC2S_MsgID int32

const (
	LeagueBattleChangeFightOrderC2S_eMsgID LeagueBattleChangeFightOrderC2S_MsgID = 4666
)

var LeagueBattleChangeFightOrderC2S_MsgID_name = map[int32]string{
	4666: "eMsgID",
}
var LeagueBattleChangeFightOrderC2S_MsgID_value = map[string]int32{
	"eMsgID": 4666,
}

func (x LeagueBattleChangeFightOrderC2S_MsgID) Enum() *LeagueBattleChangeFightOrderC2S_MsgID {
	p := new(LeagueBattleChangeFightOrderC2S_MsgID)
	*p = x
	return p
}
func (x LeagueBattleChangeFightOrderC2S_MsgID) String() string {
	return proto.EnumName(LeagueBattleChangeFightOrderC2S_MsgID_name, int32(x))
}
func (x *LeagueBattleChangeFightOrderC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LeagueBattleChangeFightOrderC2S_MsgID_value, data, "LeagueBattleChangeFightOrderC2S_MsgID")
	if err != nil {
		return err
	}
	*x = LeagueBattleChangeFightOrderC2S_MsgID(value)
	return nil
}
func (LeagueBattleChangeFightOrderC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor36, []int{24, 0}
}

type LeagueBattleChangeFightOrderS2C_MsgID int32

const (
	LeagueBattleChangeFightOrderS2C_eMsgID LeagueBattleChangeFightOrderS2C_MsgID = 4666
)

var LeagueBattleChangeFightOrderS2C_MsgID_name = map[int32]string{
	4666: "eMsgID",
}
var LeagueBattleChangeFightOrderS2C_MsgID_value = map[string]int32{
	"eMsgID": 4666,
}

func (x LeagueBattleChangeFightOrderS2C_MsgID) Enum() *LeagueBattleChangeFightOrderS2C_MsgID {
	p := new(LeagueBattleChangeFightOrderS2C_MsgID)
	*p = x
	return p
}
func (x LeagueBattleChangeFightOrderS2C_MsgID) String() string {
	return proto.EnumName(LeagueBattleChangeFightOrderS2C_MsgID_name, int32(x))
}
func (x *LeagueBattleChangeFightOrderS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LeagueBattleChangeFightOrderS2C_MsgID_value, data, "LeagueBattleChangeFightOrderS2C_MsgID")
	if err != nil {
		return err
	}
	*x = LeagueBattleChangeFightOrderS2C_MsgID(value)
	return nil
}
func (LeagueBattleChangeFightOrderS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor36, []int{25, 0}
}

type LeagueBattleMatchC2S_MsgID int32

const (
	LeagueBattleMatchC2S_eMsgID LeagueBattleMatchC2S_MsgID = 4667
)

var LeagueBattleMatchC2S_MsgID_name = map[int32]string{
	4667: "eMsgID",
}
var LeagueBattleMatchC2S_MsgID_value = map[string]int32{
	"eMsgID": 4667,
}

func (x LeagueBattleMatchC2S_MsgID) Enum() *LeagueBattleMatchC2S_MsgID {
	p := new(LeagueBattleMatchC2S_MsgID)
	*p = x
	return p
}
func (x LeagueBattleMatchC2S_MsgID) String() string {
	return proto.EnumName(LeagueBattleMatchC2S_MsgID_name, int32(x))
}
func (x *LeagueBattleMatchC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LeagueBattleMatchC2S_MsgID_value, data, "LeagueBattleMatchC2S_MsgID")
	if err != nil {
		return err
	}
	*x = LeagueBattleMatchC2S_MsgID(value)
	return nil
}
func (LeagueBattleMatchC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor36, []int{26, 0}
}

type LeagueBattleMatchS2C_MsgID int32

const (
	LeagueBattleMatchS2C_eMsgID LeagueBattleMatchS2C_MsgID = 4667
)

var LeagueBattleMatchS2C_MsgID_name = map[int32]string{
	4667: "eMsgID",
}
var LeagueBattleMatchS2C_MsgID_value = map[string]int32{
	"eMsgID": 4667,
}

func (x LeagueBattleMatchS2C_MsgID) Enum() *LeagueBattleMatchS2C_MsgID {
	p := new(LeagueBattleMatchS2C_MsgID)
	*p = x
	return p
}
func (x LeagueBattleMatchS2C_MsgID) String() string {
	return proto.EnumName(LeagueBattleMatchS2C_MsgID_name, int32(x))
}
func (x *LeagueBattleMatchS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LeagueBattleMatchS2C_MsgID_value, data, "LeagueBattleMatchS2C_MsgID")
	if err != nil {
		return err
	}
	*x = LeagueBattleMatchS2C_MsgID(value)
	return nil
}
func (LeagueBattleMatchS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor36, []int{27, 0}
}

type GetLeagueBattleOppDetailInfoC2S_MsgID int32

const (
	GetLeagueBattleOppDetailInfoC2S_eMsgID GetLeagueBattleOppDetailInfoC2S_MsgID = 4668
)

var GetLeagueBattleOppDetailInfoC2S_MsgID_name = map[int32]string{
	4668: "eMsgID",
}
var GetLeagueBattleOppDetailInfoC2S_MsgID_value = map[string]int32{
	"eMsgID": 4668,
}

func (x GetLeagueBattleOppDetailInfoC2S_MsgID) Enum() *GetLeagueBattleOppDetailInfoC2S_MsgID {
	p := new(GetLeagueBattleOppDetailInfoC2S_MsgID)
	*p = x
	return p
}
func (x GetLeagueBattleOppDetailInfoC2S_MsgID) String() string {
	return proto.EnumName(GetLeagueBattleOppDetailInfoC2S_MsgID_name, int32(x))
}
func (x *GetLeagueBattleOppDetailInfoC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GetLeagueBattleOppDetailInfoC2S_MsgID_value, data, "GetLeagueBattleOppDetailInfoC2S_MsgID")
	if err != nil {
		return err
	}
	*x = GetLeagueBattleOppDetailInfoC2S_MsgID(value)
	return nil
}
func (GetLeagueBattleOppDetailInfoC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor36, []int{28, 0}
}

type GetLeagueBattleOppDetailInfoS2C_MsgID int32

const (
	GetLeagueBattleOppDetailInfoS2C_eMsgID GetLeagueBattleOppDetailInfoS2C_MsgID = 4668
)

var GetLeagueBattleOppDetailInfoS2C_MsgID_name = map[int32]string{
	4668: "eMsgID",
}
var GetLeagueBattleOppDetailInfoS2C_MsgID_value = map[string]int32{
	"eMsgID": 4668,
}

func (x GetLeagueBattleOppDetailInfoS2C_MsgID) Enum() *GetLeagueBattleOppDetailInfoS2C_MsgID {
	p := new(GetLeagueBattleOppDetailInfoS2C_MsgID)
	*p = x
	return p
}
func (x GetLeagueBattleOppDetailInfoS2C_MsgID) String() string {
	return proto.EnumName(GetLeagueBattleOppDetailInfoS2C_MsgID_name, int32(x))
}
func (x *GetLeagueBattleOppDetailInfoS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GetLeagueBattleOppDetailInfoS2C_MsgID_value, data, "GetLeagueBattleOppDetailInfoS2C_MsgID")
	if err != nil {
		return err
	}
	*x = GetLeagueBattleOppDetailInfoS2C_MsgID(value)
	return nil
}
func (GetLeagueBattleOppDetailInfoS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor36, []int{29, 0}
}

type GetLeagueBattleInfoC2S_MsgID int32

const (
	GetLeagueBattleInfoC2S_eMsgID GetLeagueBattleInfoC2S_MsgID = 4669
)

var GetLeagueBattleInfoC2S_MsgID_name = map[int32]string{
	4669: "eMsgID",
}
var GetLeagueBattleInfoC2S_MsgID_value = map[string]int32{
	"eMsgID": 4669,
}

func (x GetLeagueBattleInfoC2S_MsgID) Enum() *GetLeagueBattleInfoC2S_MsgID {
	p := new(GetLeagueBattleInfoC2S_MsgID)
	*p = x
	return p
}
func (x GetLeagueBattleInfoC2S_MsgID) String() string {
	return proto.EnumName(GetLeagueBattleInfoC2S_MsgID_name, int32(x))
}
func (x *GetLeagueBattleInfoC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GetLeagueBattleInfoC2S_MsgID_value, data, "GetLeagueBattleInfoC2S_MsgID")
	if err != nil {
		return err
	}
	*x = GetLeagueBattleInfoC2S_MsgID(value)
	return nil
}
func (GetLeagueBattleInfoC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor36, []int{30, 0}
}

type GetLeagueBattleInfoS2C_MsgID int32

const (
	GetLeagueBattleInfoS2C_eMsgID GetLeagueBattleInfoS2C_MsgID = 4669
)

var GetLeagueBattleInfoS2C_MsgID_name = map[int32]string{
	4669: "eMsgID",
}
var GetLeagueBattleInfoS2C_MsgID_value = map[string]int32{
	"eMsgID": 4669,
}

func (x GetLeagueBattleInfoS2C_MsgID) Enum() *GetLeagueBattleInfoS2C_MsgID {
	p := new(GetLeagueBattleInfoS2C_MsgID)
	*p = x
	return p
}
func (x GetLeagueBattleInfoS2C_MsgID) String() string {
	return proto.EnumName(GetLeagueBattleInfoS2C_MsgID_name, int32(x))
}
func (x *GetLeagueBattleInfoS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GetLeagueBattleInfoS2C_MsgID_value, data, "GetLeagueBattleInfoS2C_MsgID")
	if err != nil {
		return err
	}
	*x = GetLeagueBattleInfoS2C_MsgID(value)
	return nil
}
func (GetLeagueBattleInfoS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor36, []int{31, 0}
}

type UpdateLeagueBattleTeamInfoS2C_MsgID int32

const (
	UpdateLeagueBattleTeamInfoS2C_eMsgID UpdateLeagueBattleTeamInfoS2C_MsgID = 4670
)

var UpdateLeagueBattleTeamInfoS2C_MsgID_name = map[int32]string{
	4670: "eMsgID",
}
var UpdateLeagueBattleTeamInfoS2C_MsgID_value = map[string]int32{
	"eMsgID": 4670,
}

func (x UpdateLeagueBattleTeamInfoS2C_MsgID) Enum() *UpdateLeagueBattleTeamInfoS2C_MsgID {
	p := new(UpdateLeagueBattleTeamInfoS2C_MsgID)
	*p = x
	return p
}
func (x UpdateLeagueBattleTeamInfoS2C_MsgID) String() string {
	return proto.EnumName(UpdateLeagueBattleTeamInfoS2C_MsgID_name, int32(x))
}
func (x *UpdateLeagueBattleTeamInfoS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(UpdateLeagueBattleTeamInfoS2C_MsgID_value, data, "UpdateLeagueBattleTeamInfoS2C_MsgID")
	if err != nil {
		return err
	}
	*x = UpdateLeagueBattleTeamInfoS2C_MsgID(value)
	return nil
}
func (UpdateLeagueBattleTeamInfoS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor36, []int{32, 0}
}

type LeagueBattleUIApplyStageShowInfoS2C_MsgID int32

const (
	LeagueBattleUIApplyStageShowInfoS2C_eMsgID LeagueBattleUIApplyStageShowInfoS2C_MsgID = 4671
)

var LeagueBattleUIApplyStageShowInfoS2C_MsgID_name = map[int32]string{
	4671: "eMsgID",
}
var LeagueBattleUIApplyStageShowInfoS2C_MsgID_value = map[string]int32{
	"eMsgID": 4671,
}

func (x LeagueBattleUIApplyStageShowInfoS2C_MsgID) Enum() *LeagueBattleUIApplyStageShowInfoS2C_MsgID {
	p := new(LeagueBattleUIApplyStageShowInfoS2C_MsgID)
	*p = x
	return p
}
func (x LeagueBattleUIApplyStageShowInfoS2C_MsgID) String() string {
	return proto.EnumName(LeagueBattleUIApplyStageShowInfoS2C_MsgID_name, int32(x))
}
func (x *LeagueBattleUIApplyStageShowInfoS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LeagueBattleUIApplyStageShowInfoS2C_MsgID_value, data, "LeagueBattleUIApplyStageShowInfoS2C_MsgID")
	if err != nil {
		return err
	}
	*x = LeagueBattleUIApplyStageShowInfoS2C_MsgID(value)
	return nil
}
func (LeagueBattleUIApplyStageShowInfoS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor36, []int{33, 0}
}

type LeagueBattleUITeamListS2C_MsgID int32

const (
	LeagueBattleUITeamListS2C_eMsgID LeagueBattleUITeamListS2C_MsgID = 4672
)

var LeagueBattleUITeamListS2C_MsgID_name = map[int32]string{
	4672: "eMsgID",
}
var LeagueBattleUITeamListS2C_MsgID_value = map[string]int32{
	"eMsgID": 4672,
}

func (x LeagueBattleUITeamListS2C_MsgID) Enum() *LeagueBattleUITeamListS2C_MsgID {
	p := new(LeagueBattleUITeamListS2C_MsgID)
	*p = x
	return p
}
func (x LeagueBattleUITeamListS2C_MsgID) String() string {
	return proto.EnumName(LeagueBattleUITeamListS2C_MsgID_name, int32(x))
}
func (x *LeagueBattleUITeamListS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LeagueBattleUITeamListS2C_MsgID_value, data, "LeagueBattleUITeamListS2C_MsgID")
	if err != nil {
		return err
	}
	*x = LeagueBattleUITeamListS2C_MsgID(value)
	return nil
}
func (LeagueBattleUITeamListS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor36, []int{34, 0}
}

type LeagueBattleUIFinalInfoS2C_MsgID int32

const (
	LeagueBattleUIFinalInfoS2C_eMsgID LeagueBattleUIFinalInfoS2C_MsgID = 4673
)

var LeagueBattleUIFinalInfoS2C_MsgID_name = map[int32]string{
	4673: "eMsgID",
}
var LeagueBattleUIFinalInfoS2C_MsgID_value = map[string]int32{
	"eMsgID": 4673,
}

func (x LeagueBattleUIFinalInfoS2C_MsgID) Enum() *LeagueBattleUIFinalInfoS2C_MsgID {
	p := new(LeagueBattleUIFinalInfoS2C_MsgID)
	*p = x
	return p
}
func (x LeagueBattleUIFinalInfoS2C_MsgID) String() string {
	return proto.EnumName(LeagueBattleUIFinalInfoS2C_MsgID_name, int32(x))
}
func (x *LeagueBattleUIFinalInfoS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LeagueBattleUIFinalInfoS2C_MsgID_value, data, "LeagueBattleUIFinalInfoS2C_MsgID")
	if err != nil {
		return err
	}
	*x = LeagueBattleUIFinalInfoS2C_MsgID(value)
	return nil
}
func (LeagueBattleUIFinalInfoS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor36, []int{35, 0}
}

type GetFightReportListC2S_MsgID int32

const (
	GetFightReportListC2S_eMsgID GetFightReportListC2S_MsgID = 4674
)

var GetFightReportListC2S_MsgID_name = map[int32]string{
	4674: "eMsgID",
}
var GetFightReportListC2S_MsgID_value = map[string]int32{
	"eMsgID": 4674,
}

func (x GetFightReportListC2S_MsgID) Enum() *GetFightReportListC2S_MsgID {
	p := new(GetFightReportListC2S_MsgID)
	*p = x
	return p
}
func (x GetFightReportListC2S_MsgID) String() string {
	return proto.EnumName(GetFightReportListC2S_MsgID_name, int32(x))
}
func (x *GetFightReportListC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GetFightReportListC2S_MsgID_value, data, "GetFightReportListC2S_MsgID")
	if err != nil {
		return err
	}
	*x = GetFightReportListC2S_MsgID(value)
	return nil
}
func (GetFightReportListC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor36, []int{36, 0}
}

type GetFightReportListS2C_MsgID int32

const (
	GetFightReportListS2C_eMsgID GetFightReportListS2C_MsgID = 4674
)

var GetFightReportListS2C_MsgID_name = map[int32]string{
	4674: "eMsgID",
}
var GetFightReportListS2C_MsgID_value = map[string]int32{
	"eMsgID": 4674,
}

func (x GetFightReportListS2C_MsgID) Enum() *GetFightReportListS2C_MsgID {
	p := new(GetFightReportListS2C_MsgID)
	*p = x
	return p
}
func (x GetFightReportListS2C_MsgID) String() string {
	return proto.EnumName(GetFightReportListS2C_MsgID_name, int32(x))
}
func (x *GetFightReportListS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GetFightReportListS2C_MsgID_value, data, "GetFightReportListS2C_MsgID")
	if err != nil {
		return err
	}
	*x = GetFightReportListS2C_MsgID(value)
	return nil
}
func (GetFightReportListS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor36, []int{37, 0}
}

type GetSimpleFightReport1C2S_MsgID int32

const (
	GetSimpleFightReport1C2S_eMsgID GetSimpleFightReport1C2S_MsgID = 4675
)

var GetSimpleFightReport1C2S_MsgID_name = map[int32]string{
	4675: "eMsgID",
}
var GetSimpleFightReport1C2S_MsgID_value = map[string]int32{
	"eMsgID": 4675,
}

func (x GetSimpleFightReport1C2S_MsgID) Enum() *GetSimpleFightReport1C2S_MsgID {
	p := new(GetSimpleFightReport1C2S_MsgID)
	*p = x
	return p
}
func (x GetSimpleFightReport1C2S_MsgID) String() string {
	return proto.EnumName(GetSimpleFightReport1C2S_MsgID_name, int32(x))
}
func (x *GetSimpleFightReport1C2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GetSimpleFightReport1C2S_MsgID_value, data, "GetSimpleFightReport1C2S_MsgID")
	if err != nil {
		return err
	}
	*x = GetSimpleFightReport1C2S_MsgID(value)
	return nil
}
func (GetSimpleFightReport1C2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor36, []int{38, 0}
}

type GetSimpleFightReport1S2C_MsgID int32

const (
	GetSimpleFightReport1S2C_eMsgID GetSimpleFightReport1S2C_MsgID = 4675
)

var GetSimpleFightReport1S2C_MsgID_name = map[int32]string{
	4675: "eMsgID",
}
var GetSimpleFightReport1S2C_MsgID_value = map[string]int32{
	"eMsgID": 4675,
}

func (x GetSimpleFightReport1S2C_MsgID) Enum() *GetSimpleFightReport1S2C_MsgID {
	p := new(GetSimpleFightReport1S2C_MsgID)
	*p = x
	return p
}
func (x GetSimpleFightReport1S2C_MsgID) String() string {
	return proto.EnumName(GetSimpleFightReport1S2C_MsgID_name, int32(x))
}
func (x *GetSimpleFightReport1S2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GetSimpleFightReport1S2C_MsgID_value, data, "GetSimpleFightReport1S2C_MsgID")
	if err != nil {
		return err
	}
	*x = GetSimpleFightReport1S2C_MsgID(value)
	return nil
}
func (GetSimpleFightReport1S2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor36, []int{39, 0}
}

type GetFightReportDetailC2S_MsgID int32

const (
	GetFightReportDetailC2S_eMsgID GetFightReportDetailC2S_MsgID = 4676
)

var GetFightReportDetailC2S_MsgID_name = map[int32]string{
	4676: "eMsgID",
}
var GetFightReportDetailC2S_MsgID_value = map[string]int32{
	"eMsgID": 4676,
}

func (x GetFightReportDetailC2S_MsgID) Enum() *GetFightReportDetailC2S_MsgID {
	p := new(GetFightReportDetailC2S_MsgID)
	*p = x
	return p
}
func (x GetFightReportDetailC2S_MsgID) String() string {
	return proto.EnumName(GetFightReportDetailC2S_MsgID_name, int32(x))
}
func (x *GetFightReportDetailC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GetFightReportDetailC2S_MsgID_value, data, "GetFightReportDetailC2S_MsgID")
	if err != nil {
		return err
	}
	*x = GetFightReportDetailC2S_MsgID(value)
	return nil
}
func (GetFightReportDetailC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor36, []int{40, 0}
}

type GetFightReportDetailS2C_MsgID int32

const (
	GetFightReportDetailS2C_eMsgID GetFightReportDetailS2C_MsgID = 4676
)

var GetFightReportDetailS2C_MsgID_name = map[int32]string{
	4676: "eMsgID",
}
var GetFightReportDetailS2C_MsgID_value = map[string]int32{
	"eMsgID": 4676,
}

func (x GetFightReportDetailS2C_MsgID) Enum() *GetFightReportDetailS2C_MsgID {
	p := new(GetFightReportDetailS2C_MsgID)
	*p = x
	return p
}
func (x GetFightReportDetailS2C_MsgID) String() string {
	return proto.EnumName(GetFightReportDetailS2C_MsgID_name, int32(x))
}
func (x *GetFightReportDetailS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GetFightReportDetailS2C_MsgID_value, data, "GetFightReportDetailS2C_MsgID")
	if err != nil {
		return err
	}
	*x = GetFightReportDetailS2C_MsgID(value)
	return nil
}
func (GetFightReportDetailS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor36, []int{41, 0}
}

type GetLeagueBattleSquadInfoC2S_MsgID int32

const (
	GetLeagueBattleSquadInfoC2S_eMsgID GetLeagueBattleSquadInfoC2S_MsgID = 4677
)

var GetLeagueBattleSquadInfoC2S_MsgID_name = map[int32]string{
	4677: "eMsgID",
}
var GetLeagueBattleSquadInfoC2S_MsgID_value = map[string]int32{
	"eMsgID": 4677,
}

func (x GetLeagueBattleSquadInfoC2S_MsgID) Enum() *GetLeagueBattleSquadInfoC2S_MsgID {
	p := new(GetLeagueBattleSquadInfoC2S_MsgID)
	*p = x
	return p
}
func (x GetLeagueBattleSquadInfoC2S_MsgID) String() string {
	return proto.EnumName(GetLeagueBattleSquadInfoC2S_MsgID_name, int32(x))
}
func (x *GetLeagueBattleSquadInfoC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GetLeagueBattleSquadInfoC2S_MsgID_value, data, "GetLeagueBattleSquadInfoC2S_MsgID")
	if err != nil {
		return err
	}
	*x = GetLeagueBattleSquadInfoC2S_MsgID(value)
	return nil
}
func (GetLeagueBattleSquadInfoC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor36, []int{42, 0}
}

type GetLeagueBattleSquadInfoS2C_MsgID int32

const (
	GetLeagueBattleSquadInfoS2C_eMsgID GetLeagueBattleSquadInfoS2C_MsgID = 4677
)

var GetLeagueBattleSquadInfoS2C_MsgID_name = map[int32]string{
	4677: "eMsgID",
}
var GetLeagueBattleSquadInfoS2C_MsgID_value = map[string]int32{
	"eMsgID": 4677,
}

func (x GetLeagueBattleSquadInfoS2C_MsgID) Enum() *GetLeagueBattleSquadInfoS2C_MsgID {
	p := new(GetLeagueBattleSquadInfoS2C_MsgID)
	*p = x
	return p
}
func (x GetLeagueBattleSquadInfoS2C_MsgID) String() string {
	return proto.EnumName(GetLeagueBattleSquadInfoS2C_MsgID_name, int32(x))
}
func (x *GetLeagueBattleSquadInfoS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GetLeagueBattleSquadInfoS2C_MsgID_value, data, "GetLeagueBattleSquadInfoS2C_MsgID")
	if err != nil {
		return err
	}
	*x = GetLeagueBattleSquadInfoS2C_MsgID(value)
	return nil
}
func (GetLeagueBattleSquadInfoS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor36, []int{43, 0}
}

type LeagueBattleChallengeC2S_MsgID int32

const (
	LeagueBattleChallengeC2S_eMsgID LeagueBattleChallengeC2S_MsgID = 4678
)

var LeagueBattleChallengeC2S_MsgID_name = map[int32]string{
	4678: "eMsgID",
}
var LeagueBattleChallengeC2S_MsgID_value = map[string]int32{
	"eMsgID": 4678,
}

func (x LeagueBattleChallengeC2S_MsgID) Enum() *LeagueBattleChallengeC2S_MsgID {
	p := new(LeagueBattleChallengeC2S_MsgID)
	*p = x
	return p
}
func (x LeagueBattleChallengeC2S_MsgID) String() string {
	return proto.EnumName(LeagueBattleChallengeC2S_MsgID_name, int32(x))
}
func (x *LeagueBattleChallengeC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LeagueBattleChallengeC2S_MsgID_value, data, "LeagueBattleChallengeC2S_MsgID")
	if err != nil {
		return err
	}
	*x = LeagueBattleChallengeC2S_MsgID(value)
	return nil
}
func (LeagueBattleChallengeC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor36, []int{44, 0}
}

type LeagueBattleChallengeS2C_MsgID int32

const (
	LeagueBattleChallengeS2C_eMsgID LeagueBattleChallengeS2C_MsgID = 4678
)

var LeagueBattleChallengeS2C_MsgID_name = map[int32]string{
	4678: "eMsgID",
}
var LeagueBattleChallengeS2C_MsgID_value = map[string]int32{
	"eMsgID": 4678,
}

func (x LeagueBattleChallengeS2C_MsgID) Enum() *LeagueBattleChallengeS2C_MsgID {
	p := new(LeagueBattleChallengeS2C_MsgID)
	*p = x
	return p
}
func (x LeagueBattleChallengeS2C_MsgID) String() string {
	return proto.EnumName(LeagueBattleChallengeS2C_MsgID_name, int32(x))
}
func (x *LeagueBattleChallengeS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LeagueBattleChallengeS2C_MsgID_value, data, "LeagueBattleChallengeS2C_MsgID")
	if err != nil {
		return err
	}
	*x = LeagueBattleChallengeS2C_MsgID(value)
	return nil
}
func (LeagueBattleChallengeS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor36, []int{45, 0}
}

type LeagueBattleUpdateChallengeCountS2C_MsgID int32

const (
	LeagueBattleUpdateChallengeCountS2C_eMsgID LeagueBattleUpdateChallengeCountS2C_MsgID = 4679
)

var LeagueBattleUpdateChallengeCountS2C_MsgID_name = map[int32]string{
	4679: "eMsgID",
}
var LeagueBattleUpdateChallengeCountS2C_MsgID_value = map[string]int32{
	"eMsgID": 4679,
}

func (x LeagueBattleUpdateChallengeCountS2C_MsgID) Enum() *LeagueBattleUpdateChallengeCountS2C_MsgID {
	p := new(LeagueBattleUpdateChallengeCountS2C_MsgID)
	*p = x
	return p
}
func (x LeagueBattleUpdateChallengeCountS2C_MsgID) String() string {
	return proto.EnumName(LeagueBattleUpdateChallengeCountS2C_MsgID_name, int32(x))
}
func (x *LeagueBattleUpdateChallengeCountS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LeagueBattleUpdateChallengeCountS2C_MsgID_value, data, "LeagueBattleUpdateChallengeCountS2C_MsgID")
	if err != nil {
		return err
	}
	*x = LeagueBattleUpdateChallengeCountS2C_MsgID(value)
	return nil
}
func (LeagueBattleUpdateChallengeCountS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor36, []int{46, 0}
}

type LeagueBattleUpdateSquadC2S_MsgID int32

const (
	LeagueBattleUpdateSquadC2S_eMsgID LeagueBattleUpdateSquadC2S_MsgID = 4680
)

var LeagueBattleUpdateSquadC2S_MsgID_name = map[int32]string{
	4680: "eMsgID",
}
var LeagueBattleUpdateSquadC2S_MsgID_value = map[string]int32{
	"eMsgID": 4680,
}

func (x LeagueBattleUpdateSquadC2S_MsgID) Enum() *LeagueBattleUpdateSquadC2S_MsgID {
	p := new(LeagueBattleUpdateSquadC2S_MsgID)
	*p = x
	return p
}
func (x LeagueBattleUpdateSquadC2S_MsgID) String() string {
	return proto.EnumName(LeagueBattleUpdateSquadC2S_MsgID_name, int32(x))
}
func (x *LeagueBattleUpdateSquadC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LeagueBattleUpdateSquadC2S_MsgID_value, data, "LeagueBattleUpdateSquadC2S_MsgID")
	if err != nil {
		return err
	}
	*x = LeagueBattleUpdateSquadC2S_MsgID(value)
	return nil
}
func (LeagueBattleUpdateSquadC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor36, []int{47, 0}
}

type LeagueBattleUpdateSquadS2C_MsgID int32

const (
	LeagueBattleUpdateSquadS2C_eMsgID LeagueBattleUpdateSquadS2C_MsgID = 4680
)

var LeagueBattleUpdateSquadS2C_MsgID_name = map[int32]string{
	4680: "eMsgID",
}
var LeagueBattleUpdateSquadS2C_MsgID_value = map[string]int32{
	"eMsgID": 4680,
}

func (x LeagueBattleUpdateSquadS2C_MsgID) Enum() *LeagueBattleUpdateSquadS2C_MsgID {
	p := new(LeagueBattleUpdateSquadS2C_MsgID)
	*p = x
	return p
}
func (x LeagueBattleUpdateSquadS2C_MsgID) String() string {
	return proto.EnumName(LeagueBattleUpdateSquadS2C_MsgID_name, int32(x))
}
func (x *LeagueBattleUpdateSquadS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LeagueBattleUpdateSquadS2C_MsgID_value, data, "LeagueBattleUpdateSquadS2C_MsgID")
	if err != nil {
		return err
	}
	*x = LeagueBattleUpdateSquadS2C_MsgID(value)
	return nil
}
func (LeagueBattleUpdateSquadS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor36, []int{48, 0}
}

type LeagueBattleUpdateStageS2C_MsgID int32

const (
	LeagueBattleUpdateStageS2C_eMsgID LeagueBattleUpdateStageS2C_MsgID = 4681
)

var LeagueBattleUpdateStageS2C_MsgID_name = map[int32]string{
	4681: "eMsgID",
}
var LeagueBattleUpdateStageS2C_MsgID_value = map[string]int32{
	"eMsgID": 4681,
}

func (x LeagueBattleUpdateStageS2C_MsgID) Enum() *LeagueBattleUpdateStageS2C_MsgID {
	p := new(LeagueBattleUpdateStageS2C_MsgID)
	*p = x
	return p
}
func (x LeagueBattleUpdateStageS2C_MsgID) String() string {
	return proto.EnumName(LeagueBattleUpdateStageS2C_MsgID_name, int32(x))
}
func (x *LeagueBattleUpdateStageS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LeagueBattleUpdateStageS2C_MsgID_value, data, "LeagueBattleUpdateStageS2C_MsgID")
	if err != nil {
		return err
	}
	*x = LeagueBattleUpdateStageS2C_MsgID(value)
	return nil
}
func (LeagueBattleUpdateStageS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor36, []int{49, 0}
}

type LeagueBattleEnterMatchS2C_MsgID int32

const (
	LeagueBattleEnterMatchS2C_eMsgID LeagueBattleEnterMatchS2C_MsgID = 4682
)

var LeagueBattleEnterMatchS2C_MsgID_name = map[int32]string{
	4682: "eMsgID",
}
var LeagueBattleEnterMatchS2C_MsgID_value = map[string]int32{
	"eMsgID": 4682,
}

func (x LeagueBattleEnterMatchS2C_MsgID) Enum() *LeagueBattleEnterMatchS2C_MsgID {
	p := new(LeagueBattleEnterMatchS2C_MsgID)
	*p = x
	return p
}
func (x LeagueBattleEnterMatchS2C_MsgID) String() string {
	return proto.EnumName(LeagueBattleEnterMatchS2C_MsgID_name, int32(x))
}
func (x *LeagueBattleEnterMatchS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LeagueBattleEnterMatchS2C_MsgID_value, data, "LeagueBattleEnterMatchS2C_MsgID")
	if err != nil {
		return err
	}
	*x = LeagueBattleEnterMatchS2C_MsgID(value)
	return nil
}
func (LeagueBattleEnterMatchS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor36, []int{50, 0}
}

// 联盟战季数、状态
type LeagueBattleSeasonState struct {
	// 季数
	Season *int32 `protobuf:"varint,1,opt,name=season" json:"season,omitempty"`
	// 是否有效
	Valid            *bool  `protobuf:"varint,2,opt,name=valid" json:"valid,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *LeagueBattleSeasonState) Reset()                    { *m = LeagueBattleSeasonState{} }
func (m *LeagueBattleSeasonState) String() string            { return proto.CompactTextString(m) }
func (*LeagueBattleSeasonState) ProtoMessage()               {}
func (*LeagueBattleSeasonState) Descriptor() ([]byte, []int) { return fileDescriptor36, []int{0} }

func (m *LeagueBattleSeasonState) GetSeason() int32 {
	if m != nil && m.Season != nil {
		return *m.Season
	}
	return 0
}

func (m *LeagueBattleSeasonState) GetValid() bool {
	if m != nil && m.Valid != nil {
		return *m.Valid
	}
	return false
}

// 联盟战时间节点
type LeagueBattleTimeNode struct {
	Time *int64 `protobuf:"varint,1,opt,name=time" json:"time,omitempty"`
	// 季数
	Season           *int32 `protobuf:"varint,2,opt,name=season" json:"season,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *LeagueBattleTimeNode) Reset()                    { *m = LeagueBattleTimeNode{} }
func (m *LeagueBattleTimeNode) String() string            { return proto.CompactTextString(m) }
func (*LeagueBattleTimeNode) ProtoMessage()               {}
func (*LeagueBattleTimeNode) Descriptor() ([]byte, []int) { return fileDescriptor36, []int{1} }

func (m *LeagueBattleTimeNode) GetTime() int64 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

func (m *LeagueBattleTimeNode) GetSeason() int32 {
	if m != nil && m.Season != nil {
		return *m.Season
	}
	return 0
}

// 联盟战数据
type LeagueBattleData struct {
	// 玩家id列表(出战顺序)
	GidList []int32 `protobuf:"varint,1,rep,name=gidList" json:"gidList,omitempty"`
	// 可参加比赛的玩家列表(准备阶段结束之后加入的联盟所有玩家，此刻之后加入的玩家没有参赛资格)
	CanEntryGidList []int32 `protobuf:"varint,2,rep,name=canEntryGidList" json:"canEntryGidList,omitempty"`
	// 联盟积分
	Score *int32 `protobuf:"varint,3,opt,name=score" json:"score,omitempty"`
	// 挑战次数
	ChallengeNum *int32 `protobuf:"varint,4,opt,name=challengeNum" json:"challengeNum,omitempty"`
	// 匹配cd
	MatchCD *int64 `protobuf:"varint,5,opt,name=matchCD" json:"matchCD,omitempty"`
	// 是否报名
	Apply *bool `protobuf:"varint,6,opt,name=apply" json:"apply,omitempty"`
	// 成员信息(查看己方和对方成员列表的时候用，特别是对方，如果用league里面的数据，就需要再取一次league，没必要)
	MemberInfoList []*LeagueBattleMemberInfo `protobuf:"bytes,7,rep,name=memberInfoList" json:"memberInfoList,omitempty"`
	// 下次记录gidList时间
	NextRecordGidListTime *int64 `protobuf:"varint,8,opt,name=nextRecordGidListTime" json:"nextRecordGidListTime,omitempty"`
	// 匹配到的对手列表
	OppIdList []int32 `protobuf:"varint,11,rep,name=oppIdList" json:"oppIdList,omitempty"`
	// 连胜场数
	WinningStreak *int32 `protobuf:"varint,12,opt,name=winningStreak" json:"winningStreak,omitempty"`
	// 上次启动挑战次数timer时间（可能是增加时启动，也可能是扣除时启动）
	LastChallengeCountStartTime *int64 `protobuf:"varint,14,opt,name=lastChallengeCountStartTime" json:"lastChallengeCountStartTime,omitempty"`
	// 下次清除联盟战数据时间
	NextClearLeagueBattleDataTime *int64 `protobuf:"varint,15,opt,name=nextClearLeagueBattleDataTime" json:"nextClearLeagueBattleDataTime,omitempty"`
	// 胜利次数，用于联盟战个人排行榜
	WinCountList []*TypeValueConfig `protobuf:"bytes,16,rep,name=winCountList" json:"winCountList,omitempty"`
	// 总战力
	TotalBattleValue *uint64 `protobuf:"varint,17,opt,name=totalBattleValue" json:"totalBattleValue,omitempty"`
	// 下次增加挑战次数时间
	NextAddChallengeCountTime *int64 `protobuf:"varint,18,opt,name=nextAddChallengeCountTime" json:"nextAddChallengeCountTime,omitempty"`
	XXX_unrecognized          []byte `json:"-"`
}

func (m *LeagueBattleData) Reset()                    { *m = LeagueBattleData{} }
func (m *LeagueBattleData) String() string            { return proto.CompactTextString(m) }
func (*LeagueBattleData) ProtoMessage()               {}
func (*LeagueBattleData) Descriptor() ([]byte, []int) { return fileDescriptor36, []int{2} }

func (m *LeagueBattleData) GetGidList() []int32 {
	if m != nil {
		return m.GidList
	}
	return nil
}

func (m *LeagueBattleData) GetCanEntryGidList() []int32 {
	if m != nil {
		return m.CanEntryGidList
	}
	return nil
}

func (m *LeagueBattleData) GetScore() int32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *LeagueBattleData) GetChallengeNum() int32 {
	if m != nil && m.ChallengeNum != nil {
		return *m.ChallengeNum
	}
	return 0
}

func (m *LeagueBattleData) GetMatchCD() int64 {
	if m != nil && m.MatchCD != nil {
		return *m.MatchCD
	}
	return 0
}

func (m *LeagueBattleData) GetApply() bool {
	if m != nil && m.Apply != nil {
		return *m.Apply
	}
	return false
}

func (m *LeagueBattleData) GetMemberInfoList() []*LeagueBattleMemberInfo {
	if m != nil {
		return m.MemberInfoList
	}
	return nil
}

func (m *LeagueBattleData) GetNextRecordGidListTime() int64 {
	if m != nil && m.NextRecordGidListTime != nil {
		return *m.NextRecordGidListTime
	}
	return 0
}

func (m *LeagueBattleData) GetOppIdList() []int32 {
	if m != nil {
		return m.OppIdList
	}
	return nil
}

func (m *LeagueBattleData) GetWinningStreak() int32 {
	if m != nil && m.WinningStreak != nil {
		return *m.WinningStreak
	}
	return 0
}

func (m *LeagueBattleData) GetLastChallengeCountStartTime() int64 {
	if m != nil && m.LastChallengeCountStartTime != nil {
		return *m.LastChallengeCountStartTime
	}
	return 0
}

func (m *LeagueBattleData) GetNextClearLeagueBattleDataTime() int64 {
	if m != nil && m.NextClearLeagueBattleDataTime != nil {
		return *m.NextClearLeagueBattleDataTime
	}
	return 0
}

func (m *LeagueBattleData) GetWinCountList() []*TypeValueConfig {
	if m != nil {
		return m.WinCountList
	}
	return nil
}

func (m *LeagueBattleData) GetTotalBattleValue() uint64 {
	if m != nil && m.TotalBattleValue != nil {
		return *m.TotalBattleValue
	}
	return 0
}

func (m *LeagueBattleData) GetNextAddChallengeCountTime() int64 {
	if m != nil && m.NextAddChallengeCountTime != nil {
		return *m.NextAddChallengeCountTime
	}
	return 0
}

// 成员信息
type LeagueBattleMemberInfo struct {
	// 名字
	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// 图标
	Icon *int32 `protobuf:"varint,2,opt,name=icon" json:"icon,omitempty"`
	// id
	Gid *int32 `protobuf:"varint,3,opt,name=gid" json:"gid,omitempty"`
	// 等级
	Lv *int32 `protobuf:"varint,4,opt,name=lv" json:"lv,omitempty"`
	// 战力
	BattleValue      *uint64 `protobuf:"varint,5,opt,name=battleValue" json:"battleValue,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *LeagueBattleMemberInfo) Reset()                    { *m = LeagueBattleMemberInfo{} }
func (m *LeagueBattleMemberInfo) String() string            { return proto.CompactTextString(m) }
func (*LeagueBattleMemberInfo) ProtoMessage()               {}
func (*LeagueBattleMemberInfo) Descriptor() ([]byte, []int) { return fileDescriptor36, []int{3} }

func (m *LeagueBattleMemberInfo) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *LeagueBattleMemberInfo) GetIcon() int32 {
	if m != nil && m.Icon != nil {
		return *m.Icon
	}
	return 0
}

func (m *LeagueBattleMemberInfo) GetGid() int32 {
	if m != nil && m.Gid != nil {
		return *m.Gid
	}
	return 0
}

func (m *LeagueBattleMemberInfo) GetLv() int32 {
	if m != nil && m.Lv != nil {
		return *m.Lv
	}
	return 0
}

func (m *LeagueBattleMemberInfo) GetBattleValue() uint64 {
	if m != nil && m.BattleValue != nil {
		return *m.BattleValue
	}
	return 0
}

// 联盟战展示信息
type LeagueBattleShowInfo struct {
	// 联盟id
	Lid *int32 `protobuf:"varint,1,opt,name=lid" json:"lid,omitempty"`
	// 联盟名字
	Name *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// logo
	Logo             *LeagueLogo `protobuf:"bytes,3,opt,name=logo" json:"logo,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *LeagueBattleShowInfo) Reset()                    { *m = LeagueBattleShowInfo{} }
func (m *LeagueBattleShowInfo) String() string            { return proto.CompactTextString(m) }
func (*LeagueBattleShowInfo) ProtoMessage()               {}
func (*LeagueBattleShowInfo) Descriptor() ([]byte, []int) { return fileDescriptor36, []int{4} }

func (m *LeagueBattleShowInfo) GetLid() int32 {
	if m != nil && m.Lid != nil {
		return *m.Lid
	}
	return 0
}

func (m *LeagueBattleShowInfo) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *LeagueBattleShowInfo) GetLogo() *LeagueLogo {
	if m != nil {
		return m.Logo
	}
	return nil
}

// 联盟战比赛信息展示信息
type LeagueBattleMatchShowInfo struct {
	// 联盟信息
	LeagueInfo *LeagueBattleShowInfo `protobuf:"bytes,1,opt,name=leagueInfo" json:"leagueInfo,omitempty"`
	// 战力
	BattleValue *uint64 `protobuf:"varint,2,opt,name=battleValue" json:"battleValue,omitempty"`
	// 积分
	Score            *int32 `protobuf:"varint,3,opt,name=score" json:"score,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *LeagueBattleMatchShowInfo) Reset()                    { *m = LeagueBattleMatchShowInfo{} }
func (m *LeagueBattleMatchShowInfo) String() string            { return proto.CompactTextString(m) }
func (*LeagueBattleMatchShowInfo) ProtoMessage()               {}
func (*LeagueBattleMatchShowInfo) Descriptor() ([]byte, []int) { return fileDescriptor36, []int{5} }

func (m *LeagueBattleMatchShowInfo) GetLeagueInfo() *LeagueBattleShowInfo {
	if m != nil {
		return m.LeagueInfo
	}
	return nil
}

func (m *LeagueBattleMatchShowInfo) GetBattleValue() uint64 {
	if m != nil && m.BattleValue != nil {
		return *m.BattleValue
	}
	return 0
}

func (m *LeagueBattleMatchShowInfo) GetScore() int32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

// 联盟战阵容
type LeagueBattleSquad struct {
	// 阵型数据
	SquadInfo        []*PvpRoleSquadInfo `protobuf:"bytes,3,rep,name=squadInfo" json:"squadInfo,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *LeagueBattleSquad) Reset()                    { *m = LeagueBattleSquad{} }
func (m *LeagueBattleSquad) String() string            { return proto.CompactTextString(m) }
func (*LeagueBattleSquad) ProtoMessage()               {}
func (*LeagueBattleSquad) Descriptor() ([]byte, []int) { return fileDescriptor36, []int{6} }

func (m *LeagueBattleSquad) GetSquadInfo() []*PvpRoleSquadInfo {
	if m != nil {
		return m.SquadInfo
	}
	return nil
}

// 联盟战战斗记录
type LeagueBattleFightRecord struct {
	// 对方联盟展示信息
	OppLeagueInfo *LeagueBattleShowInfo `protobuf:"bytes,1,opt,name=oppLeagueInfo" json:"oppLeagueInfo,omitempty"`
	// 增加积分
	AddScore *int32 `protobuf:"varint,2,opt,name=addScore" json:"addScore,omitempty"`
	// 是否胜利
	IsWin *bool `protobuf:"varint,3,opt,name=isWin" json:"isWin,omitempty"`
	// 简报1id
	SimpleReport1Id  *int64 `protobuf:"varint,4,opt,name=simpleReport1Id" json:"simpleReport1Id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *LeagueBattleFightRecord) Reset()                    { *m = LeagueBattleFightRecord{} }
func (m *LeagueBattleFightRecord) String() string            { return proto.CompactTextString(m) }
func (*LeagueBattleFightRecord) ProtoMessage()               {}
func (*LeagueBattleFightRecord) Descriptor() ([]byte, []int) { return fileDescriptor36, []int{7} }

func (m *LeagueBattleFightRecord) GetOppLeagueInfo() *LeagueBattleShowInfo {
	if m != nil {
		return m.OppLeagueInfo
	}
	return nil
}

func (m *LeagueBattleFightRecord) GetAddScore() int32 {
	if m != nil && m.AddScore != nil {
		return *m.AddScore
	}
	return 0
}

func (m *LeagueBattleFightRecord) GetIsWin() bool {
	if m != nil && m.IsWin != nil {
		return *m.IsWin
	}
	return false
}

func (m *LeagueBattleFightRecord) GetSimpleReport1Id() int64 {
	if m != nil && m.SimpleReport1Id != nil {
		return *m.SimpleReport1Id
	}
	return 0
}

// 简报1包含简报2
// 简报1:一次挑战的所有战报,key:LeagueBattleFightRecord.FightReportId
type LeagueBattleSimpleFightReport1 struct {
	// 联盟展示信息
	ShowInfos []*LeagueBattleShowInfo `protobuf:"bytes,1,rep,name=showInfos" json:"showInfos,omitempty"`
	// 战报列表
	Report2List []*LeagueBattleInnerSimpleFightReport2 `protobuf:"bytes,2,rep,name=report2List" json:"report2List,omitempty"`
	// 是否胜利（第一个联盟）
	IsWin *bool `protobuf:"varint,3,opt,name=isWin" json:"isWin,omitempty"`
	// 比赛比分（胜负场次）
	GameScore        []int32 `protobuf:"varint,4,rep,name=gameScore" json:"gameScore,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *LeagueBattleSimpleFightReport1) Reset()         { *m = LeagueBattleSimpleFightReport1{} }
func (m *LeagueBattleSimpleFightReport1) String() string { return proto.CompactTextString(m) }
func (*LeagueBattleSimpleFightReport1) ProtoMessage()    {}
func (*LeagueBattleSimpleFightReport1) Descriptor() ([]byte, []int) {
	return fileDescriptor36, []int{8}
}

func (m *LeagueBattleSimpleFightReport1) GetShowInfos() []*LeagueBattleShowInfo {
	if m != nil {
		return m.ShowInfos
	}
	return nil
}

func (m *LeagueBattleSimpleFightReport1) GetReport2List() []*LeagueBattleInnerSimpleFightReport2 {
	if m != nil {
		return m.Report2List
	}
	return nil
}

func (m *LeagueBattleSimpleFightReport1) GetIsWin() bool {
	if m != nil && m.IsWin != nil {
		return *m.IsWin
	}
	return false
}

func (m *LeagueBattleSimpleFightReport1) GetGameScore() []int32 {
	if m != nil {
		return m.GameScore
	}
	return nil
}

// 简报2
type LeagueBattleInnerSimpleFightReport2 struct {
	// 参赛双方玩家信息
	GamerInfoList []*LeagueBattleGamerInfo `protobuf:"bytes,2,rep,name=gamerInfoList" json:"gamerInfoList,omitempty"`
	// 比分
	GameScore []int32 `protobuf:"varint,3,rep,name=gameScore" json:"gameScore,omitempty"`
	// 战报id
	FightReportId    *int64 `protobuf:"varint,4,opt,name=fightReportId" json:"fightReportId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *LeagueBattleInnerSimpleFightReport2) Reset()         { *m = LeagueBattleInnerSimpleFightReport2{} }
func (m *LeagueBattleInnerSimpleFightReport2) String() string { return proto.CompactTextString(m) }
func (*LeagueBattleInnerSimpleFightReport2) ProtoMessage()    {}
func (*LeagueBattleInnerSimpleFightReport2) Descriptor() ([]byte, []int) {
	return fileDescriptor36, []int{9}
}

func (m *LeagueBattleInnerSimpleFightReport2) GetGamerInfoList() []*LeagueBattleGamerInfo {
	if m != nil {
		return m.GamerInfoList
	}
	return nil
}

func (m *LeagueBattleInnerSimpleFightReport2) GetGameScore() []int32 {
	if m != nil {
		return m.GameScore
	}
	return nil
}

func (m *LeagueBattleInnerSimpleFightReport2) GetFightReportId() int64 {
	if m != nil && m.FightReportId != nil {
		return *m.FightReportId
	}
	return 0
}

// 联盟战战报（一次玩家对决的战报，三场比赛、三个联盟战阵容的对决）
type LeagueBattleFightReport struct {
	// 参赛双方信息
	GamerInfoList []*LeagueBattleGamerInfo `protobuf:"bytes,1,rep,name=gamerInfoList" json:"gamerInfoList,omitempty"`
	// 战斗结果
	FightResult *FightResultList `protobuf:"bytes,2,opt,name=fightResult" json:"fightResult,omitempty"`
	// ID
	ReportId         *int64 `protobuf:"varint,3,opt,name=reportId" json:"reportId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *LeagueBattleFightReport) Reset()                    { *m = LeagueBattleFightReport{} }
func (m *LeagueBattleFightReport) String() string            { return proto.CompactTextString(m) }
func (*LeagueBattleFightReport) ProtoMessage()               {}
func (*LeagueBattleFightReport) Descriptor() ([]byte, []int) { return fileDescriptor36, []int{10} }

func (m *LeagueBattleFightReport) GetGamerInfoList() []*LeagueBattleGamerInfo {
	if m != nil {
		return m.GamerInfoList
	}
	return nil
}

func (m *LeagueBattleFightReport) GetFightResult() *FightResultList {
	if m != nil {
		return m.FightResult
	}
	return nil
}

func (m *LeagueBattleFightReport) GetReportId() int64 {
	if m != nil && m.ReportId != nil {
		return *m.ReportId
	}
	return 0
}

// 比赛队伍信息
type LeagueBattleGamerInfo struct {
	Gid              *int32  `protobuf:"varint,1,opt,name=gid" json:"gid,omitempty"`
	GamerName        *string `protobuf:"bytes,2,opt,name=gamerName" json:"gamerName,omitempty"`
	TeamIcon         *int32  `protobuf:"varint,3,opt,name=teamIcon" json:"teamIcon,omitempty"`
	AreaName         *string `protobuf:"bytes,4,opt,name=areaName" json:"areaName,omitempty"`
	Lv               *int32  `protobuf:"varint,5,opt,name=lv" json:"lv,omitempty"`
	BattleValue      *uint64 `protobuf:"varint,6,opt,name=battleValue" json:"battleValue,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *LeagueBattleGamerInfo) Reset()                    { *m = LeagueBattleGamerInfo{} }
func (m *LeagueBattleGamerInfo) String() string            { return proto.CompactTextString(m) }
func (*LeagueBattleGamerInfo) ProtoMessage()               {}
func (*LeagueBattleGamerInfo) Descriptor() ([]byte, []int) { return fileDescriptor36, []int{11} }

func (m *LeagueBattleGamerInfo) GetGid() int32 {
	if m != nil && m.Gid != nil {
		return *m.Gid
	}
	return 0
}

func (m *LeagueBattleGamerInfo) GetGamerName() string {
	if m != nil && m.GamerName != nil {
		return *m.GamerName
	}
	return ""
}

func (m *LeagueBattleGamerInfo) GetTeamIcon() int32 {
	if m != nil && m.TeamIcon != nil {
		return *m.TeamIcon
	}
	return 0
}

func (m *LeagueBattleGamerInfo) GetAreaName() string {
	if m != nil && m.AreaName != nil {
		return *m.AreaName
	}
	return ""
}

func (m *LeagueBattleGamerInfo) GetLv() int32 {
	if m != nil && m.Lv != nil {
		return *m.Lv
	}
	return 0
}

func (m *LeagueBattleGamerInfo) GetBattleValue() uint64 {
	if m != nil && m.BattleValue != nil {
		return *m.BattleValue
	}
	return 0
}

// 联盟战当前阶段信息
type LeagueBattleCurrentStageInfo struct {
	// 阶段
	Stage *LeagueBattleStage `protobuf:"varint,1,opt,name=stage,enum=LeagueBattleStage" json:"stage,omitempty"`
	// 当前阶段结束时间(客户端展示)
	EndTime          *int64 `protobuf:"varint,2,opt,name=endTime" json:"endTime,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *LeagueBattleCurrentStageInfo) Reset()                    { *m = LeagueBattleCurrentStageInfo{} }
func (m *LeagueBattleCurrentStageInfo) String() string            { return proto.CompactTextString(m) }
func (*LeagueBattleCurrentStageInfo) ProtoMessage()               {}
func (*LeagueBattleCurrentStageInfo) Descriptor() ([]byte, []int) { return fileDescriptor36, []int{12} }

func (m *LeagueBattleCurrentStageInfo) GetStage() LeagueBattleStage {
	if m != nil && m.Stage != nil {
		return *m.Stage
	}
	return LeagueBattleStage_LBS_APPLY
}

func (m *LeagueBattleCurrentStageInfo) GetEndTime() int64 {
	if m != nil && m.EndTime != nil {
		return *m.EndTime
	}
	return 0
}

// 联盟战报名阶段左侧展示信息
type LeagueBattleApplyShowInfo struct {
	// 赛季
	Season *int32 `protobuf:"varint,1,opt,name=season" json:"season,omitempty"`
	// 赛季前四名
	ShowInfoList []*LeagueBattleShowInfo `protobuf:"bytes,2,rep,name=showInfoList" json:"showInfoList,omitempty"`
	// 下次记录时间
	NextRecordTime   *int64 `protobuf:"varint,3,opt,name=nextRecordTime" json:"nextRecordTime,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *LeagueBattleApplyShowInfo) Reset()                    { *m = LeagueBattleApplyShowInfo{} }
func (m *LeagueBattleApplyShowInfo) String() string            { return proto.CompactTextString(m) }
func (*LeagueBattleApplyShowInfo) ProtoMessage()               {}
func (*LeagueBattleApplyShowInfo) Descriptor() ([]byte, []int) { return fileDescriptor36, []int{13} }

func (m *LeagueBattleApplyShowInfo) GetSeason() int32 {
	if m != nil && m.Season != nil {
		return *m.Season
	}
	return 0
}

func (m *LeagueBattleApplyShowInfo) GetShowInfoList() []*LeagueBattleShowInfo {
	if m != nil {
		return m.ShowInfoList
	}
	return nil
}

func (m *LeagueBattleApplyShowInfo) GetNextRecordTime() int64 {
	if m != nil && m.NextRecordTime != nil {
		return *m.NextRecordTime
	}
	return 0
}

// 联盟战挑战结果展示信息
type LeagueBattleChallengeResultShowInfo struct {
	LeagueInfo       *LeagueBattleShowInfo `protobuf:"bytes,1,opt,name=leagueInfo" json:"leagueInfo,omitempty"`
	WinCount         *int32                `protobuf:"varint,2,opt,name=winCount" json:"winCount,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *LeagueBattleChallengeResultShowInfo) Reset()         { *m = LeagueBattleChallengeResultShowInfo{} }
func (m *LeagueBattleChallengeResultShowInfo) String() string { return proto.CompactTextString(m) }
func (*LeagueBattleChallengeResultShowInfo) ProtoMessage()    {}
func (*LeagueBattleChallengeResultShowInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor36, []int{14}
}

func (m *LeagueBattleChallengeResultShowInfo) GetLeagueInfo() *LeagueBattleShowInfo {
	if m != nil {
		return m.LeagueInfo
	}
	return nil
}

func (m *LeagueBattleChallengeResultShowInfo) GetWinCount() int32 {
	if m != nil && m.WinCount != nil {
		return *m.WinCount
	}
	return 0
}

// 联盟战决赛信息(客户端展示)
type LeagueBattleFinalInfo struct {
	// 战斗信息
	RoundInfo        []*LeagueBattleFinalInfoList `protobuf:"bytes,1,rep,name=roundInfo" json:"roundInfo,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *LeagueBattleFinalInfo) Reset()                    { *m = LeagueBattleFinalInfo{} }
func (m *LeagueBattleFinalInfo) String() string            { return proto.CompactTextString(m) }
func (*LeagueBattleFinalInfo) ProtoMessage()               {}
func (*LeagueBattleFinalInfo) Descriptor() ([]byte, []int) { return fileDescriptor36, []int{15} }

func (m *LeagueBattleFinalInfo) GetRoundInfo() []*LeagueBattleFinalInfoList {
	if m != nil {
		return m.RoundInfo
	}
	return nil
}

// 联盟战决赛信息列表（一轮数据）
type LeagueBattleFinalInfoList struct {
	Info             []*LeagueBattleFinalFightInfo `protobuf:"bytes,1,rep,name=info" json:"info,omitempty"`
	XXX_unrecognized []byte                        `json:"-"`
}

func (m *LeagueBattleFinalInfoList) Reset()                    { *m = LeagueBattleFinalInfoList{} }
func (m *LeagueBattleFinalInfoList) String() string            { return proto.CompactTextString(m) }
func (*LeagueBattleFinalInfoList) ProtoMessage()               {}
func (*LeagueBattleFinalInfoList) Descriptor() ([]byte, []int) { return fileDescriptor36, []int{16} }

func (m *LeagueBattleFinalInfoList) GetInfo() []*LeagueBattleFinalFightInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

// 联盟战决赛战斗信息
type LeagueBattleFinalFightInfo struct {
	// 战斗双方展示信息
	Infos []*LeagueBattleShowInfo `protobuf:"bytes,1,rep,name=infos" json:"infos,omitempty"`
	// 赢家id
	WinnerId *int32 `protobuf:"varint,2,opt,name=winnerId" json:"winnerId,omitempty"`
	// 战报id
	FightReportId *int64 `protobuf:"varint,3,opt,name=fightReportId" json:"fightReportId,omitempty"`
	// 是否展示战斗结果
	ShowFightResult  *bool  `protobuf:"varint,4,opt,name=showFightResult" json:"showFightResult,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *LeagueBattleFinalFightInfo) Reset()                    { *m = LeagueBattleFinalFightInfo{} }
func (m *LeagueBattleFinalFightInfo) String() string            { return proto.CompactTextString(m) }
func (*LeagueBattleFinalFightInfo) ProtoMessage()               {}
func (*LeagueBattleFinalFightInfo) Descriptor() ([]byte, []int) { return fileDescriptor36, []int{17} }

func (m *LeagueBattleFinalFightInfo) GetInfos() []*LeagueBattleShowInfo {
	if m != nil {
		return m.Infos
	}
	return nil
}

func (m *LeagueBattleFinalFightInfo) GetWinnerId() int32 {
	if m != nil && m.WinnerId != nil {
		return *m.WinnerId
	}
	return 0
}

func (m *LeagueBattleFinalFightInfo) GetFightReportId() int64 {
	if m != nil && m.FightReportId != nil {
		return *m.FightReportId
	}
	return 0
}

func (m *LeagueBattleFinalFightInfo) GetShowFightResult() bool {
	if m != nil && m.ShowFightResult != nil {
		return *m.ShowFightResult
	}
	return false
}

// 玩家提交联盟战阵容请求
type LeagueBattleSubmitSquadReq struct {
	// 联盟成员联盟战信息
	MemberInfo       *LeagueBattleMemberInfo `protobuf:"bytes,1,opt,name=memberInfo" json:"memberInfo,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *LeagueBattleSubmitSquadReq) Reset()                    { *m = LeagueBattleSubmitSquadReq{} }
func (m *LeagueBattleSubmitSquadReq) String() string            { return proto.CompactTextString(m) }
func (*LeagueBattleSubmitSquadReq) ProtoMessage()               {}
func (*LeagueBattleSubmitSquadReq) Descriptor() ([]byte, []int) { return fileDescriptor36, []int{18} }

func (m *LeagueBattleSubmitSquadReq) GetMemberInfo() *LeagueBattleMemberInfo {
	if m != nil {
		return m.MemberInfo
	}
	return nil
}

// 比赛结果
type LeagueBattleResult struct {
	// 积分
	Score *int32 `protobuf:"varint,2,opt,name=score" json:"score,omitempty"`
	// ID
	Id               *int64 `protobuf:"varint,3,opt,name=id" json:"id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *LeagueBattleResult) Reset()                    { *m = LeagueBattleResult{} }
func (m *LeagueBattleResult) String() string            { return proto.CompactTextString(m) }
func (*LeagueBattleResult) ProtoMessage()               {}
func (*LeagueBattleResult) Descriptor() ([]byte, []int) { return fileDescriptor36, []int{19} }

func (m *LeagueBattleResult) GetScore() int32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *LeagueBattleResult) GetId() int64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

// 联盟战：报名
type LeagueBattleApplyC2S struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *LeagueBattleApplyC2S) Reset()                    { *m = LeagueBattleApplyC2S{} }
func (m *LeagueBattleApplyC2S) String() string            { return proto.CompactTextString(m) }
func (*LeagueBattleApplyC2S) ProtoMessage()               {}
func (*LeagueBattleApplyC2S) Descriptor() ([]byte, []int) { return fileDescriptor36, []int{20} }

// 联盟战：报名
type LeagueBattleApplyS2C struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *LeagueBattleApplyS2C) Reset()                    { *m = LeagueBattleApplyS2C{} }
func (m *LeagueBattleApplyS2C) String() string            { return proto.CompactTextString(m) }
func (*LeagueBattleApplyS2C) ProtoMessage()               {}
func (*LeagueBattleApplyS2C) Descriptor() ([]byte, []int) { return fileDescriptor36, []int{21} }

// 联盟战：玩家提交联盟战阵容
type LeagueBattleSubmitSquadC2S struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *LeagueBattleSubmitSquadC2S) Reset()                    { *m = LeagueBattleSubmitSquadC2S{} }
func (m *LeagueBattleSubmitSquadC2S) String() string            { return proto.CompactTextString(m) }
func (*LeagueBattleSubmitSquadC2S) ProtoMessage()               {}
func (*LeagueBattleSubmitSquadC2S) Descriptor() ([]byte, []int) { return fileDescriptor36, []int{22} }

// 联盟战：玩家提交联盟战阵容
type LeagueBattleSubmitSquadS2C struct {
	Info             *LeagueBattleMemberInfo `protobuf:"bytes,1,opt,name=info" json:"info,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *LeagueBattleSubmitSquadS2C) Reset()                    { *m = LeagueBattleSubmitSquadS2C{} }
func (m *LeagueBattleSubmitSquadS2C) String() string            { return proto.CompactTextString(m) }
func (*LeagueBattleSubmitSquadS2C) ProtoMessage()               {}
func (*LeagueBattleSubmitSquadS2C) Descriptor() ([]byte, []int) { return fileDescriptor36, []int{23} }

func (m *LeagueBattleSubmitSquadS2C) GetInfo() *LeagueBattleMemberInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

// 联盟战：调整出战顺序
type LeagueBattleChangeFightOrderC2S struct {
	GidList          []int32 `protobuf:"varint,1,rep,name=gidList" json:"gidList,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *LeagueBattleChangeFightOrderC2S) Reset()         { *m = LeagueBattleChangeFightOrderC2S{} }
func (m *LeagueBattleChangeFightOrderC2S) String() string { return proto.CompactTextString(m) }
func (*LeagueBattleChangeFightOrderC2S) ProtoMessage()    {}
func (*LeagueBattleChangeFightOrderC2S) Descriptor() ([]byte, []int) {
	return fileDescriptor36, []int{24}
}

func (m *LeagueBattleChangeFightOrderC2S) GetGidList() []int32 {
	if m != nil {
		return m.GidList
	}
	return nil
}

// 联盟战：调整出战顺序
type LeagueBattleChangeFightOrderS2C struct {
	GidList          []int32 `protobuf:"varint,1,rep,name=gidList" json:"gidList,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *LeagueBattleChangeFightOrderS2C) Reset()         { *m = LeagueBattleChangeFightOrderS2C{} }
func (m *LeagueBattleChangeFightOrderS2C) String() string { return proto.CompactTextString(m) }
func (*LeagueBattleChangeFightOrderS2C) ProtoMessage()    {}
func (*LeagueBattleChangeFightOrderS2C) Descriptor() ([]byte, []int) {
	return fileDescriptor36, []int{25}
}

func (m *LeagueBattleChangeFightOrderS2C) GetGidList() []int32 {
	if m != nil {
		return m.GidList
	}
	return nil
}

// 联盟战：联盟战匹配
type LeagueBattleMatchC2S struct {
	GidList          []int32 `protobuf:"varint,1,rep,name=gidList" json:"gidList,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *LeagueBattleMatchC2S) Reset()                    { *m = LeagueBattleMatchC2S{} }
func (m *LeagueBattleMatchC2S) String() string            { return proto.CompactTextString(m) }
func (*LeagueBattleMatchC2S) ProtoMessage()               {}
func (*LeagueBattleMatchC2S) Descriptor() ([]byte, []int) { return fileDescriptor36, []int{26} }

func (m *LeagueBattleMatchC2S) GetGidList() []int32 {
	if m != nil {
		return m.GidList
	}
	return nil
}

// 联盟战匹配
type LeagueBattleMatchS2C struct {
	// 匹配信息
	InfoList []*LeagueBattleMatchShowInfo `protobuf:"bytes,1,rep,name=infoList" json:"infoList,omitempty"`
	// cd
	Cd               *int64 `protobuf:"varint,2,opt,name=cd" json:"cd,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *LeagueBattleMatchS2C) Reset()                    { *m = LeagueBattleMatchS2C{} }
func (m *LeagueBattleMatchS2C) String() string            { return proto.CompactTextString(m) }
func (*LeagueBattleMatchS2C) ProtoMessage()               {}
func (*LeagueBattleMatchS2C) Descriptor() ([]byte, []int) { return fileDescriptor36, []int{27} }

func (m *LeagueBattleMatchS2C) GetInfoList() []*LeagueBattleMatchShowInfo {
	if m != nil {
		return m.InfoList
	}
	return nil
}

func (m *LeagueBattleMatchS2C) GetCd() int64 {
	if m != nil && m.Cd != nil {
		return *m.Cd
	}
	return 0
}

// 获取联盟战对手信息
type GetLeagueBattleOppDetailInfoC2S struct {
	LeagueId         *int32 `protobuf:"varint,1,opt,name=leagueId" json:"leagueId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GetLeagueBattleOppDetailInfoC2S) Reset()         { *m = GetLeagueBattleOppDetailInfoC2S{} }
func (m *GetLeagueBattleOppDetailInfoC2S) String() string { return proto.CompactTextString(m) }
func (*GetLeagueBattleOppDetailInfoC2S) ProtoMessage()    {}
func (*GetLeagueBattleOppDetailInfoC2S) Descriptor() ([]byte, []int) {
	return fileDescriptor36, []int{28}
}

func (m *GetLeagueBattleOppDetailInfoC2S) GetLeagueId() int32 {
	if m != nil && m.LeagueId != nil {
		return *m.LeagueId
	}
	return 0
}

// 获取联盟战对手信息
type GetLeagueBattleOppDetailInfoS2C struct {
	ShowInfo *LeagueBattleMatchShowInfo `protobuf:"bytes,1,opt,name=showInfo" json:"showInfo,omitempty"`
	// 对手出战顺序列表
	InfoList         []*LeagueBattleMemberInfo `protobuf:"bytes,2,rep,name=infoList" json:"infoList,omitempty"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *GetLeagueBattleOppDetailInfoS2C) Reset()         { *m = GetLeagueBattleOppDetailInfoS2C{} }
func (m *GetLeagueBattleOppDetailInfoS2C) String() string { return proto.CompactTextString(m) }
func (*GetLeagueBattleOppDetailInfoS2C) ProtoMessage()    {}
func (*GetLeagueBattleOppDetailInfoS2C) Descriptor() ([]byte, []int) {
	return fileDescriptor36, []int{29}
}

func (m *GetLeagueBattleOppDetailInfoS2C) GetShowInfo() *LeagueBattleMatchShowInfo {
	if m != nil {
		return m.ShowInfo
	}
	return nil
}

func (m *GetLeagueBattleOppDetailInfoS2C) GetInfoList() []*LeagueBattleMemberInfo {
	if m != nil {
		return m.InfoList
	}
	return nil
}

// 获取联盟战信息
type GetLeagueBattleInfoC2S struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *GetLeagueBattleInfoC2S) Reset()                    { *m = GetLeagueBattleInfoC2S{} }
func (m *GetLeagueBattleInfoC2S) String() string            { return proto.CompactTextString(m) }
func (*GetLeagueBattleInfoC2S) ProtoMessage()               {}
func (*GetLeagueBattleInfoC2S) Descriptor() ([]byte, []int) { return fileDescriptor36, []int{30} }

// 获取联盟战信息
type GetLeagueBattleInfoS2C struct {
	// 当前阶段
	CurrentStage *LeagueBattleStage `protobuf:"varint,1,opt,name=currentStage,enum=LeagueBattleStage" json:"currentStage,omitempty"`
	// 当前阶段
	CurrentStageEndTime *int64 `protobuf:"varint,2,opt,name=currentStageEndTime" json:"currentStageEndTime,omitempty"`
	// 排名
	Ranking *int32 `protobuf:"varint,3,opt,name=ranking" json:"ranking,omitempty"`
	// 挑战次数
	ChallengeCount *int32 `protobuf:"varint,4,opt,name=challengeCount" json:"challengeCount,omitempty"`
	// 积分
	Score *int32 `protobuf:"varint,5,opt,name=score" json:"score,omitempty"`
	// 下次刷新挑战次数时间
	NextRefreshChallengeCountTime *int64 `protobuf:"varint,6,opt,name=nextRefreshChallengeCountTime" json:"nextRefreshChallengeCountTime,omitempty"`
	// 可参加比赛的玩家列表(报名阶段结束之后加入的联盟所有玩家，此刻之后加入的玩家没有参赛资格)
	CanEntryGidList []int32 `protobuf:"varint,7,rep,name=canEntryGidList" json:"canEntryGidList,omitempty"`
	// 下一季联盟战开始时间
	NextSeasonStartTime *int64 `protobuf:"varint,8,opt,name=NextSeasonStartTime" json:"NextSeasonStartTime,omitempty"`
	// 是否报名
	IsApply *bool `protobuf:"varint,9,opt,name=isApply" json:"isApply,omitempty"`
	// 本季联盟战是否有效
	Valid *bool `protobuf:"varint,10,opt,name=valid" json:"valid,omitempty"`
	// 本区服联盟战开启时间
	AreaOpenTime     *int64 `protobuf:"varint,11,opt,name=areaOpenTime" json:"areaOpenTime,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GetLeagueBattleInfoS2C) Reset()                    { *m = GetLeagueBattleInfoS2C{} }
func (m *GetLeagueBattleInfoS2C) String() string            { return proto.CompactTextString(m) }
func (*GetLeagueBattleInfoS2C) ProtoMessage()               {}
func (*GetLeagueBattleInfoS2C) Descriptor() ([]byte, []int) { return fileDescriptor36, []int{31} }

func (m *GetLeagueBattleInfoS2C) GetCurrentStage() LeagueBattleStage {
	if m != nil && m.CurrentStage != nil {
		return *m.CurrentStage
	}
	return LeagueBattleStage_LBS_APPLY
}

func (m *GetLeagueBattleInfoS2C) GetCurrentStageEndTime() int64 {
	if m != nil && m.CurrentStageEndTime != nil {
		return *m.CurrentStageEndTime
	}
	return 0
}

func (m *GetLeagueBattleInfoS2C) GetRanking() int32 {
	if m != nil && m.Ranking != nil {
		return *m.Ranking
	}
	return 0
}

func (m *GetLeagueBattleInfoS2C) GetChallengeCount() int32 {
	if m != nil && m.ChallengeCount != nil {
		return *m.ChallengeCount
	}
	return 0
}

func (m *GetLeagueBattleInfoS2C) GetScore() int32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *GetLeagueBattleInfoS2C) GetNextRefreshChallengeCountTime() int64 {
	if m != nil && m.NextRefreshChallengeCountTime != nil {
		return *m.NextRefreshChallengeCountTime
	}
	return 0
}

func (m *GetLeagueBattleInfoS2C) GetCanEntryGidList() []int32 {
	if m != nil {
		return m.CanEntryGidList
	}
	return nil
}

func (m *GetLeagueBattleInfoS2C) GetNextSeasonStartTime() int64 {
	if m != nil && m.NextSeasonStartTime != nil {
		return *m.NextSeasonStartTime
	}
	return 0
}

func (m *GetLeagueBattleInfoS2C) GetIsApply() bool {
	if m != nil && m.IsApply != nil {
		return *m.IsApply
	}
	return false
}

func (m *GetLeagueBattleInfoS2C) GetValid() bool {
	if m != nil && m.Valid != nil {
		return *m.Valid
	}
	return false
}

func (m *GetLeagueBattleInfoS2C) GetAreaOpenTime() int64 {
	if m != nil && m.AreaOpenTime != nil {
		return *m.AreaOpenTime
	}
	return 0
}

// 更新联盟战队伍信息（联盟战队伍有更新时推送到官员客户端）
type UpdateLeagueBattleTeamInfoS2C struct {
	// 玩家联盟战队伍信息(客户端有则)
	TeamInfo *LeagueBattleMemberInfo `protobuf:"bytes,1,opt,name=teamInfo" json:"teamInfo,omitempty"`
	// 更新类型
	UpdateType       *UpdateLeagueBattleTeamInfoType `protobuf:"varint,2,opt,name=updateType,enum=UpdateLeagueBattleTeamInfoType" json:"updateType,omitempty"`
	XXX_unrecognized []byte                          `json:"-"`
}

func (m *UpdateLeagueBattleTeamInfoS2C) Reset()         { *m = UpdateLeagueBattleTeamInfoS2C{} }
func (m *UpdateLeagueBattleTeamInfoS2C) String() string { return proto.CompactTextString(m) }
func (*UpdateLeagueBattleTeamInfoS2C) ProtoMessage()    {}
func (*UpdateLeagueBattleTeamInfoS2C) Descriptor() ([]byte, []int) {
	return fileDescriptor36, []int{32}
}

func (m *UpdateLeagueBattleTeamInfoS2C) GetTeamInfo() *LeagueBattleMemberInfo {
	if m != nil {
		return m.TeamInfo
	}
	return nil
}

func (m *UpdateLeagueBattleTeamInfoS2C) GetUpdateType() UpdateLeagueBattleTeamInfoType {
	if m != nil && m.UpdateType != nil {
		return *m.UpdateType
	}
	return UpdateLeagueBattleTeamInfoType_ULBTIT_ADD
}

// 联盟战报名阶段展示信息
type LeagueBattleUIApplyStageShowInfoS2C struct {
	ShowInfo         *LeagueBattleApplyShowInfo `protobuf:"bytes,1,opt,name=showInfo" json:"showInfo,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *LeagueBattleUIApplyStageShowInfoS2C) Reset()         { *m = LeagueBattleUIApplyStageShowInfoS2C{} }
func (m *LeagueBattleUIApplyStageShowInfoS2C) String() string { return proto.CompactTextString(m) }
func (*LeagueBattleUIApplyStageShowInfoS2C) ProtoMessage()    {}
func (*LeagueBattleUIApplyStageShowInfoS2C) Descriptor() ([]byte, []int) {
	return fileDescriptor36, []int{33}
}

func (m *LeagueBattleUIApplyStageShowInfoS2C) GetShowInfo() *LeagueBattleApplyShowInfo {
	if m != nil {
		return m.ShowInfo
	}
	return nil
}

// 联盟战准备、积分赛阶段队伍列表展示
type LeagueBattleUITeamListS2C struct {
	TeamInfoList     []*LeagueBattleMemberInfo `protobuf:"bytes,1,rep,name=teamInfoList" json:"teamInfoList,omitempty"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *LeagueBattleUITeamListS2C) Reset()                    { *m = LeagueBattleUITeamListS2C{} }
func (m *LeagueBattleUITeamListS2C) String() string            { return proto.CompactTextString(m) }
func (*LeagueBattleUITeamListS2C) ProtoMessage()               {}
func (*LeagueBattleUITeamListS2C) Descriptor() ([]byte, []int) { return fileDescriptor36, []int{34} }

func (m *LeagueBattleUITeamListS2C) GetTeamInfoList() []*LeagueBattleMemberInfo {
	if m != nil {
		return m.TeamInfoList
	}
	return nil
}

// 联盟战决赛阶段展示信息
type LeagueBattleUIFinalInfoS2C struct {
	// 决赛信息
	FinalInfo        []*LeagueBattleFinalInfoList `protobuf:"bytes,1,rep,name=finalInfo" json:"finalInfo,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *LeagueBattleUIFinalInfoS2C) Reset()                    { *m = LeagueBattleUIFinalInfoS2C{} }
func (m *LeagueBattleUIFinalInfoS2C) String() string            { return proto.CompactTextString(m) }
func (*LeagueBattleUIFinalInfoS2C) ProtoMessage()               {}
func (*LeagueBattleUIFinalInfoS2C) Descriptor() ([]byte, []int) { return fileDescriptor36, []int{35} }

func (m *LeagueBattleUIFinalInfoS2C) GetFinalInfo() []*LeagueBattleFinalInfoList {
	if m != nil {
		return m.FinalInfo
	}
	return nil
}

// 获取战报列表
type GetFightReportListC2S struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *GetFightReportListC2S) Reset()                    { *m = GetFightReportListC2S{} }
func (m *GetFightReportListC2S) String() string            { return proto.CompactTextString(m) }
func (*GetFightReportListC2S) ProtoMessage()               {}
func (*GetFightReportListC2S) Descriptor() ([]byte, []int) { return fileDescriptor36, []int{36} }

// 获取战报列表
type GetFightReportListS2C struct {
	FightRecordList  []*LeagueBattleFightRecord `protobuf:"bytes,1,rep,name=fightRecordList" json:"fightRecordList,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *GetFightReportListS2C) Reset()                    { *m = GetFightReportListS2C{} }
func (m *GetFightReportListS2C) String() string            { return proto.CompactTextString(m) }
func (*GetFightReportListS2C) ProtoMessage()               {}
func (*GetFightReportListS2C) Descriptor() ([]byte, []int) { return fileDescriptor36, []int{37} }

func (m *GetFightReportListS2C) GetFightRecordList() []*LeagueBattleFightRecord {
	if m != nil {
		return m.FightRecordList
	}
	return nil
}

// 获取简易战报1
type GetSimpleFightReport1C2S struct {
	// 战报
	Report1Id        *int64 `protobuf:"varint,1,opt,name=report1Id" json:"report1Id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GetSimpleFightReport1C2S) Reset()                    { *m = GetSimpleFightReport1C2S{} }
func (m *GetSimpleFightReport1C2S) String() string            { return proto.CompactTextString(m) }
func (*GetSimpleFightReport1C2S) ProtoMessage()               {}
func (*GetSimpleFightReport1C2S) Descriptor() ([]byte, []int) { return fileDescriptor36, []int{38} }

func (m *GetSimpleFightReport1C2S) GetReport1Id() int64 {
	if m != nil && m.Report1Id != nil {
		return *m.Report1Id
	}
	return 0
}

// 获取简易战报1
type GetSimpleFightReport1S2C struct {
	// 战报
	Report           *LeagueBattleSimpleFightReport1 `protobuf:"bytes,1,opt,name=report" json:"report,omitempty"`
	XXX_unrecognized []byte                          `json:"-"`
}

func (m *GetSimpleFightReport1S2C) Reset()                    { *m = GetSimpleFightReport1S2C{} }
func (m *GetSimpleFightReport1S2C) String() string            { return proto.CompactTextString(m) }
func (*GetSimpleFightReport1S2C) ProtoMessage()               {}
func (*GetSimpleFightReport1S2C) Descriptor() ([]byte, []int) { return fileDescriptor36, []int{39} }

func (m *GetSimpleFightReport1S2C) GetReport() *LeagueBattleSimpleFightReport1 {
	if m != nil {
		return m.Report
	}
	return nil
}

// 获取战报详情
type GetFightReportDetailC2S struct {
	// 战报
	ReportId         *int64 `protobuf:"varint,1,opt,name=reportId" json:"reportId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GetFightReportDetailC2S) Reset()                    { *m = GetFightReportDetailC2S{} }
func (m *GetFightReportDetailC2S) String() string            { return proto.CompactTextString(m) }
func (*GetFightReportDetailC2S) ProtoMessage()               {}
func (*GetFightReportDetailC2S) Descriptor() ([]byte, []int) { return fileDescriptor36, []int{40} }

func (m *GetFightReportDetailC2S) GetReportId() int64 {
	if m != nil && m.ReportId != nil {
		return *m.ReportId
	}
	return 0
}

// 获取战报详情
type GetFightReportDetailS2C struct {
	// 战报
	Report           *LeagueBattleFightReport `protobuf:"bytes,1,opt,name=report" json:"report,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *GetFightReportDetailS2C) Reset()                    { *m = GetFightReportDetailS2C{} }
func (m *GetFightReportDetailS2C) String() string            { return proto.CompactTextString(m) }
func (*GetFightReportDetailS2C) ProtoMessage()               {}
func (*GetFightReportDetailS2C) Descriptor() ([]byte, []int) { return fileDescriptor36, []int{41} }

func (m *GetFightReportDetailS2C) GetReport() *LeagueBattleFightReport {
	if m != nil {
		return m.Report
	}
	return nil
}

// 获取联盟战阵型信息
type GetLeagueBattleSquadInfoC2S struct {
	Gid              *int32 `protobuf:"varint,1,opt,name=gid" json:"gid,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GetLeagueBattleSquadInfoC2S) Reset()                    { *m = GetLeagueBattleSquadInfoC2S{} }
func (m *GetLeagueBattleSquadInfoC2S) String() string            { return proto.CompactTextString(m) }
func (*GetLeagueBattleSquadInfoC2S) ProtoMessage()               {}
func (*GetLeagueBattleSquadInfoC2S) Descriptor() ([]byte, []int) { return fileDescriptor36, []int{42} }

func (m *GetLeagueBattleSquadInfoC2S) GetGid() int32 {
	if m != nil && m.Gid != nil {
		return *m.Gid
	}
	return 0
}

// 获取联盟战阵型信息
type GetLeagueBattleSquadInfoS2C struct {
	SquadInfo        *LeagueBattleSquad `protobuf:"bytes,1,opt,name=squadInfo" json:"squadInfo,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *GetLeagueBattleSquadInfoS2C) Reset()                    { *m = GetLeagueBattleSquadInfoS2C{} }
func (m *GetLeagueBattleSquadInfoS2C) String() string            { return proto.CompactTextString(m) }
func (*GetLeagueBattleSquadInfoS2C) ProtoMessage()               {}
func (*GetLeagueBattleSquadInfoS2C) Descriptor() ([]byte, []int) { return fileDescriptor36, []int{43} }

func (m *GetLeagueBattleSquadInfoS2C) GetSquadInfo() *LeagueBattleSquad {
	if m != nil {
		return m.SquadInfo
	}
	return nil
}

// 联盟战：挑战
type LeagueBattleChallengeC2S struct {
	OppLeagueId      *int32 `protobuf:"varint,1,opt,name=oppLeagueId" json:"oppLeagueId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *LeagueBattleChallengeC2S) Reset()                    { *m = LeagueBattleChallengeC2S{} }
func (m *LeagueBattleChallengeC2S) String() string            { return proto.CompactTextString(m) }
func (*LeagueBattleChallengeC2S) ProtoMessage()               {}
func (*LeagueBattleChallengeC2S) Descriptor() ([]byte, []int) { return fileDescriptor36, []int{44} }

func (m *LeagueBattleChallengeC2S) GetOppLeagueId() int32 {
	if m != nil && m.OppLeagueId != nil {
		return *m.OppLeagueId
	}
	return 0
}

// 联盟战：挑战
type LeagueBattleChallengeS2C struct {
	ShowInfoList []*LeagueBattleChallengeResultShowInfo `protobuf:"bytes,1,rep,name=showInfoList" json:"showInfoList,omitempty"`
	// 积分
	Score *int32 `protobuf:"varint,2,opt,name=score" json:"score,omitempty"`
	// 比分
	GameScore []int32 `protobuf:"varint,3,rep,name=gameScore" json:"gameScore,omitempty"`
	// 是否胜利
	IsWin *bool `protobuf:"varint,4,opt,name=isWin" json:"isWin,omitempty"`
	// 挑战次数
	ChallengeCount *int32 `protobuf:"varint,5,opt,name=challengeCount" json:"challengeCount,omitempty"`
	// 下次刷新挑战次数时间
	NextRefreshChallengeCount *int64 `protobuf:"varint,6,opt,name=nextRefreshChallengeCount" json:"nextRefreshChallengeCount,omitempty"`
	// 当前名次
	Ranking          *int32                          `protobuf:"varint,7,opt,name=ranking" json:"ranking,omitempty"`
	Report1          *LeagueBattleSimpleFightReport1 `protobuf:"bytes,8,opt,name=report1" json:"report1,omitempty"`
	XXX_unrecognized []byte                          `json:"-"`
}

func (m *LeagueBattleChallengeS2C) Reset()                    { *m = LeagueBattleChallengeS2C{} }
func (m *LeagueBattleChallengeS2C) String() string            { return proto.CompactTextString(m) }
func (*LeagueBattleChallengeS2C) ProtoMessage()               {}
func (*LeagueBattleChallengeS2C) Descriptor() ([]byte, []int) { return fileDescriptor36, []int{45} }

func (m *LeagueBattleChallengeS2C) GetShowInfoList() []*LeagueBattleChallengeResultShowInfo {
	if m != nil {
		return m.ShowInfoList
	}
	return nil
}

func (m *LeagueBattleChallengeS2C) GetScore() int32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *LeagueBattleChallengeS2C) GetGameScore() []int32 {
	if m != nil {
		return m.GameScore
	}
	return nil
}

func (m *LeagueBattleChallengeS2C) GetIsWin() bool {
	if m != nil && m.IsWin != nil {
		return *m.IsWin
	}
	return false
}

func (m *LeagueBattleChallengeS2C) GetChallengeCount() int32 {
	if m != nil && m.ChallengeCount != nil {
		return *m.ChallengeCount
	}
	return 0
}

func (m *LeagueBattleChallengeS2C) GetNextRefreshChallengeCount() int64 {
	if m != nil && m.NextRefreshChallengeCount != nil {
		return *m.NextRefreshChallengeCount
	}
	return 0
}

func (m *LeagueBattleChallengeS2C) GetRanking() int32 {
	if m != nil && m.Ranking != nil {
		return *m.Ranking
	}
	return 0
}

func (m *LeagueBattleChallengeS2C) GetReport1() *LeagueBattleSimpleFightReport1 {
	if m != nil {
		return m.Report1
	}
	return nil
}

// 更新挑战次数
type LeagueBattleUpdateChallengeCountS2C struct {
	// 挑战次数
	ChallengeCount *int32 `protobuf:"varint,1,opt,name=challengeCount" json:"challengeCount,omitempty"`
	// 下次刷新挑战次数时间
	NextRefreshChallengeCount *int64 `protobuf:"varint,2,opt,name=nextRefreshChallengeCount" json:"nextRefreshChallengeCount,omitempty"`
	// 当前名次
	Ranking          *int32 `protobuf:"varint,3,opt,name=ranking" json:"ranking,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *LeagueBattleUpdateChallengeCountS2C) Reset()         { *m = LeagueBattleUpdateChallengeCountS2C{} }
func (m *LeagueBattleUpdateChallengeCountS2C) String() string { return proto.CompactTextString(m) }
func (*LeagueBattleUpdateChallengeCountS2C) ProtoMessage()    {}
func (*LeagueBattleUpdateChallengeCountS2C) Descriptor() ([]byte, []int) {
	return fileDescriptor36, []int{46}
}

func (m *LeagueBattleUpdateChallengeCountS2C) GetChallengeCount() int32 {
	if m != nil && m.ChallengeCount != nil {
		return *m.ChallengeCount
	}
	return 0
}

func (m *LeagueBattleUpdateChallengeCountS2C) GetNextRefreshChallengeCount() int64 {
	if m != nil && m.NextRefreshChallengeCount != nil {
		return *m.NextRefreshChallengeCount
	}
	return 0
}

func (m *LeagueBattleUpdateChallengeCountS2C) GetRanking() int32 {
	if m != nil && m.Ranking != nil {
		return *m.Ranking
	}
	return 0
}

// 联盟战：更新联盟战阵容
type LeagueBattleUpdateSquadC2S struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *LeagueBattleUpdateSquadC2S) Reset()                    { *m = LeagueBattleUpdateSquadC2S{} }
func (m *LeagueBattleUpdateSquadC2S) String() string            { return proto.CompactTextString(m) }
func (*LeagueBattleUpdateSquadC2S) ProtoMessage()               {}
func (*LeagueBattleUpdateSquadC2S) Descriptor() ([]byte, []int) { return fileDescriptor36, []int{47} }

// 联盟战：更新联盟战阵容
type LeagueBattleUpdateSquadS2C struct {
	Info             *LeagueBattleMemberInfo `protobuf:"bytes,1,opt,name=info" json:"info,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *LeagueBattleUpdateSquadS2C) Reset()                    { *m = LeagueBattleUpdateSquadS2C{} }
func (m *LeagueBattleUpdateSquadS2C) String() string            { return proto.CompactTextString(m) }
func (*LeagueBattleUpdateSquadS2C) ProtoMessage()               {}
func (*LeagueBattleUpdateSquadS2C) Descriptor() ([]byte, []int) { return fileDescriptor36, []int{48} }

func (m *LeagueBattleUpdateSquadS2C) GetInfo() *LeagueBattleMemberInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

// 联盟战：更新联盟战阶段
type LeagueBattleUpdateStageS2C struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *LeagueBattleUpdateStageS2C) Reset()                    { *m = LeagueBattleUpdateStageS2C{} }
func (m *LeagueBattleUpdateStageS2C) String() string            { return proto.CompactTextString(m) }
func (*LeagueBattleUpdateStageS2C) ProtoMessage()               {}
func (*LeagueBattleUpdateStageS2C) Descriptor() ([]byte, []int) { return fileDescriptor36, []int{49} }

// 联盟战：正常进入比赛
type LeagueBattleEnterMatchS2C struct {
	// 联盟展示信息
	GamerInfos       []*LeagueBattleGamerInfo `protobuf:"bytes,1,rep,name=gamer_infos" json:"gamer_infos,omitempty"`
	ShowInfos        []*LeagueBattleShowInfo  `protobuf:"bytes,2,rep,name=show_infos" json:"show_infos,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *LeagueBattleEnterMatchS2C) Reset()                    { *m = LeagueBattleEnterMatchS2C{} }
func (m *LeagueBattleEnterMatchS2C) String() string            { return proto.CompactTextString(m) }
func (*LeagueBattleEnterMatchS2C) ProtoMessage()               {}
func (*LeagueBattleEnterMatchS2C) Descriptor() ([]byte, []int) { return fileDescriptor36, []int{50} }

func (m *LeagueBattleEnterMatchS2C) GetGamerInfos() []*LeagueBattleGamerInfo {
	if m != nil {
		return m.GamerInfos
	}
	return nil
}

func (m *LeagueBattleEnterMatchS2C) GetShowInfos() []*LeagueBattleShowInfo {
	if m != nil {
		return m.ShowInfos
	}
	return nil
}

func init() {
	proto.RegisterType((*LeagueBattleSeasonState)(nil), "LeagueBattleSeasonState")
	proto.RegisterType((*LeagueBattleTimeNode)(nil), "LeagueBattleTimeNode")
	proto.RegisterType((*LeagueBattleData)(nil), "LeagueBattleData")
	proto.RegisterType((*LeagueBattleMemberInfo)(nil), "LeagueBattleMemberInfo")
	proto.RegisterType((*LeagueBattleShowInfo)(nil), "LeagueBattleShowInfo")
	proto.RegisterType((*LeagueBattleMatchShowInfo)(nil), "LeagueBattleMatchShowInfo")
	proto.RegisterType((*LeagueBattleSquad)(nil), "LeagueBattleSquad")
	proto.RegisterType((*LeagueBattleFightRecord)(nil), "LeagueBattleFightRecord")
	proto.RegisterType((*LeagueBattleSimpleFightReport1)(nil), "LeagueBattleSimpleFightReport1")
	proto.RegisterType((*LeagueBattleInnerSimpleFightReport2)(nil), "LeagueBattleInnerSimpleFightReport2")
	proto.RegisterType((*LeagueBattleFightReport)(nil), "LeagueBattleFightReport")
	proto.RegisterType((*LeagueBattleGamerInfo)(nil), "LeagueBattleGamerInfo")
	proto.RegisterType((*LeagueBattleCurrentStageInfo)(nil), "LeagueBattleCurrentStageInfo")
	proto.RegisterType((*LeagueBattleApplyShowInfo)(nil), "LeagueBattleApplyShowInfo")
	proto.RegisterType((*LeagueBattleChallengeResultShowInfo)(nil), "LeagueBattleChallengeResultShowInfo")
	proto.RegisterType((*LeagueBattleFinalInfo)(nil), "LeagueBattleFinalInfo")
	proto.RegisterType((*LeagueBattleFinalInfoList)(nil), "LeagueBattleFinalInfoList")
	proto.RegisterType((*LeagueBattleFinalFightInfo)(nil), "LeagueBattleFinalFightInfo")
	proto.RegisterType((*LeagueBattleSubmitSquadReq)(nil), "LeagueBattleSubmitSquadReq")
	proto.RegisterType((*LeagueBattleResult)(nil), "LeagueBattleResult")
	proto.RegisterType((*LeagueBattleApplyC2S)(nil), "LeagueBattleApplyC2S")
	proto.RegisterType((*LeagueBattleApplyS2C)(nil), "LeagueBattleApplyS2C")
	proto.RegisterType((*LeagueBattleSubmitSquadC2S)(nil), "LeagueBattleSubmitSquadC2S")
	proto.RegisterType((*LeagueBattleSubmitSquadS2C)(nil), "LeagueBattleSubmitSquadS2C")
	proto.RegisterType((*LeagueBattleChangeFightOrderC2S)(nil), "LeagueBattleChangeFightOrderC2S")
	proto.RegisterType((*LeagueBattleChangeFightOrderS2C)(nil), "LeagueBattleChangeFightOrderS2C")
	proto.RegisterType((*LeagueBattleMatchC2S)(nil), "LeagueBattleMatchC2S")
	proto.RegisterType((*LeagueBattleMatchS2C)(nil), "LeagueBattleMatchS2C")
	proto.RegisterType((*GetLeagueBattleOppDetailInfoC2S)(nil), "GetLeagueBattleOppDetailInfoC2S")
	proto.RegisterType((*GetLeagueBattleOppDetailInfoS2C)(nil), "GetLeagueBattleOppDetailInfoS2C")
	proto.RegisterType((*GetLeagueBattleInfoC2S)(nil), "GetLeagueBattleInfoC2S")
	proto.RegisterType((*GetLeagueBattleInfoS2C)(nil), "GetLeagueBattleInfoS2C")
	proto.RegisterType((*UpdateLeagueBattleTeamInfoS2C)(nil), "UpdateLeagueBattleTeamInfoS2C")
	proto.RegisterType((*LeagueBattleUIApplyStageShowInfoS2C)(nil), "LeagueBattleUIApplyStageShowInfoS2C")
	proto.RegisterType((*LeagueBattleUITeamListS2C)(nil), "LeagueBattleUITeamListS2C")
	proto.RegisterType((*LeagueBattleUIFinalInfoS2C)(nil), "LeagueBattleUIFinalInfoS2C")
	proto.RegisterType((*GetFightReportListC2S)(nil), "GetFightReportListC2S")
	proto.RegisterType((*GetFightReportListS2C)(nil), "GetFightReportListS2C")
	proto.RegisterType((*GetSimpleFightReport1C2S)(nil), "GetSimpleFightReport1C2S")
	proto.RegisterType((*GetSimpleFightReport1S2C)(nil), "GetSimpleFightReport1S2C")
	proto.RegisterType((*GetFightReportDetailC2S)(nil), "GetFightReportDetailC2S")
	proto.RegisterType((*GetFightReportDetailS2C)(nil), "GetFightReportDetailS2C")
	proto.RegisterType((*GetLeagueBattleSquadInfoC2S)(nil), "GetLeagueBattleSquadInfoC2S")
	proto.RegisterType((*GetLeagueBattleSquadInfoS2C)(nil), "GetLeagueBattleSquadInfoS2C")
	proto.RegisterType((*LeagueBattleChallengeC2S)(nil), "LeagueBattleChallengeC2S")
	proto.RegisterType((*LeagueBattleChallengeS2C)(nil), "LeagueBattleChallengeS2C")
	proto.RegisterType((*LeagueBattleUpdateChallengeCountS2C)(nil), "LeagueBattleUpdateChallengeCountS2C")
	proto.RegisterType((*LeagueBattleUpdateSquadC2S)(nil), "LeagueBattleUpdateSquadC2S")
	proto.RegisterType((*LeagueBattleUpdateSquadS2C)(nil), "LeagueBattleUpdateSquadS2C")
	proto.RegisterType((*LeagueBattleUpdateStageS2C)(nil), "LeagueBattleUpdateStageS2C")
	proto.RegisterType((*LeagueBattleEnterMatchS2C)(nil), "LeagueBattleEnterMatchS2C")
	proto.RegisterEnum("LeagueBattleStage", LeagueBattleStage_name, LeagueBattleStage_value)
	proto.RegisterEnum("LeagueBattleServerGroupType", LeagueBattleServerGroupType_name, LeagueBattleServerGroupType_value)
	proto.RegisterEnum("UpdateLeagueBattleTeamInfoType", UpdateLeagueBattleTeamInfoType_name, UpdateLeagueBattleTeamInfoType_value)
	proto.RegisterEnum("LeagueBattleTimeNodeType", LeagueBattleTimeNodeType_name, LeagueBattleTimeNodeType_value)
	proto.RegisterEnum("LeagueBattleEvent", LeagueBattleEvent_name, LeagueBattleEvent_value)
	proto.RegisterEnum("LeagueBattleApplyC2S_MsgID", LeagueBattleApplyC2S_MsgID_name, LeagueBattleApplyC2S_MsgID_value)
	proto.RegisterEnum("LeagueBattleApplyS2C_MsgID", LeagueBattleApplyS2C_MsgID_name, LeagueBattleApplyS2C_MsgID_value)
	proto.RegisterEnum("LeagueBattleSubmitSquadC2S_MsgID", LeagueBattleSubmitSquadC2S_MsgID_name, LeagueBattleSubmitSquadC2S_MsgID_value)
	proto.RegisterEnum("LeagueBattleSubmitSquadS2C_MsgID", LeagueBattleSubmitSquadS2C_MsgID_name, LeagueBattleSubmitSquadS2C_MsgID_value)
	proto.RegisterEnum("LeagueBattleChangeFightOrderC2S_MsgID", LeagueBattleChangeFightOrderC2S_MsgID_name, LeagueBattleChangeFightOrderC2S_MsgID_value)
	proto.RegisterEnum("LeagueBattleChangeFightOrderS2C_MsgID", LeagueBattleChangeFightOrderS2C_MsgID_name, LeagueBattleChangeFightOrderS2C_MsgID_value)
	proto.RegisterEnum("LeagueBattleMatchC2S_MsgID", LeagueBattleMatchC2S_MsgID_name, LeagueBattleMatchC2S_MsgID_value)
	proto.RegisterEnum("LeagueBattleMatchS2C_MsgID", LeagueBattleMatchS2C_MsgID_name, LeagueBattleMatchS2C_MsgID_value)
	proto.RegisterEnum("GetLeagueBattleOppDetailInfoC2S_MsgID", GetLeagueBattleOppDetailInfoC2S_MsgID_name, GetLeagueBattleOppDetailInfoC2S_MsgID_value)
	proto.RegisterEnum("GetLeagueBattleOppDetailInfoS2C_MsgID", GetLeagueBattleOppDetailInfoS2C_MsgID_name, GetLeagueBattleOppDetailInfoS2C_MsgID_value)
	proto.RegisterEnum("GetLeagueBattleInfoC2S_MsgID", GetLeagueBattleInfoC2S_MsgID_name, GetLeagueBattleInfoC2S_MsgID_value)
	proto.RegisterEnum("GetLeagueBattleInfoS2C_MsgID", GetLeagueBattleInfoS2C_MsgID_name, GetLeagueBattleInfoS2C_MsgID_value)
	proto.RegisterEnum("UpdateLeagueBattleTeamInfoS2C_MsgID", UpdateLeagueBattleTeamInfoS2C_MsgID_name, UpdateLeagueBattleTeamInfoS2C_MsgID_value)
	proto.RegisterEnum("LeagueBattleUIApplyStageShowInfoS2C_MsgID", LeagueBattleUIApplyStageShowInfoS2C_MsgID_name, LeagueBattleUIApplyStageShowInfoS2C_MsgID_value)
	proto.RegisterEnum("LeagueBattleUITeamListS2C_MsgID", LeagueBattleUITeamListS2C_MsgID_name, LeagueBattleUITeamListS2C_MsgID_value)
	proto.RegisterEnum("LeagueBattleUIFinalInfoS2C_MsgID", LeagueBattleUIFinalInfoS2C_MsgID_name, LeagueBattleUIFinalInfoS2C_MsgID_value)
	proto.RegisterEnum("GetFightReportListC2S_MsgID", GetFightReportListC2S_MsgID_name, GetFightReportListC2S_MsgID_value)
	proto.RegisterEnum("GetFightReportListS2C_MsgID", GetFightReportListS2C_MsgID_name, GetFightReportListS2C_MsgID_value)
	proto.RegisterEnum("GetSimpleFightReport1C2S_MsgID", GetSimpleFightReport1C2S_MsgID_name, GetSimpleFightReport1C2S_MsgID_value)
	proto.RegisterEnum("GetSimpleFightReport1S2C_MsgID", GetSimpleFightReport1S2C_MsgID_name, GetSimpleFightReport1S2C_MsgID_value)
	proto.RegisterEnum("GetFightReportDetailC2S_MsgID", GetFightReportDetailC2S_MsgID_name, GetFightReportDetailC2S_MsgID_value)
	proto.RegisterEnum("GetFightReportDetailS2C_MsgID", GetFightReportDetailS2C_MsgID_name, GetFightReportDetailS2C_MsgID_value)
	proto.RegisterEnum("GetLeagueBattleSquadInfoC2S_MsgID", GetLeagueBattleSquadInfoC2S_MsgID_name, GetLeagueBattleSquadInfoC2S_MsgID_value)
	proto.RegisterEnum("GetLeagueBattleSquadInfoS2C_MsgID", GetLeagueBattleSquadInfoS2C_MsgID_name, GetLeagueBattleSquadInfoS2C_MsgID_value)
	proto.RegisterEnum("LeagueBattleChallengeC2S_MsgID", LeagueBattleChallengeC2S_MsgID_name, LeagueBattleChallengeC2S_MsgID_value)
	proto.RegisterEnum("LeagueBattleChallengeS2C_MsgID", LeagueBattleChallengeS2C_MsgID_name, LeagueBattleChallengeS2C_MsgID_value)
	proto.RegisterEnum("LeagueBattleUpdateChallengeCountS2C_MsgID", LeagueBattleUpdateChallengeCountS2C_MsgID_name, LeagueBattleUpdateChallengeCountS2C_MsgID_value)
	proto.RegisterEnum("LeagueBattleUpdateSquadC2S_MsgID", LeagueBattleUpdateSquadC2S_MsgID_name, LeagueBattleUpdateSquadC2S_MsgID_value)
	proto.RegisterEnum("LeagueBattleUpdateSquadS2C_MsgID", LeagueBattleUpdateSquadS2C_MsgID_name, LeagueBattleUpdateSquadS2C_MsgID_value)
	proto.RegisterEnum("LeagueBattleUpdateStageS2C_MsgID", LeagueBattleUpdateStageS2C_MsgID_name, LeagueBattleUpdateStageS2C_MsgID_value)
	proto.RegisterEnum("LeagueBattleEnterMatchS2C_MsgID", LeagueBattleEnterMatchS2C_MsgID_name, LeagueBattleEnterMatchS2C_MsgID_value)
}

func init() { proto.RegisterFile("league_battle.proto", fileDescriptor36) }

var fileDescriptor36 = []byte{
	// 2017 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xa4, 0x58, 0xdd, 0x6f, 0x1b, 0x4b,
	0x15, 0x97, 0xed, 0x38, 0x89, 0x8f, 0xf3, 0xe1, 0x6c, 0x9b, 0xd4, 0x6d, 0x48, 0x0b, 0x5b, 0x5f,
	0xd4, 0xf6, 0xb6, 0x2e, 0x35, 0x3c, 0x70, 0x91, 0x90, 0x70, 0x1c, 0x27, 0x58, 0x72, 0x93, 0xc8,
	0x76, 0x80, 0xf2, 0x62, 0x36, 0xde, 0x89, 0xb3, 0x5c, 0x67, 0xbd, 0x77, 0xbd, 0x4e, 0x6f, 0x25,
	0x84, 0x84, 0x84, 0x84, 0xee, 0x1b, 0x2f, 0x3c, 0xf1, 0x07, 0x20, 0x24, 0x1e, 0x78, 0xe4, 0x9b,
	0xcb, 0xf7, 0x85, 0xbf, 0x8a, 0x73, 0xce, 0xce, 0xae, 0x77, 0xd6, 0xbb, 0x6e, 0x28, 0x6f, 0x3b,
	0x33, 0x67, 0x7e, 0xe7, 0x37, 0x73, 0x3e, 0x67, 0xe1, 0xd6, 0x48, 0x18, 0xc3, 0xa9, 0xe8, 0x9f,
	0x1b, 0x9e, 0x37, 0x12, 0x55, 0xc7, 0x1d, 0x7b, 0xe3, 0x7b, 0x30, 0x18, 0xdb, 0x17, 0xf2, 0xbb,
	0xe0, 0x5c, 0x3b, 0xf2, 0x73, 0xcd, 0x97, 0x95, 0xa3, 0xe2, 0x85, 0x35, 0xbc, 0xf4, 0xfc, 0x81,
	0xfe, 0x55, 0xb8, 0xd3, 0xe6, 0xc5, 0x7d, 0xc6, 0xe9, 0x0a, 0x63, 0x32, 0xb6, 0xbb, 0x9e, 0xe1,
	0x09, 0x6d, 0x03, 0x96, 0x27, 0x3c, 0x2c, 0x67, 0x3e, 0x9f, 0x79, 0x94, 0xd7, 0xd6, 0x21, 0x7f,
	0x6d, 0x8c, 0x2c, 0xb3, 0x9c, 0xc5, 0xe1, 0xaa, 0xfe, 0x15, 0xb8, 0x1d, 0xdd, 0xd9, 0xb3, 0xae,
	0xc4, 0xf1, 0xd8, 0x14, 0xda, 0x1a, 0x2c, 0x79, 0xf8, 0xcd, 0x9b, 0x72, 0x11, 0x10, 0xda, 0x95,
	0xd7, 0x7f, 0x95, 0x83, 0x52, 0x74, 0xdb, 0x81, 0xe1, 0x19, 0xda, 0x26, 0xac, 0x0c, 0x2d, 0xb3,
	0x6d, 0x4d, 0x3c, 0xdc, 0x95, 0x43, 0x55, 0x77, 0x60, 0x73, 0x60, 0xd8, 0x4d, 0xdb, 0x73, 0xdf,
	0x1c, 0xc9, 0x85, 0x2c, 0x2f, 0x20, 0x87, 0xc9, 0x60, 0xec, 0x8a, 0x72, 0x8e, 0x29, 0xdd, 0x86,
	0xb5, 0xc1, 0xa5, 0x31, 0x1a, 0x09, 0x7b, 0x28, 0x8e, 0xa7, 0x57, 0xe5, 0x25, 0x9e, 0x45, 0xb8,
	0x2b, 0xc3, 0x1b, 0x5c, 0x36, 0x0e, 0xca, 0x79, 0x26, 0x81, 0xbb, 0x0c, 0xc7, 0x19, 0xbd, 0x29,
	0x2f, 0x13, 0x73, 0xed, 0x39, 0x6c, 0x5c, 0x89, 0xab, 0x73, 0xe1, 0xb6, 0xec, 0x8b, 0x31, 0x83,
	0xaf, 0x20, 0x78, 0xb1, 0x76, 0xa7, 0x1a, 0x65, 0xf6, 0x32, 0x14, 0xd1, 0xf6, 0x60, 0xdb, 0x16,
	0x1f, 0x7b, 0x1d, 0x81, 0xaa, 0x4d, 0x49, 0x88, 0xce, 0x5b, 0x5e, 0x65, 0xf8, 0x2d, 0x28, 0x8c,
	0x1d, 0xa7, 0xe5, 0xf3, 0x2c, 0x32, 0xcf, 0x6d, 0x58, 0x7f, 0x6d, 0xd9, 0xb6, 0x65, 0x0f, 0xbb,
	0x9e, 0x2b, 0x8c, 0x0f, 0xcb, 0x6b, 0xcc, 0xec, 0x21, 0xec, 0x8e, 0x8c, 0x89, 0xd7, 0x08, 0x38,
	0x37, 0xc6, 0x53, 0xdb, 0xc3, 0xdb, 0x76, 0x7d, 0xb8, 0x0d, 0x86, 0x7b, 0x0f, 0xf6, 0x48, 0x5b,
	0x03, 0x8d, 0xe6, 0xc6, 0xaf, 0x8a, 0xc5, 0x36, 0x59, 0xec, 0x8b, 0xb0, 0x86, 0x2a, 0x18, 0x81,
	0x15, 0x97, 0xf8, 0x0c, 0xa5, 0x6a, 0xef, 0x8d, 0x23, 0xbe, 0x65, 0x8c, 0xa6, 0x08, 0x6e, 0xa3,
	0xa5, 0xb5, 0x32, 0x94, 0xbc, 0xb1, 0x67, 0x8c, 0x7c, 0x10, 0x5e, 0x29, 0x6f, 0x21, 0xc2, 0x92,
	0xf6, 0x05, 0xb8, 0x4b, 0x8a, 0xea, 0xa6, 0xa9, 0x12, 0x62, 0x25, 0x1a, 0x29, 0xd1, 0xcf, 0x61,
	0x27, 0xe5, 0x4e, 0xd0, 0xcc, 0xb6, 0x21, 0xcd, 0x5c, 0xa0, 0x91, 0x35, 0x08, 0x8c, 0xac, 0x15,
	0x21, 0x87, 0xf6, 0x94, 0x36, 0x02, 0xc8, 0x8e, 0xae, 0xa5, 0x65, 0x6e, 0x41, 0xf1, 0x3c, 0x42,
	0x83, 0xac, 0xb3, 0xa4, 0xb7, 0x55, 0x47, 0xea, 0x5e, 0x8e, 0x5f, 0xb3, 0x06, 0x44, 0x21, 0x6f,
	0xf3, 0x9d, 0x2f, 0x50, 0x97, 0x65, 0x75, 0x77, 0x61, 0x69, 0x34, 0x1e, 0x8e, 0x59, 0x43, 0xb1,
	0x56, 0x94, 0x76, 0x6b, 0xe3, 0x94, 0xfe, 0x7d, 0xb8, 0xab, 0x30, 0x26, 0x47, 0x08, 0x21, 0x1f,
	0x03, 0xf8, 0xa1, 0x40, 0x23, 0x46, 0x2e, 0xd6, 0xb6, 0xab, 0x89, 0xda, 0x63, 0x54, 0xb3, 0x7c,
	0x63, 0xaa, 0xfb, 0xe9, 0x1f, 0xc0, 0x96, 0xb2, 0xf7, 0xa3, 0xa9, 0x61, 0x6a, 0x15, 0x28, 0x4c,
	0xe8, 0x83, 0x55, 0xe4, 0xd8, 0x28, 0x5b, 0xd5, 0xd3, 0x6b, 0xa7, 0x33, 0x96, 0x12, 0xb4, 0xa0,
	0xff, 0x28, 0xa3, 0x06, 0xde, 0x21, 0xc5, 0xa4, 0xef, 0x60, 0xda, 0x53, 0x58, 0x47, 0x7f, 0x6a,
	0xdf, 0x90, 0x68, 0x09, 0x56, 0x0d, 0xd3, 0xec, 0x32, 0xad, 0x6c, 0x10, 0xa8, 0xd6, 0xe4, 0xdb,
	0x96, 0xcd, 0x2c, 0x57, 0x29, 0x98, 0x26, 0xd6, 0x95, 0x33, 0x12, 0x1d, 0xe1, 0x8c, 0x5d, 0xef,
	0x45, 0xcb, 0x64, 0x6b, 0xe4, 0xf4, 0x5f, 0x64, 0xe0, 0xbe, 0x02, 0xc9, 0x52, 0x92, 0x09, 0x8b,
	0x6a, 0x8f, 0xf0, 0x30, 0x52, 0xd1, 0x84, 0x63, 0x33, 0x95, 0xc6, 0x07, 0x50, 0x74, 0x79, 0x53,
	0x2d, 0x0c, 0xd7, 0x62, 0xad, 0xa2, 0xc8, 0xb6, 0x6c, 0x5b, 0xb8, 0x73, 0x4a, 0x6a, 0x71, 0xbe,
	0x18, 0x4e, 0x43, 0x34, 0xb5, 0x7f, 0xa2, 0x25, 0x0a, 0x27, 0xfd, 0x87, 0xf0, 0xf0, 0x26, 0x40,
	0xcf, 0x60, 0x9d, 0x76, 0xce, 0xe2, 0xda, 0x67, 0xb1, 0xa3, 0xb0, 0x38, 0x0a, 0x24, 0x54, 0x45,
	0xb9, 0x20, 0x6e, 0x2f, 0x66, 0x88, 0xe1, 0x4d, 0xa5, 0x58, 0x8b, 0x64, 0xe6, 0x95, 0x66, 0x16,
	0x2a, 0x7d, 0x0f, 0x8a, 0x52, 0xc3, 0x64, 0x3a, 0xf2, 0xd8, 0x62, 0x14, 0xb5, 0x87, 0xb3, 0x39,
	0x02, 0x21, 0xab, 0xba, 0x01, 0x87, 0x1c, 0x73, 0xf8, 0x01, 0x6c, 0x27, 0x23, 0xca, 0x68, 0xf3,
	0xe3, 0x44, 0x9e, 0xc9, 0x3d, 0x9e, 0x05, 0x0b, 0x42, 0x79, 0xc2, 0xb8, 0x6a, 0x51, 0x7c, 0xfa,
	0x21, 0x49, 0x2e, 0x83, 0x59, 0x89, 0x65, 0x96, 0x58, 0xc6, 0x0f, 0xd2, 0x7c, 0x52, 0x90, 0x2e,
	0x73, 0x90, 0x76, 0xe0, 0x73, 0x51, 0xed, 0x8d, 0xa9, 0xeb, 0x0a, 0x4e, 0x5d, 0x43, 0x76, 0x51,
	0xcc, 0x25, 0xf9, 0x09, 0x0d, 0x98, 0xc6, 0x46, 0x4d, 0x53, 0x9d, 0x84, 0x56, 0x28, 0x2d, 0x0b,
	0xdb, 0xe4, 0xe4, 0x92, 0xe5, 0x13, 0x39, 0x6a, 0xa8, 0xd6, 0x29, 0x45, 0x87, 0xfe, 0x14, 0xaf,
	0x3e, 0xef, 0xc3, 0x5a, 0xe0, 0x89, 0x11, 0xd3, 0xa6, 0x38, 0xe3, 0x0e, 0x6c, 0xcc, 0x12, 0x36,
	0x6b, 0xcc, 0xc9, 0x74, 0xa6, 0xf8, 0x51, 0x98, 0xf6, 0xfc, 0x8b, 0x7f, 0x97, 0x34, 0x81, 0x57,
	0x19, 0x64, 0x61, 0x59, 0xe1, 0x0e, 0x55, 0x3b, 0x1d, 0x5a, 0xb6, 0x31, 0x62, 0xd1, 0x67, 0x50,
	0x70, 0x51, 0xce, 0x94, 0xa0, 0x44, 0xff, 0x5e, 0x35, 0x51, 0x94, 0x0e, 0x88, 0x38, 0x77, 0x53,
	0x17, 0x91, 0xe1, 0x92, 0x35, 0x83, 0xd9, 0x9d, 0x87, 0x61, 0x7f, 0xe2, 0x4c, 0xf3, 0xe3, 0x0c,
	0xdc, 0x4b, 0x5f, 0xc6, 0x74, 0x95, 0xb7, 0xde, 0x1e, 0xdd, 0xfe, 0x31, 0x31, 0xea, 0x5a, 0xa6,
	0x4c, 0x32, 0x73, 0x91, 0xc2, 0x37, 0xcc, 0xc9, 0x06, 0x37, 0x45, 0xdc, 0x99, 0x3d, 0x6c, 0x55,
	0x6f, 0xa9, 0x2c, 0xba, 0xd3, 0xf3, 0x2b, 0xcb, 0xe3, 0x7c, 0xd8, 0x11, 0x1f, 0xa1, 0x75, 0x61,
	0x56, 0x92, 0xe5, 0x8d, 0xa7, 0x95, 0x63, 0xfd, 0x39, 0x68, 0xd1, 0x15, 0x5f, 0xcd, 0x2c, 0x37,
	0x67, 0x83, 0xb2, 0x63, 0x05, 0xa1, 0xf3, 0x54, 0xad, 0x30, 0xec, 0x68, 0x8d, 0x5a, 0x57, 0xbf,
	0x0d, 0xf9, 0x97, 0x93, 0x61, 0xeb, 0x00, 0x43, 0x68, 0x59, 0xf0, 0x57, 0xe9, 0x37, 0x95, 0x44,
	0xe9, 0x6e, 0xad, 0x91, 0x22, 0x5d, 0x4b, 0x3d, 0x57, 0x8a, 0x86, 0xdf, 0x56, 0xf4, 0x57, 0xa9,
	0x7b, 0x50, 0x0f, 0x66, 0x88, 0xc0, 0xb6, 0x0b, 0x6f, 0x21, 0x19, 0xfa, 0x9b, 0xf0, 0x20, 0xe6,
	0xe1, 0xe8, 0xde, 0x6c, 0x8d, 0x13, 0xd7, 0x14, 0x2e, 0x72, 0x9a, 0xeb, 0xb6, 0x92, 0x90, 0x7e,
	0xf7, 0x56, 0x24, 0x62, 0x7a, 0x43, 0xa4, 0xaf, 0xab, 0x17, 0xca, 0x25, 0xf9, 0xa6, 0x44, 0x7e,
	0x5f, 0xd1, 0x2f, 0x12, 0xb6, 0x93, 0xf6, 0xa7, 0xb0, 0x6a, 0xa9, 0x39, 0x57, 0x0d, 0x27, 0xb5,
	0xf4, 0xa3, 0x3f, 0x0c, 0x4c, 0x99, 0x78, 0x92, 0xf5, 0xb4, 0xe0, 0xc1, 0x91, 0xf0, 0xa2, 0x08,
	0x27, 0x8e, 0x73, 0x20, 0x3c, 0xc3, 0xe2, 0xb8, 0x23, 0xc6, 0x18, 0x06, 0x32, 0x31, 0xc8, 0x7c,
	0x9b, 0x04, 0xf5, 0x87, 0x8a, 0xfe, 0xd3, 0xcc, 0x62, 0x2c, 0x49, 0x3f, 0x48, 0x68, 0xd2, 0xd4,
	0x8b, 0xe8, 0x3f, 0x8e, 0x1c, 0x36, 0xbb, 0xb0, 0x5b, 0x4d, 0xa1, 0x54, 0x85, 0x9d, 0x18, 0x23,
	0x79, 0xa8, 0x24, 0xf9, 0x3f, 0x56, 0xf4, 0x4f, 0xb3, 0x89, 0x1b, 0x88, 0xf9, 0x23, 0xec, 0xba,
	0x23, 0xf9, 0x7f, 0x41, 0xca, 0xdf, 0x85, 0x5b, 0x51, 0xc9, 0x66, 0x34, 0xfd, 0x93, 0xf9, 0x5d,
	0xc3, 0xfe, 0x10, 0x7b, 0x64, 0x59, 0x96, 0x30, 0x6b, 0x0f, 0x94, 0x46, 0x54, 0x76, 0x8d, 0x61,
	0x64, 0xfb, 0xf5, 0x49, 0xf6, 0xc7, 0x1d, 0x71, 0xe1, 0x8a, 0xc9, 0x65, 0x42, 0xeb, 0xba, 0x1c,
	0x64, 0xa2, 0xf8, 0x1b, 0x62, 0x85, 0x6b, 0x3c, 0x92, 0x3a, 0xc6, 0xfd, 0xe1, 0x53, 0xc7, 0x8d,
	0xf6, 0xf2, 0x48, 0xca, 0x9a, 0x70, 0xc8, 0x97, 0x0b, 0xdc, 0x8d, 0x84, 0xaf, 0x1e, 0xe0, 0x21,
	0xbe, 0x38, 0xa8, 0x74, 0x9e, 0x38, 0xc2, 0xe6, 0x5d, 0xc5, 0x34, 0x87, 0xc2, 0x2b, 0xfc, 0x59,
	0x06, 0xf6, 0xce, 0x1c, 0x13, 0xdf, 0x52, 0xca, 0x43, 0x89, 0x6a, 0xb1, 0xbc, 0xc9, 0xc7, 0xb2,
	0x34, 0xbf, 0x3d, 0xdc, 0xb5, 0x2f, 0x03, 0x4c, 0x19, 0x8b, 0xfa, 0x7b, 0xbe, 0xc1, 0x8d, 0xda,
	0x83, 0x6a, 0x3a, 0x3c, 0x89, 0x25, 0xf1, 0xfa, 0x53, 0x45, 0xb7, 0xd4, 0x2a, 0x78, 0xd6, 0xf2,
	0x53, 0x1c, 0x59, 0x28, 0xf0, 0xb7, 0x9b, 0x38, 0xa8, 0x52, 0xaf, 0x93, 0x54, 0xfd, 0xb9, 0xa2,
	0x7f, 0x4f, 0x2d, 0x62, 0x67, 0x2d, 0xa2, 0x47, 0xb6, 0x20, 0x05, 0xcf, 0x60, 0x2d, 0x38, 0x7d,
	0x24, 0x88, 0xff, 0x17, 0xbf, 0xfe, 0xb4, 0xa2, 0x1b, 0x6a, 0x2e, 0x3d, 0x6b, 0x85, 0x85, 0xd2,
	0x57, 0x51, 0xb8, 0x08, 0xc6, 0x37, 0xa8, 0xb9, 0x09, 0x2a, 0xfe, 0x52, 0xd1, 0x9f, 0xc1, 0x36,
	0x46, 0x42, 0xa4, 0xe7, 0x23, 0xd9, 0x94, 0xc8, 0xf9, 0x2b, 0x9d, 0x39, 0x41, 0x9c, 0xc8, 0xbc,
	0x80, 0xcd, 0x8b, 0x59, 0x9b, 0x1f, 0x39, 0x72, 0xb9, 0x9a, 0xf2, 0x14, 0x48, 0xd1, 0xd0, 0x80,
	0x32, 0x6a, 0x98, 0x6f, 0xd7, 0x29, 0x45, 0x61, 0x03, 0xe8, 0x86, 0x7d, 0x7e, 0x26, 0xcd, 0x3b,
	0xff, 0x46, 0x17, 0x97, 0x0c, 0x42, 0x4c, 0x9f, 0xc3, 0xb2, 0x0f, 0x22, 0x0d, 0xff, 0xa0, 0xba,
	0xf8, 0x9d, 0x90, 0xa2, 0xa2, 0x0e, 0x77, 0xd4, 0x9b, 0xf0, 0x33, 0xa0, 0xcc, 0xa4, 0x61, 0x7f,
	0x9b, 0xca, 0xf2, 0xef, 0x54, 0x2a, 0x13, 0x21, 0xfc, 0x34, 0xa4, 0x92, 0x4c, 0xbc, 0x45, 0x5a,
	0x4f, 0x81, 0xfe, 0x06, 0xec, 0xc6, 0x12, 0x5c, 0xf8, 0x3c, 0x23, 0x86, 0xd1, 0xb6, 0x3a, 0x09,
	0xe1, 0x1f, 0x15, 0xfd, 0xbb, 0xe9, 0x08, 0x7e, 0x21, 0x8f, 0xbc, 0x04, 0x7d, 0x8e, 0xb1, 0x24,
	0x49, 0xab, 0x29, 0xd8, 0x4d, 0x28, 0x27, 0xb6, 0xaa, 0x44, 0x0d, 0x3b, 0xf4, 0xd9, 0x03, 0x71,
	0x01, 0xc5, 0x7f, 0x56, 0xf4, 0x9f, 0x67, 0x53, 0x70, 0x88, 0xe0, 0xd7, 0x62, 0x3d, 0x75, 0x26,
	0xe1, 0xd1, 0x96, 0xd6, 0x23, 0xc7, 0xda, 0xad, 0x84, 0xb7, 0x54, 0xf8, 0xac, 0xe3, 0x06, 0x30,
	0x21, 0xbb, 0xfb, 0xe9, 0x5c, 0xfe, 0x85, 0x48, 0x4c, 0xe7, 0x32, 0x95, 0x47, 0x2a, 0xc5, 0x0a,
	0xef, 0xf9, 0x12, 0x4e, 0xf8, 0x9e, 0xc7, 0x69, 0xfb, 0xdd, 0x1c, 0x14, 0x6f, 0xe7, 0x27, 0x99,
	0x58, 0x2a, 0xe4, 0x74, 0x1a, 0xfb, 0x3d, 0x83, 0x17, 0x35, 0xcf, 0x3d, 0xf3, 0x76, 0xee, 0xc9,
	0x55, 0x2e, 0x89, 0xc9, 0xbf, 0xe6, 0xda, 0x48, 0x9f, 0xc8, 0xa2, 0x36, 0xf2, 0xb3, 0xb9, 0x36,
	0x32, 0xb2, 0xe7, 0xff, 0x6b, 0x23, 0x3f, 0x4b, 0xa3, 0xc3, 0x15, 0x22, 0xb9, 0x13, 0xfe, 0x77,
	0x45, 0xff, 0x24, 0xa3, 0x26, 0x7b, 0x2c, 0xbd, 0xc2, 0x0d, 0xbb, 0xb5, 0xf7, 0xa1, 0xc8, 0x0f,
	0xd3, 0x7e, 0xf4, 0xb5, 0x91, 0xf6, 0x48, 0xc6, 0x07, 0x18, 0x39, 0xa6, 0x94, 0x5d, 0xf4, 0xd4,
	0x4b, 0xe2, 0xf2, 0x9f, 0xca, 0x93, 0x5f, 0x66, 0x62, 0xbf, 0x66, 0xb8, 0x1d, 0x59, 0x87, 0x42,
	0x7b, 0xbf, 0xdb, 0xaf, 0x9f, 0x9e, 0xb6, 0x5f, 0x95, 0x32, 0xc1, 0xb0, 0xd3, 0xac, 0x1f, 0xbc,
	0x2a, 0x65, 0x35, 0x0d, 0x36, 0x68, 0x78, 0x7a, 0xd2, 0x3a, 0xee, 0xf5, 0x3b, 0xf5, 0x46, 0xb3,
	0x94, 0xc3, 0x57, 0xce, 0x16, 0xcd, 0x1d, 0xb6, 0x8e, 0xeb, 0xed, 0x7e, 0xe7, 0xe4, 0xec, 0xf8,
	0xa0, 0xff, 0xa2, 0x94, 0x4f, 0x9a, 0xae, 0x95, 0x96, 0x31, 0x2e, 0x37, 0x69, 0xba, 0x77, 0xd2,
	0xc3, 0x69, 0x5e, 0x2c, 0xad, 0x04, 0xb0, 0x27, 0x87, 0x87, 0xfd, 0x6e, 0xb3, 0xde, 0x3d, 0x39,
	0x2e, 0xad, 0x22, 0xd7, 0x15, 0x9a, 0x7b, 0x59, 0xff, 0x4e, 0xa9, 0xf0, 0xe4, 0x14, 0x76, 0xd5,
	0x5f, 0xb0, 0xee, 0xb5, 0x70, 0x8f, 0xf0, 0xa9, 0xe8, 0x50, 0x0d, 0xd7, 0xee, 0xc1, 0x0e, 0xca,
	0x1e, 0xf5, 0x22, 0xc4, 0xfa, 0xdd, 0x5e, 0xfd, 0xa8, 0x89, 0x27, 0xf0, 0x79, 0xe0, 0x9a, 0xcf,
	0xc4, 0x9f, 0xce, 0x3e, 0xd9, 0x87, 0xfb, 0x8b, 0x1b, 0x03, 0x7c, 0x5d, 0xc3, 0x59, 0x7b, 0xbf,
	0xd7, 0xea, 0xf5, 0xeb, 0x07, 0x07, 0x08, 0x54, 0x82, 0x35, 0x39, 0x3e, 0x3b, 0xad, 0xf7, 0x08,
	0xe3, 0xd7, 0xb1, 0xc4, 0x11, 0xfc, 0xdf, 0xe5, 0xed, 0x7b, 0x68, 0xe9, 0xfd, 0x1e, 0xb2, 0xa1,
	0x46, 0x2a, 0xd2, 0x3d, 0x50, 0x33, 0x85, 0x68, 0xca, 0x72, 0x47, 0x18, 0x66, 0x74, 0x39, 0x8b,
	0x51, 0xb3, 0x37, 0x5b, 0x3e, 0x1d, 0x5b, 0xb6, 0xd7, 0x31, 0x06, 0x22, 0x22, 0x92, 0x53, 0x11,
	0x42, 0x91, 0x8e, 0x78, 0x6d, 0xb8, 0x66, 0x69, 0x49, 0x5d, 0xe6, 0x12, 0x1e, 0xd9, 0x9d, 0xd7,
	0x74, 0xb8, 0x1f, 0x5b, 0x3e, 0xb4, 0xdc, 0x89, 0xd7, 0xa1, 0xd7, 0xb7, 0x2f, 0xb3, 0xac, 0x3d,
	0xc4, 0xe7, 0x4d, 0x0c, 0x02, 0x4b, 0xae, 0x6d, 0x46, 0x84, 0x56, 0x54, 0x3d, 0x3d, 0xfa, 0x8b,
	0x1a, 0x28, 0xc3, 0xe5, 0x55, 0xdf, 0x81, 0x68, 0xf9, 0xa5, 0xf1, 0x31, 0x1a, 0xf2, 0x93, 0x98,
	0xd3, 0x35, 0xaf, 0xb1, 0xf1, 0xf5, 0x85, 0x9a, 0x7d, 0xbe, 0xa5, 0xc0, 0xe9, 0x9a, 0x7d, 0xbe,
	0x15, 0xbc, 0x8b, 0x2d, 0x58, 0xa7, 0x61, 0x78, 0xc4, 0x12, 0x35, 0xae, 0xb7, 0x94, 0xa9, 0xf0,
	0xd4, 0xec, 0x5e, 0xcd, 0x3e, 0x53, 0x90, 0x93, 0xd2, 0x15, 0xe5, 0x24, 0xfd, 0x21, 0x6e, 0xd9,
	0x16, 0x1e, 0xef, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xec, 0x05, 0xba, 0xa5, 0x1f, 0x18, 0x00,
	0x00,
}
