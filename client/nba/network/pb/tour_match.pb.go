// Code generated by protoc-gen-go.
// source: tour_match.proto
// DO NOT EDIT!

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 巡演赛关卡状态
type TourMatchLevelState int32

const (
	TourMatchLevelState_TMlS_Not_Pass TourMatchLevelState = 1
	TourMatchLevelState_TMlS_Pass     TourMatchLevelState = 2
	TourMatchLevelState_TMlS_Get_Buff TourMatchLevelState = 3
	TourMatchLevelState_TMlS_Award    TourMatchLevelState = 4
)

var TourMatchLevelState_name = map[int32]string{
	1: "TMlS_Not_Pass",
	2: "TMlS_Pass",
	3: "TMlS_Get_Buff",
	4: "TMlS_Award",
}
var TourMatchLevelState_value = map[string]int32{
	"TMlS_Not_Pass": 1,
	"TMlS_Pass":     2,
	"TMlS_Get_Buff": 3,
	"TMlS_Award":    4,
}

func (x TourMatchLevelState) Enum() *TourMatchLevelState {
	p := new(TourMatchLevelState)
	*p = x
	return p
}
func (x TourMatchLevelState) String() string {
	return proto.EnumName(TourMatchLevelState_name, int32(x))
}
func (x *TourMatchLevelState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TourMatchLevelState_value, data, "TourMatchLevelState")
	if err != nil {
		return err
	}
	*x = TourMatchLevelState(value)
	return nil
}
func (TourMatchLevelState) EnumDescriptor() ([]byte, []int) { return fileDescriptor78, []int{0} }

// 补给站状态
type SupplyDepotState int32

const (
	SupplyDepotState_SDS_NotUse SupplyDepotState = 1
	SupplyDepotState_SDS_Use    SupplyDepotState = 2
)

var SupplyDepotState_name = map[int32]string{
	1: "SDS_NotUse",
	2: "SDS_Use",
}
var SupplyDepotState_value = map[string]int32{
	"SDS_NotUse": 1,
	"SDS_Use":    2,
}

func (x SupplyDepotState) Enum() *SupplyDepotState {
	p := new(SupplyDepotState)
	*p = x
	return p
}
func (x SupplyDepotState) String() string {
	return proto.EnumName(SupplyDepotState_name, int32(x))
}
func (x *SupplyDepotState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SupplyDepotState_value, data, "SupplyDepotState")
	if err != nil {
		return err
	}
	*x = SupplyDepotState(value)
	return nil
}
func (SupplyDepotState) EnumDescriptor() ([]byte, []int) { return fileDescriptor78, []int{1} }

type TourMatchRefresh_MsgID int32

const (
	TourMatchRefresh_eMsgID TourMatchRefresh_MsgID = 12808
)

var TourMatchRefresh_MsgID_name = map[int32]string{
	12808: "eMsgID",
}
var TourMatchRefresh_MsgID_value = map[string]int32{
	"eMsgID": 12808,
}

func (x TourMatchRefresh_MsgID) Enum() *TourMatchRefresh_MsgID {
	p := new(TourMatchRefresh_MsgID)
	*p = x
	return p
}
func (x TourMatchRefresh_MsgID) String() string {
	return proto.EnumName(TourMatchRefresh_MsgID_name, int32(x))
}
func (x *TourMatchRefresh_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TourMatchRefresh_MsgID_value, data, "TourMatchRefresh_MsgID")
	if err != nil {
		return err
	}
	*x = TourMatchRefresh_MsgID(value)
	return nil
}
func (TourMatchRefresh_MsgID) EnumDescriptor() ([]byte, []int) { return fileDescriptor78, []int{7, 0} }

type GetTourMatchOppReq_MsgID int32

const (
	GetTourMatchOppReq_eMsgID GetTourMatchOppReq_MsgID = 13000
)

var GetTourMatchOppReq_MsgID_name = map[int32]string{
	13000: "eMsgID",
}
var GetTourMatchOppReq_MsgID_value = map[string]int32{
	"eMsgID": 13000,
}

func (x GetTourMatchOppReq_MsgID) Enum() *GetTourMatchOppReq_MsgID {
	p := new(GetTourMatchOppReq_MsgID)
	*p = x
	return p
}
func (x GetTourMatchOppReq_MsgID) String() string {
	return proto.EnumName(GetTourMatchOppReq_MsgID_name, int32(x))
}
func (x *GetTourMatchOppReq_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GetTourMatchOppReq_MsgID_value, data, "GetTourMatchOppReq_MsgID")
	if err != nil {
		return err
	}
	*x = GetTourMatchOppReq_MsgID(value)
	return nil
}
func (GetTourMatchOppReq_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor78, []int{8, 0}
}

type GetTourMatchOppResp_MsgID int32

const (
	GetTourMatchOppResp_eMsgID GetTourMatchOppResp_MsgID = 13000
)

var GetTourMatchOppResp_MsgID_name = map[int32]string{
	13000: "eMsgID",
}
var GetTourMatchOppResp_MsgID_value = map[string]int32{
	"eMsgID": 13000,
}

func (x GetTourMatchOppResp_MsgID) Enum() *GetTourMatchOppResp_MsgID {
	p := new(GetTourMatchOppResp_MsgID)
	*p = x
	return p
}
func (x GetTourMatchOppResp_MsgID) String() string {
	return proto.EnumName(GetTourMatchOppResp_MsgID_name, int32(x))
}
func (x *GetTourMatchOppResp_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GetTourMatchOppResp_MsgID_value, data, "GetTourMatchOppResp_MsgID")
	if err != nil {
		return err
	}
	*x = GetTourMatchOppResp_MsgID(value)
	return nil
}
func (GetTourMatchOppResp_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor78, []int{9, 0}
}

type SendTourMatchS2C_MsgID int32

const (
	SendTourMatchS2C_eMsgID SendTourMatchS2C_MsgID = 13313
)

var SendTourMatchS2C_MsgID_name = map[int32]string{
	13313: "eMsgID",
}
var SendTourMatchS2C_MsgID_value = map[string]int32{
	"eMsgID": 13313,
}

func (x SendTourMatchS2C_MsgID) Enum() *SendTourMatchS2C_MsgID {
	p := new(SendTourMatchS2C_MsgID)
	*p = x
	return p
}
func (x SendTourMatchS2C_MsgID) String() string {
	return proto.EnumName(SendTourMatchS2C_MsgID_name, int32(x))
}
func (x *SendTourMatchS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SendTourMatchS2C_MsgID_value, data, "SendTourMatchS2C_MsgID")
	if err != nil {
		return err
	}
	*x = SendTourMatchS2C_MsgID(value)
	return nil
}
func (SendTourMatchS2C_MsgID) EnumDescriptor() ([]byte, []int) { return fileDescriptor78, []int{12, 0} }

type TourMatchSendBuffListS2C_MsgID int32

const (
	TourMatchSendBuffListS2C_eMsgID TourMatchSendBuffListS2C_MsgID = 13314
)

var TourMatchSendBuffListS2C_MsgID_name = map[int32]string{
	13314: "eMsgID",
}
var TourMatchSendBuffListS2C_MsgID_value = map[string]int32{
	"eMsgID": 13314,
}

func (x TourMatchSendBuffListS2C_MsgID) Enum() *TourMatchSendBuffListS2C_MsgID {
	p := new(TourMatchSendBuffListS2C_MsgID)
	*p = x
	return p
}
func (x TourMatchSendBuffListS2C_MsgID) String() string {
	return proto.EnumName(TourMatchSendBuffListS2C_MsgID_name, int32(x))
}
func (x *TourMatchSendBuffListS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TourMatchSendBuffListS2C_MsgID_value, data, "TourMatchSendBuffListS2C_MsgID")
	if err != nil {
		return err
	}
	*x = TourMatchSendBuffListS2C_MsgID(value)
	return nil
}
func (TourMatchSendBuffListS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor78, []int{13, 0}
}

type TourMatchChoiceBuffC2S_MsgID int32

const (
	TourMatchChoiceBuffC2S_eMsgID TourMatchChoiceBuffC2S_MsgID = 13315
)

var TourMatchChoiceBuffC2S_MsgID_name = map[int32]string{
	13315: "eMsgID",
}
var TourMatchChoiceBuffC2S_MsgID_value = map[string]int32{
	"eMsgID": 13315,
}

func (x TourMatchChoiceBuffC2S_MsgID) Enum() *TourMatchChoiceBuffC2S_MsgID {
	p := new(TourMatchChoiceBuffC2S_MsgID)
	*p = x
	return p
}
func (x TourMatchChoiceBuffC2S_MsgID) String() string {
	return proto.EnumName(TourMatchChoiceBuffC2S_MsgID_name, int32(x))
}
func (x *TourMatchChoiceBuffC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TourMatchChoiceBuffC2S_MsgID_value, data, "TourMatchChoiceBuffC2S_MsgID")
	if err != nil {
		return err
	}
	*x = TourMatchChoiceBuffC2S_MsgID(value)
	return nil
}
func (TourMatchChoiceBuffC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor78, []int{14, 0}
}

type TourMatchChoiceBuffS2C_MsgID int32

const (
	TourMatchChoiceBuffS2C_eMsgID TourMatchChoiceBuffS2C_MsgID = 13315
)

var TourMatchChoiceBuffS2C_MsgID_name = map[int32]string{
	13315: "eMsgID",
}
var TourMatchChoiceBuffS2C_MsgID_value = map[string]int32{
	"eMsgID": 13315,
}

func (x TourMatchChoiceBuffS2C_MsgID) Enum() *TourMatchChoiceBuffS2C_MsgID {
	p := new(TourMatchChoiceBuffS2C_MsgID)
	*p = x
	return p
}
func (x TourMatchChoiceBuffS2C_MsgID) String() string {
	return proto.EnumName(TourMatchChoiceBuffS2C_MsgID_name, int32(x))
}
func (x *TourMatchChoiceBuffS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TourMatchChoiceBuffS2C_MsgID_value, data, "TourMatchChoiceBuffS2C_MsgID")
	if err != nil {
		return err
	}
	*x = TourMatchChoiceBuffS2C_MsgID(value)
	return nil
}
func (TourMatchChoiceBuffS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor78, []int{15, 0}
}

type TourMatchUseSupplyDepotC2S_MsgID int32

const (
	TourMatchUseSupplyDepotC2S_eMsgID TourMatchUseSupplyDepotC2S_MsgID = 13317
)

var TourMatchUseSupplyDepotC2S_MsgID_name = map[int32]string{
	13317: "eMsgID",
}
var TourMatchUseSupplyDepotC2S_MsgID_value = map[string]int32{
	"eMsgID": 13317,
}

func (x TourMatchUseSupplyDepotC2S_MsgID) Enum() *TourMatchUseSupplyDepotC2S_MsgID {
	p := new(TourMatchUseSupplyDepotC2S_MsgID)
	*p = x
	return p
}
func (x TourMatchUseSupplyDepotC2S_MsgID) String() string {
	return proto.EnumName(TourMatchUseSupplyDepotC2S_MsgID_name, int32(x))
}
func (x *TourMatchUseSupplyDepotC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TourMatchUseSupplyDepotC2S_MsgID_value, data, "TourMatchUseSupplyDepotC2S_MsgID")
	if err != nil {
		return err
	}
	*x = TourMatchUseSupplyDepotC2S_MsgID(value)
	return nil
}
func (TourMatchUseSupplyDepotC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor78, []int{16, 0}
}

type TourMatchUseSupplyDepotS2C_MsgID int32

const (
	TourMatchUseSupplyDepotS2C_eMsgID TourMatchUseSupplyDepotS2C_MsgID = 13317
)

var TourMatchUseSupplyDepotS2C_MsgID_name = map[int32]string{
	13317: "eMsgID",
}
var TourMatchUseSupplyDepotS2C_MsgID_value = map[string]int32{
	"eMsgID": 13317,
}

func (x TourMatchUseSupplyDepotS2C_MsgID) Enum() *TourMatchUseSupplyDepotS2C_MsgID {
	p := new(TourMatchUseSupplyDepotS2C_MsgID)
	*p = x
	return p
}
func (x TourMatchUseSupplyDepotS2C_MsgID) String() string {
	return proto.EnumName(TourMatchUseSupplyDepotS2C_MsgID_name, int32(x))
}
func (x *TourMatchUseSupplyDepotS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TourMatchUseSupplyDepotS2C_MsgID_value, data, "TourMatchUseSupplyDepotS2C_MsgID")
	if err != nil {
		return err
	}
	*x = TourMatchUseSupplyDepotS2C_MsgID(value)
	return nil
}
func (TourMatchUseSupplyDepotS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor78, []int{17, 0}
}

type TourMatchAfterFightUpdateDataS2C_MsgID int32

const (
	TourMatchAfterFightUpdateDataS2C_eMsgID TourMatchAfterFightUpdateDataS2C_MsgID = 13318
)

var TourMatchAfterFightUpdateDataS2C_MsgID_name = map[int32]string{
	13318: "eMsgID",
}
var TourMatchAfterFightUpdateDataS2C_MsgID_value = map[string]int32{
	"eMsgID": 13318,
}

func (x TourMatchAfterFightUpdateDataS2C_MsgID) Enum() *TourMatchAfterFightUpdateDataS2C_MsgID {
	p := new(TourMatchAfterFightUpdateDataS2C_MsgID)
	*p = x
	return p
}
func (x TourMatchAfterFightUpdateDataS2C_MsgID) String() string {
	return proto.EnumName(TourMatchAfterFightUpdateDataS2C_MsgID_name, int32(x))
}
func (x *TourMatchAfterFightUpdateDataS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TourMatchAfterFightUpdateDataS2C_MsgID_value, data, "TourMatchAfterFightUpdateDataS2C_MsgID")
	if err != nil {
		return err
	}
	*x = TourMatchAfterFightUpdateDataS2C_MsgID(value)
	return nil
}
func (TourMatchAfterFightUpdateDataS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor78, []int{18, 0}
}

type TourMatchFullAllPlayerVitC2S_MsgID int32

const (
	TourMatchFullAllPlayerVitC2S_eMsgID TourMatchFullAllPlayerVitC2S_MsgID = 13319
)

var TourMatchFullAllPlayerVitC2S_MsgID_name = map[int32]string{
	13319: "eMsgID",
}
var TourMatchFullAllPlayerVitC2S_MsgID_value = map[string]int32{
	"eMsgID": 13319,
}

func (x TourMatchFullAllPlayerVitC2S_MsgID) Enum() *TourMatchFullAllPlayerVitC2S_MsgID {
	p := new(TourMatchFullAllPlayerVitC2S_MsgID)
	*p = x
	return p
}
func (x TourMatchFullAllPlayerVitC2S_MsgID) String() string {
	return proto.EnumName(TourMatchFullAllPlayerVitC2S_MsgID_name, int32(x))
}
func (x *TourMatchFullAllPlayerVitC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TourMatchFullAllPlayerVitC2S_MsgID_value, data, "TourMatchFullAllPlayerVitC2S_MsgID")
	if err != nil {
		return err
	}
	*x = TourMatchFullAllPlayerVitC2S_MsgID(value)
	return nil
}
func (TourMatchFullAllPlayerVitC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor78, []int{19, 0}
}

type TourMatchFullAllPlayerVitS2C_MsgID int32

const (
	TourMatchFullAllPlayerVitS2C_eMsgID TourMatchFullAllPlayerVitS2C_MsgID = 13319
)

var TourMatchFullAllPlayerVitS2C_MsgID_name = map[int32]string{
	13319: "eMsgID",
}
var TourMatchFullAllPlayerVitS2C_MsgID_value = map[string]int32{
	"eMsgID": 13319,
}

func (x TourMatchFullAllPlayerVitS2C_MsgID) Enum() *TourMatchFullAllPlayerVitS2C_MsgID {
	p := new(TourMatchFullAllPlayerVitS2C_MsgID)
	*p = x
	return p
}
func (x TourMatchFullAllPlayerVitS2C_MsgID) String() string {
	return proto.EnumName(TourMatchFullAllPlayerVitS2C_MsgID_name, int32(x))
}
func (x *TourMatchFullAllPlayerVitS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TourMatchFullAllPlayerVitS2C_MsgID_value, data, "TourMatchFullAllPlayerVitS2C_MsgID")
	if err != nil {
		return err
	}
	*x = TourMatchFullAllPlayerVitS2C_MsgID(value)
	return nil
}
func (TourMatchFullAllPlayerVitS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor78, []int{20, 0}
}

type TourMatchGetFirstLevelDataC2S_MsgID int32

const (
	TourMatchGetFirstLevelDataC2S_eMsgID TourMatchGetFirstLevelDataC2S_MsgID = 13320
)

var TourMatchGetFirstLevelDataC2S_MsgID_name = map[int32]string{
	13320: "eMsgID",
}
var TourMatchGetFirstLevelDataC2S_MsgID_value = map[string]int32{
	"eMsgID": 13320,
}

func (x TourMatchGetFirstLevelDataC2S_MsgID) Enum() *TourMatchGetFirstLevelDataC2S_MsgID {
	p := new(TourMatchGetFirstLevelDataC2S_MsgID)
	*p = x
	return p
}
func (x TourMatchGetFirstLevelDataC2S_MsgID) String() string {
	return proto.EnumName(TourMatchGetFirstLevelDataC2S_MsgID_name, int32(x))
}
func (x *TourMatchGetFirstLevelDataC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TourMatchGetFirstLevelDataC2S_MsgID_value, data, "TourMatchGetFirstLevelDataC2S_MsgID")
	if err != nil {
		return err
	}
	*x = TourMatchGetFirstLevelDataC2S_MsgID(value)
	return nil
}
func (TourMatchGetFirstLevelDataC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor78, []int{21, 0}
}

type TourMatchGetFirstLevelDataS2C_MsgID int32

const (
	TourMatchGetFirstLevelDataS2C_eMsgID TourMatchGetFirstLevelDataS2C_MsgID = 13320
)

var TourMatchGetFirstLevelDataS2C_MsgID_name = map[int32]string{
	13320: "eMsgID",
}
var TourMatchGetFirstLevelDataS2C_MsgID_value = map[string]int32{
	"eMsgID": 13320,
}

func (x TourMatchGetFirstLevelDataS2C_MsgID) Enum() *TourMatchGetFirstLevelDataS2C_MsgID {
	p := new(TourMatchGetFirstLevelDataS2C_MsgID)
	*p = x
	return p
}
func (x TourMatchGetFirstLevelDataS2C_MsgID) String() string {
	return proto.EnumName(TourMatchGetFirstLevelDataS2C_MsgID_name, int32(x))
}
func (x *TourMatchGetFirstLevelDataS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TourMatchGetFirstLevelDataS2C_MsgID_value, data, "TourMatchGetFirstLevelDataS2C_MsgID")
	if err != nil {
		return err
	}
	*x = TourMatchGetFirstLevelDataS2C_MsgID(value)
	return nil
}
func (TourMatchGetFirstLevelDataS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor78, []int{22, 0}
}

type UpdateTourMatchLevelDataS2C_MsgID int32

const (
	UpdateTourMatchLevelDataS2C_eMsgID UpdateTourMatchLevelDataS2C_MsgID = 13321
)

var UpdateTourMatchLevelDataS2C_MsgID_name = map[int32]string{
	13321: "eMsgID",
}
var UpdateTourMatchLevelDataS2C_MsgID_value = map[string]int32{
	"eMsgID": 13321,
}

func (x UpdateTourMatchLevelDataS2C_MsgID) Enum() *UpdateTourMatchLevelDataS2C_MsgID {
	p := new(UpdateTourMatchLevelDataS2C_MsgID)
	*p = x
	return p
}
func (x UpdateTourMatchLevelDataS2C_MsgID) String() string {
	return proto.EnumName(UpdateTourMatchLevelDataS2C_MsgID_name, int32(x))
}
func (x *UpdateTourMatchLevelDataS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(UpdateTourMatchLevelDataS2C_MsgID_value, data, "UpdateTourMatchLevelDataS2C_MsgID")
	if err != nil {
		return err
	}
	*x = UpdateTourMatchLevelDataS2C_MsgID(value)
	return nil
}
func (UpdateTourMatchLevelDataS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor78, []int{23, 0}
}

type TourMatchLotteryC2S_MsgID int32

const (
	TourMatchLotteryC2S_eMsgID TourMatchLotteryC2S_MsgID = 13322
)

var TourMatchLotteryC2S_MsgID_name = map[int32]string{
	13322: "eMsgID",
}
var TourMatchLotteryC2S_MsgID_value = map[string]int32{
	"eMsgID": 13322,
}

func (x TourMatchLotteryC2S_MsgID) Enum() *TourMatchLotteryC2S_MsgID {
	p := new(TourMatchLotteryC2S_MsgID)
	*p = x
	return p
}
func (x TourMatchLotteryC2S_MsgID) String() string {
	return proto.EnumName(TourMatchLotteryC2S_MsgID_name, int32(x))
}
func (x *TourMatchLotteryC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TourMatchLotteryC2S_MsgID_value, data, "TourMatchLotteryC2S_MsgID")
	if err != nil {
		return err
	}
	*x = TourMatchLotteryC2S_MsgID(value)
	return nil
}
func (TourMatchLotteryC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor78, []int{24, 0}
}

type TourMatchLotteryS2C_MsgID int32

const (
	TourMatchLotteryS2C_eMsgID TourMatchLotteryS2C_MsgID = 13322
)

var TourMatchLotteryS2C_MsgID_name = map[int32]string{
	13322: "eMsgID",
}
var TourMatchLotteryS2C_MsgID_value = map[string]int32{
	"eMsgID": 13322,
}

func (x TourMatchLotteryS2C_MsgID) Enum() *TourMatchLotteryS2C_MsgID {
	p := new(TourMatchLotteryS2C_MsgID)
	*p = x
	return p
}
func (x TourMatchLotteryS2C_MsgID) String() string {
	return proto.EnumName(TourMatchLotteryS2C_MsgID_name, int32(x))
}
func (x *TourMatchLotteryS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TourMatchLotteryS2C_MsgID_value, data, "TourMatchLotteryS2C_MsgID")
	if err != nil {
		return err
	}
	*x = TourMatchLotteryS2C_MsgID(value)
	return nil
}
func (TourMatchLotteryS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor78, []int{25, 0}
}

type TourMatchLotteryGiveUpC2S_MsgID int32

const (
	TourMatchLotteryGiveUpC2S_eMsgID TourMatchLotteryGiveUpC2S_MsgID = 13323
)

var TourMatchLotteryGiveUpC2S_MsgID_name = map[int32]string{
	13323: "eMsgID",
}
var TourMatchLotteryGiveUpC2S_MsgID_value = map[string]int32{
	"eMsgID": 13323,
}

func (x TourMatchLotteryGiveUpC2S_MsgID) Enum() *TourMatchLotteryGiveUpC2S_MsgID {
	p := new(TourMatchLotteryGiveUpC2S_MsgID)
	*p = x
	return p
}
func (x TourMatchLotteryGiveUpC2S_MsgID) String() string {
	return proto.EnumName(TourMatchLotteryGiveUpC2S_MsgID_name, int32(x))
}
func (x *TourMatchLotteryGiveUpC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TourMatchLotteryGiveUpC2S_MsgID_value, data, "TourMatchLotteryGiveUpC2S_MsgID")
	if err != nil {
		return err
	}
	*x = TourMatchLotteryGiveUpC2S_MsgID(value)
	return nil
}
func (TourMatchLotteryGiveUpC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor78, []int{26, 0}
}

type TourMatchLotteryGiveUpS2C_MsgID int32

const (
	TourMatchLotteryGiveUpS2C_eMsgID TourMatchLotteryGiveUpS2C_MsgID = 13323
)

var TourMatchLotteryGiveUpS2C_MsgID_name = map[int32]string{
	13323: "eMsgID",
}
var TourMatchLotteryGiveUpS2C_MsgID_value = map[string]int32{
	"eMsgID": 13323,
}

func (x TourMatchLotteryGiveUpS2C_MsgID) Enum() *TourMatchLotteryGiveUpS2C_MsgID {
	p := new(TourMatchLotteryGiveUpS2C_MsgID)
	*p = x
	return p
}
func (x TourMatchLotteryGiveUpS2C_MsgID) String() string {
	return proto.EnumName(TourMatchLotteryGiveUpS2C_MsgID_name, int32(x))
}
func (x *TourMatchLotteryGiveUpS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TourMatchLotteryGiveUpS2C_MsgID_value, data, "TourMatchLotteryGiveUpS2C_MsgID")
	if err != nil {
		return err
	}
	*x = TourMatchLotteryGiveUpS2C_MsgID(value)
	return nil
}
func (TourMatchLotteryGiveUpS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor78, []int{27, 0}
}

type TourMatchBranchAfterFightUpdateDataS2C_MsgID int32

const (
	TourMatchBranchAfterFightUpdateDataS2C_eMsgID TourMatchBranchAfterFightUpdateDataS2C_MsgID = 13324
)

var TourMatchBranchAfterFightUpdateDataS2C_MsgID_name = map[int32]string{
	13324: "eMsgID",
}
var TourMatchBranchAfterFightUpdateDataS2C_MsgID_value = map[string]int32{
	"eMsgID": 13324,
}

func (x TourMatchBranchAfterFightUpdateDataS2C_MsgID) Enum() *TourMatchBranchAfterFightUpdateDataS2C_MsgID {
	p := new(TourMatchBranchAfterFightUpdateDataS2C_MsgID)
	*p = x
	return p
}
func (x TourMatchBranchAfterFightUpdateDataS2C_MsgID) String() string {
	return proto.EnumName(TourMatchBranchAfterFightUpdateDataS2C_MsgID_name, int32(x))
}
func (x *TourMatchBranchAfterFightUpdateDataS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TourMatchBranchAfterFightUpdateDataS2C_MsgID_value, data, "TourMatchBranchAfterFightUpdateDataS2C_MsgID")
	if err != nil {
		return err
	}
	*x = TourMatchBranchAfterFightUpdateDataS2C_MsgID(value)
	return nil
}
func (TourMatchBranchAfterFightUpdateDataS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor78, []int{28, 0}
}

type TourMatchShaoDangC2S_MsgID int32

const (
	TourMatchShaoDangC2S_eMsgID TourMatchShaoDangC2S_MsgID = 13326
)

var TourMatchShaoDangC2S_MsgID_name = map[int32]string{
	13326: "eMsgID",
}
var TourMatchShaoDangC2S_MsgID_value = map[string]int32{
	"eMsgID": 13326,
}

func (x TourMatchShaoDangC2S_MsgID) Enum() *TourMatchShaoDangC2S_MsgID {
	p := new(TourMatchShaoDangC2S_MsgID)
	*p = x
	return p
}
func (x TourMatchShaoDangC2S_MsgID) String() string {
	return proto.EnumName(TourMatchShaoDangC2S_MsgID_name, int32(x))
}
func (x *TourMatchShaoDangC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TourMatchShaoDangC2S_MsgID_value, data, "TourMatchShaoDangC2S_MsgID")
	if err != nil {
		return err
	}
	*x = TourMatchShaoDangC2S_MsgID(value)
	return nil
}
func (TourMatchShaoDangC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor78, []int{29, 0}
}

type TourMatchShaoDangS2C_MsgID int32

const (
	TourMatchShaoDangS2C_eMsgID TourMatchShaoDangS2C_MsgID = 13326
)

var TourMatchShaoDangS2C_MsgID_name = map[int32]string{
	13326: "eMsgID",
}
var TourMatchShaoDangS2C_MsgID_value = map[string]int32{
	"eMsgID": 13326,
}

func (x TourMatchShaoDangS2C_MsgID) Enum() *TourMatchShaoDangS2C_MsgID {
	p := new(TourMatchShaoDangS2C_MsgID)
	*p = x
	return p
}
func (x TourMatchShaoDangS2C_MsgID) String() string {
	return proto.EnumName(TourMatchShaoDangS2C_MsgID_name, int32(x))
}
func (x *TourMatchShaoDangS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(TourMatchShaoDangS2C_MsgID_value, data, "TourMatchShaoDangS2C_MsgID")
	if err != nil {
		return err
	}
	*x = TourMatchShaoDangS2C_MsgID(value)
	return nil
}
func (TourMatchShaoDangS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor78, []int{30, 0}
}

// 扫荡待选列表需要先存N次的结果，扫荡完成后再来选择
type BuffList struct {
	ChoiceList       []int32 `protobuf:"varint,1,rep,name=ChoiceList" json:"ChoiceList,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *BuffList) Reset()                    { *m = BuffList{} }
func (m *BuffList) String() string            { return proto.CompactTextString(m) }
func (*BuffList) ProtoMessage()               {}
func (*BuffList) Descriptor() ([]byte, []int) { return fileDescriptor78, []int{0} }

func (m *BuffList) GetChoiceList() []int32 {
	if m != nil {
		return m.ChoiceList
	}
	return nil
}

// 巡演赛玩家数据
type TourMatchData struct {
	// 下次重置时间
	NextResetTime *int64 `protobuf:"varint,1,opt,name=nextResetTime" json:"nextResetTime,omitempty"`
	// 关卡信息列表（仅已经通关及可达关卡）
	LevelList []*TourMatchLevelInfo `protobuf:"bytes,3,rep,name=levelList" json:"levelList,omitempty"`
	// 领取的buff
	BuffIdList []int32 `protobuf:"varint,4,rep,name=buffIdList" json:"buffIdList,omitempty"`
	// 球员体力列表
	PlayerVitList []*PlayerVit `protobuf:"bytes,5,rep,name=playerVitList" json:"playerVitList,omitempty"`
	// 对方球员体力列表
	OppPlayerVitList []*PlayerVit `protobuf:"bytes,6,rep,name=oppPlayerVitList" json:"oppPlayerVitList,omitempty"`
	// 补给站列表
	SupplyDepotList []*SupplyDepot `protobuf:"bytes,7,rep,name=supplyDepotList" json:"supplyDepotList,omitempty"`
	// 待选buff列表
	WaitChoiceBuffList []*BuffList `protobuf:"bytes,8,rep,name=waitChoiceBuffList" json:"waitChoiceBuffList,omitempty"`
	// 当前关卡id
	CurrentLevelId *int32 `protobuf:"varint,9,opt,name=currentLevelId" json:"currentLevelId,omitempty"`
	// 抽奖信息
	Lottery []*TourMatchLottery `protobuf:"bytes,10,rep,name=lottery" json:"lottery,omitempty"`
	// 巡演赛分支战斗信息
	BranchLevelInfo []*TourMatchLevelInfo `protobuf:"bytes,11,rep,name=branchLevelInfo" json:"branchLevelInfo,omitempty"`
	// 本轮战力
	CurrentRoundFightPower *uint64 `protobuf:"varint,12,opt,name=currentRoundFightPower" json:"currentRoundFightPower,omitempty"`
	// 本轮玩家等级
	CurrentRoundGamerLv *int32 `protobuf:"varint,13,opt,name=currentRoundGamerLv" json:"currentRoundGamerLv,omitempty"`
	// 前次的战斗区间
	LastBattleValueSection *int32 `protobuf:"varint,14,opt,name=lastBattleValueSection" json:"lastBattleValueSection,omitempty"`
	// 上一次通关数量
	LastPassLevelCount *int32 `protobuf:"varint,15,opt,name=lastPassLevelCount" json:"lastPassLevelCount,omitempty"`
	// 上一次扫荡标记 true已扫荡
	LastSaoDangFlag  *bool  `protobuf:"varint,16,opt,name=lastSaoDangFlag" json:"lastSaoDangFlag,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *TourMatchData) Reset()                    { *m = TourMatchData{} }
func (m *TourMatchData) String() string            { return proto.CompactTextString(m) }
func (*TourMatchData) ProtoMessage()               {}
func (*TourMatchData) Descriptor() ([]byte, []int) { return fileDescriptor78, []int{1} }

func (m *TourMatchData) GetNextResetTime() int64 {
	if m != nil && m.NextResetTime != nil {
		return *m.NextResetTime
	}
	return 0
}

func (m *TourMatchData) GetLevelList() []*TourMatchLevelInfo {
	if m != nil {
		return m.LevelList
	}
	return nil
}

func (m *TourMatchData) GetBuffIdList() []int32 {
	if m != nil {
		return m.BuffIdList
	}
	return nil
}

func (m *TourMatchData) GetPlayerVitList() []*PlayerVit {
	if m != nil {
		return m.PlayerVitList
	}
	return nil
}

func (m *TourMatchData) GetOppPlayerVitList() []*PlayerVit {
	if m != nil {
		return m.OppPlayerVitList
	}
	return nil
}

func (m *TourMatchData) GetSupplyDepotList() []*SupplyDepot {
	if m != nil {
		return m.SupplyDepotList
	}
	return nil
}

func (m *TourMatchData) GetWaitChoiceBuffList() []*BuffList {
	if m != nil {
		return m.WaitChoiceBuffList
	}
	return nil
}

func (m *TourMatchData) GetCurrentLevelId() int32 {
	if m != nil && m.CurrentLevelId != nil {
		return *m.CurrentLevelId
	}
	return 0
}

func (m *TourMatchData) GetLottery() []*TourMatchLottery {
	if m != nil {
		return m.Lottery
	}
	return nil
}

func (m *TourMatchData) GetBranchLevelInfo() []*TourMatchLevelInfo {
	if m != nil {
		return m.BranchLevelInfo
	}
	return nil
}

func (m *TourMatchData) GetCurrentRoundFightPower() uint64 {
	if m != nil && m.CurrentRoundFightPower != nil {
		return *m.CurrentRoundFightPower
	}
	return 0
}

func (m *TourMatchData) GetCurrentRoundGamerLv() int32 {
	if m != nil && m.CurrentRoundGamerLv != nil {
		return *m.CurrentRoundGamerLv
	}
	return 0
}

func (m *TourMatchData) GetLastBattleValueSection() int32 {
	if m != nil && m.LastBattleValueSection != nil {
		return *m.LastBattleValueSection
	}
	return 0
}

func (m *TourMatchData) GetLastPassLevelCount() int32 {
	if m != nil && m.LastPassLevelCount != nil {
		return *m.LastPassLevelCount
	}
	return 0
}

func (m *TourMatchData) GetLastSaoDangFlag() bool {
	if m != nil && m.LastSaoDangFlag != nil {
		return *m.LastSaoDangFlag
	}
	return false
}

// 巡演赛抽奖信息
type TourMatchLottery struct {
	PreLevel         *int32 `protobuf:"varint,1,opt,name=preLevel" json:"preLevel,omitempty"`
	DrawCount        *int32 `protobuf:"varint,2,opt,name=drawCount" json:"drawCount,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *TourMatchLottery) Reset()                    { *m = TourMatchLottery{} }
func (m *TourMatchLottery) String() string            { return proto.CompactTextString(m) }
func (*TourMatchLottery) ProtoMessage()               {}
func (*TourMatchLottery) Descriptor() ([]byte, []int) { return fileDescriptor78, []int{2} }

func (m *TourMatchLottery) GetPreLevel() int32 {
	if m != nil && m.PreLevel != nil {
		return *m.PreLevel
	}
	return 0
}

func (m *TourMatchLottery) GetDrawCount() int32 {
	if m != nil && m.DrawCount != nil {
		return *m.DrawCount
	}
	return 0
}

// 巡演赛对手数据
type TourMatchOppData struct {
	LevelId          *int32            `protobuf:"varint,1,opt,name=levelId" json:"levelId,omitempty"`
	OppSquadData     *PvpRoleSquadInfo `protobuf:"bytes,2,opt,name=oppSquadData" json:"oppSquadData,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *TourMatchOppData) Reset()                    { *m = TourMatchOppData{} }
func (m *TourMatchOppData) String() string            { return proto.CompactTextString(m) }
func (*TourMatchOppData) ProtoMessage()               {}
func (*TourMatchOppData) Descriptor() ([]byte, []int) { return fileDescriptor78, []int{3} }

func (m *TourMatchOppData) GetLevelId() int32 {
	if m != nil && m.LevelId != nil {
		return *m.LevelId
	}
	return 0
}

func (m *TourMatchOppData) GetOppSquadData() *PvpRoleSquadInfo {
	if m != nil {
		return m.OppSquadData
	}
	return nil
}

// 球员体力
type PlayerVit struct {
	PlayerInstId     *int64 `protobuf:"varint,1,opt,name=playerInstId" json:"playerInstId,omitempty"`
	CurrentVit       *int32 `protobuf:"varint,2,opt,name=currentVit" json:"currentVit,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *PlayerVit) Reset()                    { *m = PlayerVit{} }
func (m *PlayerVit) String() string            { return proto.CompactTextString(m) }
func (*PlayerVit) ProtoMessage()               {}
func (*PlayerVit) Descriptor() ([]byte, []int) { return fileDescriptor78, []int{4} }

func (m *PlayerVit) GetPlayerInstId() int64 {
	if m != nil && m.PlayerInstId != nil {
		return *m.PlayerInstId
	}
	return 0
}

func (m *PlayerVit) GetCurrentVit() int32 {
	if m != nil && m.CurrentVit != nil {
		return *m.CurrentVit
	}
	return 0
}

// 巡演赛关卡信息
type TourMatchLevelInfo struct {
	LvId                 *int32               `protobuf:"varint,1,opt,name=lvId" json:"lvId,omitempty"`
	State                *TourMatchLevelState `protobuf:"varint,2,opt,name=state,enum=TourMatchLevelState" json:"state,omitempty"`
	OppName              *string              `protobuf:"bytes,4,opt,name=oppName" json:"oppName,omitempty"`
	OppIcon              *int32               `protobuf:"varint,5,opt,name=oppIcon" json:"oppIcon,omitempty"`
	OppGid               *int32               `protobuf:"varint,6,opt,name=oppGid" json:"oppGid,omitempty"`
	OppSquadData         *PvpRoleSquadInfo    `protobuf:"bytes,7,opt,name=oppSquadData" json:"oppSquadData,omitempty"`
	OppTeamId            *int32               `protobuf:"varint,8,opt,name=oppTeamId" json:"oppTeamId,omitempty"`
	IsRobot              *bool                `protobuf:"varint,9,opt,name=isRobot" json:"isRobot,omitempty"`
	RobotTeamNpcId       *int32               `protobuf:"varint,10,opt,name=robotTeamNpcId" json:"robotTeamNpcId,omitempty"`
	RobotRealBattleValue *int32               `protobuf:"varint,11,opt,name=robotRealBattleValue" json:"robotRealBattleValue,omitempty"`
	BattleValue          *int32               `protobuf:"varint,12,opt,name=battleValue" json:"battleValue,omitempty"`
	XXX_unrecognized     []byte               `json:"-"`
}

func (m *TourMatchLevelInfo) Reset()                    { *m = TourMatchLevelInfo{} }
func (m *TourMatchLevelInfo) String() string            { return proto.CompactTextString(m) }
func (*TourMatchLevelInfo) ProtoMessage()               {}
func (*TourMatchLevelInfo) Descriptor() ([]byte, []int) { return fileDescriptor78, []int{5} }

func (m *TourMatchLevelInfo) GetLvId() int32 {
	if m != nil && m.LvId != nil {
		return *m.LvId
	}
	return 0
}

func (m *TourMatchLevelInfo) GetState() TourMatchLevelState {
	if m != nil && m.State != nil {
		return *m.State
	}
	return TourMatchLevelState_TMlS_Not_Pass
}

func (m *TourMatchLevelInfo) GetOppName() string {
	if m != nil && m.OppName != nil {
		return *m.OppName
	}
	return ""
}

func (m *TourMatchLevelInfo) GetOppIcon() int32 {
	if m != nil && m.OppIcon != nil {
		return *m.OppIcon
	}
	return 0
}

func (m *TourMatchLevelInfo) GetOppGid() int32 {
	if m != nil && m.OppGid != nil {
		return *m.OppGid
	}
	return 0
}

func (m *TourMatchLevelInfo) GetOppSquadData() *PvpRoleSquadInfo {
	if m != nil {
		return m.OppSquadData
	}
	return nil
}

func (m *TourMatchLevelInfo) GetOppTeamId() int32 {
	if m != nil && m.OppTeamId != nil {
		return *m.OppTeamId
	}
	return 0
}

func (m *TourMatchLevelInfo) GetIsRobot() bool {
	if m != nil && m.IsRobot != nil {
		return *m.IsRobot
	}
	return false
}

func (m *TourMatchLevelInfo) GetRobotTeamNpcId() int32 {
	if m != nil && m.RobotTeamNpcId != nil {
		return *m.RobotTeamNpcId
	}
	return 0
}

func (m *TourMatchLevelInfo) GetRobotRealBattleValue() int32 {
	if m != nil && m.RobotRealBattleValue != nil {
		return *m.RobotRealBattleValue
	}
	return 0
}

func (m *TourMatchLevelInfo) GetBattleValue() int32 {
	if m != nil && m.BattleValue != nil {
		return *m.BattleValue
	}
	return 0
}

// 补给站
type SupplyDepot struct {
	PreLevelCfgId    *int32            `protobuf:"varint,1,opt,name=preLevelCfgId" json:"preLevelCfgId,omitempty"`
	State            *SupplyDepotState `protobuf:"varint,2,opt,name=state,enum=SupplyDepotState" json:"state,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *SupplyDepot) Reset()                    { *m = SupplyDepot{} }
func (m *SupplyDepot) String() string            { return proto.CompactTextString(m) }
func (*SupplyDepot) ProtoMessage()               {}
func (*SupplyDepot) Descriptor() ([]byte, []int) { return fileDescriptor78, []int{6} }

func (m *SupplyDepot) GetPreLevelCfgId() int32 {
	if m != nil && m.PreLevelCfgId != nil {
		return *m.PreLevelCfgId
	}
	return 0
}

func (m *SupplyDepot) GetState() SupplyDepotState {
	if m != nil && m.State != nil {
		return *m.State
	}
	return SupplyDepotState_SDS_NotUse
}

// 巡演赛重置（每两天重置一次）
type TourMatchRefresh struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *TourMatchRefresh) Reset()                    { *m = TourMatchRefresh{} }
func (m *TourMatchRefresh) String() string            { return proto.CompactTextString(m) }
func (*TourMatchRefresh) ProtoMessage()               {}
func (*TourMatchRefresh) Descriptor() ([]byte, []int) { return fileDescriptor78, []int{7} }

// 获取巡演赛对手请求
type GetTourMatchOppReq struct {
	Gid              *int32  `protobuf:"varint,1,opt,name=gid" json:"gid,omitempty"`
	MaxBattleValue   *uint64 `protobuf:"varint,2,opt,name=maxBattleValue" json:"maxBattleValue,omitempty"`
	ExcludeList      []int32 `protobuf:"varint,3,rep,name=excludeList" json:"excludeList,omitempty"`
	LevelId          *int32  `protobuf:"varint,4,opt,name=levelId" json:"levelId,omitempty"`
	IsBranch         *bool   `protobuf:"varint,5,opt,name=isBranch" json:"isBranch,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GetTourMatchOppReq) Reset()                    { *m = GetTourMatchOppReq{} }
func (m *GetTourMatchOppReq) String() string            { return proto.CompactTextString(m) }
func (*GetTourMatchOppReq) ProtoMessage()               {}
func (*GetTourMatchOppReq) Descriptor() ([]byte, []int) { return fileDescriptor78, []int{8} }

func (m *GetTourMatchOppReq) GetGid() int32 {
	if m != nil && m.Gid != nil {
		return *m.Gid
	}
	return 0
}

func (m *GetTourMatchOppReq) GetMaxBattleValue() uint64 {
	if m != nil && m.MaxBattleValue != nil {
		return *m.MaxBattleValue
	}
	return 0
}

func (m *GetTourMatchOppReq) GetExcludeList() []int32 {
	if m != nil {
		return m.ExcludeList
	}
	return nil
}

func (m *GetTourMatchOppReq) GetLevelId() int32 {
	if m != nil && m.LevelId != nil {
		return *m.LevelId
	}
	return 0
}

func (m *GetTourMatchOppReq) GetIsBranch() bool {
	if m != nil && m.IsBranch != nil {
		return *m.IsBranch
	}
	return false
}

// 获取巡演赛对手响应
type GetTourMatchOppResp struct {
	OppInfo          *TourMatchOppInfo `protobuf:"bytes,1,opt,name=oppInfo" json:"oppInfo,omitempty"`
	LevelId          *int32            `protobuf:"varint,2,opt,name=levelId" json:"levelId,omitempty"`
	IsBranch         *bool             `protobuf:"varint,5,opt,name=isBranch" json:"isBranch,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *GetTourMatchOppResp) Reset()                    { *m = GetTourMatchOppResp{} }
func (m *GetTourMatchOppResp) String() string            { return proto.CompactTextString(m) }
func (*GetTourMatchOppResp) ProtoMessage()               {}
func (*GetTourMatchOppResp) Descriptor() ([]byte, []int) { return fileDescriptor78, []int{9} }

func (m *GetTourMatchOppResp) GetOppInfo() *TourMatchOppInfo {
	if m != nil {
		return m.OppInfo
	}
	return nil
}

func (m *GetTourMatchOppResp) GetLevelId() int32 {
	if m != nil && m.LevelId != nil {
		return *m.LevelId
	}
	return 0
}

func (m *GetTourMatchOppResp) GetIsBranch() bool {
	if m != nil && m.IsBranch != nil {
		return *m.IsBranch
	}
	return false
}

// 巡演赛对手信息
type TourMatchOppInfo struct {
	Gid              *int32            `protobuf:"varint,1,opt,name=gid" json:"gid,omitempty"`
	Name             *string           `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	TeamId           *int32            `protobuf:"varint,3,opt,name=teamId" json:"teamId,omitempty"`
	Icon             *int32            `protobuf:"varint,4,opt,name=icon" json:"icon,omitempty"`
	SquadInfo        *PvpRoleSquadInfo `protobuf:"bytes,5,opt,name=squadInfo" json:"squadInfo,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *TourMatchOppInfo) Reset()                    { *m = TourMatchOppInfo{} }
func (m *TourMatchOppInfo) String() string            { return proto.CompactTextString(m) }
func (*TourMatchOppInfo) ProtoMessage()               {}
func (*TourMatchOppInfo) Descriptor() ([]byte, []int) { return fileDescriptor78, []int{10} }

func (m *TourMatchOppInfo) GetGid() int32 {
	if m != nil && m.Gid != nil {
		return *m.Gid
	}
	return 0
}

func (m *TourMatchOppInfo) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *TourMatchOppInfo) GetTeamId() int32 {
	if m != nil && m.TeamId != nil {
		return *m.TeamId
	}
	return 0
}

func (m *TourMatchOppInfo) GetIcon() int32 {
	if m != nil && m.Icon != nil {
		return *m.Icon
	}
	return 0
}

func (m *TourMatchOppInfo) GetSquadInfo() *PvpRoleSquadInfo {
	if m != nil {
		return m.SquadInfo
	}
	return nil
}

// 巡演赛匹配玩家数据
type TourMatchGamerInfo struct {
	// 玩家id
	Gid *int32 `protobuf:"varint,1,opt,name=gid" json:"gid,omitempty"`
	// 玩家名称
	Name *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	// 玩家队伍id
	TeamId *int32 `protobuf:"varint,3,opt,name=teamId" json:"teamId,omitempty"`
	// 玩家icon
	Icon *int32 `protobuf:"varint,4,opt,name=icon" json:"icon,omitempty"`
	// 玩家战力
	FightPower       *int32 `protobuf:"varint,5,opt,name=fightPower" json:"fightPower,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *TourMatchGamerInfo) Reset()                    { *m = TourMatchGamerInfo{} }
func (m *TourMatchGamerInfo) String() string            { return proto.CompactTextString(m) }
func (*TourMatchGamerInfo) ProtoMessage()               {}
func (*TourMatchGamerInfo) Descriptor() ([]byte, []int) { return fileDescriptor78, []int{11} }

func (m *TourMatchGamerInfo) GetGid() int32 {
	if m != nil && m.Gid != nil {
		return *m.Gid
	}
	return 0
}

func (m *TourMatchGamerInfo) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *TourMatchGamerInfo) GetTeamId() int32 {
	if m != nil && m.TeamId != nil {
		return *m.TeamId
	}
	return 0
}

func (m *TourMatchGamerInfo) GetIcon() int32 {
	if m != nil && m.Icon != nil {
		return *m.Icon
	}
	return 0
}

func (m *TourMatchGamerInfo) GetFightPower() int32 {
	if m != nil && m.FightPower != nil {
		return *m.FightPower
	}
	return 0
}

// 登录发送巡演赛数据
type SendTourMatchS2C struct {
	Data             *TourMatchData `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *SendTourMatchS2C) Reset()                    { *m = SendTourMatchS2C{} }
func (m *SendTourMatchS2C) String() string            { return proto.CompactTextString(m) }
func (*SendTourMatchS2C) ProtoMessage()               {}
func (*SendTourMatchS2C) Descriptor() ([]byte, []int) { return fileDescriptor78, []int{12} }

func (m *SendTourMatchS2C) GetData() *TourMatchData {
	if m != nil {
		return m.Data
	}
	return nil
}

// 巡演赛：发送buff列表
type TourMatchSendBuffListS2C struct {
	BuffIdList       []int32 `protobuf:"varint,1,rep,name=buffIdList" json:"buffIdList,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *TourMatchSendBuffListS2C) Reset()                    { *m = TourMatchSendBuffListS2C{} }
func (m *TourMatchSendBuffListS2C) String() string            { return proto.CompactTextString(m) }
func (*TourMatchSendBuffListS2C) ProtoMessage()               {}
func (*TourMatchSendBuffListS2C) Descriptor() ([]byte, []int) { return fileDescriptor78, []int{13} }

func (m *TourMatchSendBuffListS2C) GetBuffIdList() []int32 {
	if m != nil {
		return m.BuffIdList
	}
	return nil
}

// 巡演赛：选择buff
type TourMatchChoiceBuffC2S struct {
	BuffId           *int32 `protobuf:"varint,1,opt,name=buffId" json:"buffId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *TourMatchChoiceBuffC2S) Reset()                    { *m = TourMatchChoiceBuffC2S{} }
func (m *TourMatchChoiceBuffC2S) String() string            { return proto.CompactTextString(m) }
func (*TourMatchChoiceBuffC2S) ProtoMessage()               {}
func (*TourMatchChoiceBuffC2S) Descriptor() ([]byte, []int) { return fileDescriptor78, []int{14} }

func (m *TourMatchChoiceBuffC2S) GetBuffId() int32 {
	if m != nil && m.BuffId != nil {
		return *m.BuffId
	}
	return 0
}

// 巡演赛：选择buff
type TourMatchChoiceBuffS2C struct {
	BuffId           *int32 `protobuf:"varint,1,opt,name=buffId" json:"buffId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *TourMatchChoiceBuffS2C) Reset()                    { *m = TourMatchChoiceBuffS2C{} }
func (m *TourMatchChoiceBuffS2C) String() string            { return proto.CompactTextString(m) }
func (*TourMatchChoiceBuffS2C) ProtoMessage()               {}
func (*TourMatchChoiceBuffS2C) Descriptor() ([]byte, []int) { return fileDescriptor78, []int{15} }

func (m *TourMatchChoiceBuffS2C) GetBuffId() int32 {
	if m != nil && m.BuffId != nil {
		return *m.BuffId
	}
	return 0
}

// 巡演赛：使用补给站
type TourMatchUseSupplyDepotC2S struct {
	PreLevelCfgId    *int32 `protobuf:"varint,1,opt,name=preLevelCfgId" json:"preLevelCfgId,omitempty"`
	PlayerInstId     *int64 `protobuf:"varint,2,opt,name=playerInstId" json:"playerInstId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *TourMatchUseSupplyDepotC2S) Reset()                    { *m = TourMatchUseSupplyDepotC2S{} }
func (m *TourMatchUseSupplyDepotC2S) String() string            { return proto.CompactTextString(m) }
func (*TourMatchUseSupplyDepotC2S) ProtoMessage()               {}
func (*TourMatchUseSupplyDepotC2S) Descriptor() ([]byte, []int) { return fileDescriptor78, []int{16} }

func (m *TourMatchUseSupplyDepotC2S) GetPreLevelCfgId() int32 {
	if m != nil && m.PreLevelCfgId != nil {
		return *m.PreLevelCfgId
	}
	return 0
}

func (m *TourMatchUseSupplyDepotC2S) GetPlayerInstId() int64 {
	if m != nil && m.PlayerInstId != nil {
		return *m.PlayerInstId
	}
	return 0
}

// 巡演赛：使用补给站
type TourMatchUseSupplyDepotS2C struct {
	PlayerInstId     *int64       `protobuf:"varint,1,opt,name=playerInstId" json:"playerInstId,omitempty"`
	SupplyDepot      *SupplyDepot `protobuf:"bytes,2,opt,name=supplyDepot" json:"supplyDepot,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *TourMatchUseSupplyDepotS2C) Reset()                    { *m = TourMatchUseSupplyDepotS2C{} }
func (m *TourMatchUseSupplyDepotS2C) String() string            { return proto.CompactTextString(m) }
func (*TourMatchUseSupplyDepotS2C) ProtoMessage()               {}
func (*TourMatchUseSupplyDepotS2C) Descriptor() ([]byte, []int) { return fileDescriptor78, []int{17} }

func (m *TourMatchUseSupplyDepotS2C) GetPlayerInstId() int64 {
	if m != nil && m.PlayerInstId != nil {
		return *m.PlayerInstId
	}
	return 0
}

func (m *TourMatchUseSupplyDepotS2C) GetSupplyDepot() *SupplyDepot {
	if m != nil {
		return m.SupplyDepot
	}
	return nil
}

// 巡演赛：战斗之后更新数据
type TourMatchAfterFightUpdateDataS2C struct {
	IsWin            *bool             `protobuf:"varint,1,opt,name=isWin" json:"isWin,omitempty"`
	PlayerVit        []*PlayerVit      `protobuf:"bytes,2,rep,name=playerVit" json:"playerVit,omitempty"`
	SupplyDepot      *SupplyDepot      `protobuf:"bytes,3,opt,name=supplyDepot" json:"supplyDepot,omitempty"`
	BuffIdList       []*BuffList       `protobuf:"bytes,4,rep,name=buffIdList" json:"buffIdList,omitempty"`
	LevelId          *int32            `protobuf:"varint,5,opt,name=levelId" json:"levelId,omitempty"`
	Lottery          *TourMatchLottery `protobuf:"bytes,6,opt,name=lottery" json:"lottery,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *TourMatchAfterFightUpdateDataS2C) Reset()         { *m = TourMatchAfterFightUpdateDataS2C{} }
func (m *TourMatchAfterFightUpdateDataS2C) String() string { return proto.CompactTextString(m) }
func (*TourMatchAfterFightUpdateDataS2C) ProtoMessage()    {}
func (*TourMatchAfterFightUpdateDataS2C) Descriptor() ([]byte, []int) {
	return fileDescriptor78, []int{18}
}

func (m *TourMatchAfterFightUpdateDataS2C) GetIsWin() bool {
	if m != nil && m.IsWin != nil {
		return *m.IsWin
	}
	return false
}

func (m *TourMatchAfterFightUpdateDataS2C) GetPlayerVit() []*PlayerVit {
	if m != nil {
		return m.PlayerVit
	}
	return nil
}

func (m *TourMatchAfterFightUpdateDataS2C) GetSupplyDepot() *SupplyDepot {
	if m != nil {
		return m.SupplyDepot
	}
	return nil
}

func (m *TourMatchAfterFightUpdateDataS2C) GetBuffIdList() []*BuffList {
	if m != nil {
		return m.BuffIdList
	}
	return nil
}

func (m *TourMatchAfterFightUpdateDataS2C) GetLevelId() int32 {
	if m != nil && m.LevelId != nil {
		return *m.LevelId
	}
	return 0
}

func (m *TourMatchAfterFightUpdateDataS2C) GetLottery() *TourMatchLottery {
	if m != nil {
		return m.Lottery
	}
	return nil
}

// 巡演赛：所有球员回满体力
type TourMatchFullAllPlayerVitC2S struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *TourMatchFullAllPlayerVitC2S) Reset()                    { *m = TourMatchFullAllPlayerVitC2S{} }
func (m *TourMatchFullAllPlayerVitC2S) String() string            { return proto.CompactTextString(m) }
func (*TourMatchFullAllPlayerVitC2S) ProtoMessage()               {}
func (*TourMatchFullAllPlayerVitC2S) Descriptor() ([]byte, []int) { return fileDescriptor78, []int{19} }

// 巡演赛：所有球员回满体力
type TourMatchFullAllPlayerVitS2C struct {
	PlayerVitList    []*PlayerVit `protobuf:"bytes,1,rep,name=playerVitList" json:"playerVitList,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *TourMatchFullAllPlayerVitS2C) Reset()                    { *m = TourMatchFullAllPlayerVitS2C{} }
func (m *TourMatchFullAllPlayerVitS2C) String() string            { return proto.CompactTextString(m) }
func (*TourMatchFullAllPlayerVitS2C) ProtoMessage()               {}
func (*TourMatchFullAllPlayerVitS2C) Descriptor() ([]byte, []int) { return fileDescriptor78, []int{20} }

func (m *TourMatchFullAllPlayerVitS2C) GetPlayerVitList() []*PlayerVit {
	if m != nil {
		return m.PlayerVitList
	}
	return nil
}

// 巡演赛：获取第一关数据
type TourMatchGetFirstLevelDataC2S struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *TourMatchGetFirstLevelDataC2S) Reset()         { *m = TourMatchGetFirstLevelDataC2S{} }
func (m *TourMatchGetFirstLevelDataC2S) String() string { return proto.CompactTextString(m) }
func (*TourMatchGetFirstLevelDataC2S) ProtoMessage()    {}
func (*TourMatchGetFirstLevelDataC2S) Descriptor() ([]byte, []int) {
	return fileDescriptor78, []int{21}
}

// 巡演赛：获取第一关数据
type TourMatchGetFirstLevelDataS2C struct {
	SquadList        []*SquadAllPlayerFinal_Ex `protobuf:"bytes,1,rep,name=squadList" json:"squadList,omitempty"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *TourMatchGetFirstLevelDataS2C) Reset()         { *m = TourMatchGetFirstLevelDataS2C{} }
func (m *TourMatchGetFirstLevelDataS2C) String() string { return proto.CompactTextString(m) }
func (*TourMatchGetFirstLevelDataS2C) ProtoMessage()    {}
func (*TourMatchGetFirstLevelDataS2C) Descriptor() ([]byte, []int) {
	return fileDescriptor78, []int{22}
}

func (m *TourMatchGetFirstLevelDataS2C) GetSquadList() []*SquadAllPlayerFinal_Ex {
	if m != nil {
		return m.SquadList
	}
	return nil
}

// 巡演赛：更新巡演赛关卡信息
type UpdateTourMatchLevelDataS2C struct {
	TourMatchLevelInfo []*TourMatchLevelInfo `protobuf:"bytes,1,rep,name=tourMatchLevelInfo" json:"tourMatchLevelInfo,omitempty"`
	IsBranch           *bool                 `protobuf:"varint,2,opt,name=isBranch" json:"isBranch,omitempty"`
	XXX_unrecognized   []byte                `json:"-"`
}

func (m *UpdateTourMatchLevelDataS2C) Reset()                    { *m = UpdateTourMatchLevelDataS2C{} }
func (m *UpdateTourMatchLevelDataS2C) String() string            { return proto.CompactTextString(m) }
func (*UpdateTourMatchLevelDataS2C) ProtoMessage()               {}
func (*UpdateTourMatchLevelDataS2C) Descriptor() ([]byte, []int) { return fileDescriptor78, []int{23} }

func (m *UpdateTourMatchLevelDataS2C) GetTourMatchLevelInfo() []*TourMatchLevelInfo {
	if m != nil {
		return m.TourMatchLevelInfo
	}
	return nil
}

func (m *UpdateTourMatchLevelDataS2C) GetIsBranch() bool {
	if m != nil && m.IsBranch != nil {
		return *m.IsBranch
	}
	return false
}

// 巡演赛：抽奖
type TourMatchLotteryC2S struct {
	PreLevelId       *int32 `protobuf:"varint,1,opt,name=preLevelId" json:"preLevelId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *TourMatchLotteryC2S) Reset()                    { *m = TourMatchLotteryC2S{} }
func (m *TourMatchLotteryC2S) String() string            { return proto.CompactTextString(m) }
func (*TourMatchLotteryC2S) ProtoMessage()               {}
func (*TourMatchLotteryC2S) Descriptor() ([]byte, []int) { return fileDescriptor78, []int{24} }

func (m *TourMatchLotteryC2S) GetPreLevelId() int32 {
	if m != nil && m.PreLevelId != nil {
		return *m.PreLevelId
	}
	return 0
}

// 巡演赛：抽奖
type TourMatchLotteryS2C struct {
	Lottery          *TourMatchLottery `protobuf:"bytes,1,opt,name=lottery" json:"lottery,omitempty"`
	Item             []*ItemVaryConfig `protobuf:"bytes,2,rep,name=item" json:"item,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *TourMatchLotteryS2C) Reset()                    { *m = TourMatchLotteryS2C{} }
func (m *TourMatchLotteryS2C) String() string            { return proto.CompactTextString(m) }
func (*TourMatchLotteryS2C) ProtoMessage()               {}
func (*TourMatchLotteryS2C) Descriptor() ([]byte, []int) { return fileDescriptor78, []int{25} }

func (m *TourMatchLotteryS2C) GetLottery() *TourMatchLottery {
	if m != nil {
		return m.Lottery
	}
	return nil
}

func (m *TourMatchLotteryS2C) GetItem() []*ItemVaryConfig {
	if m != nil {
		return m.Item
	}
	return nil
}

// 巡演赛：放弃抽奖
type TourMatchLotteryGiveUpC2S struct {
	PreLevelId       *int32 `protobuf:"varint,1,opt,name=preLevelId" json:"preLevelId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *TourMatchLotteryGiveUpC2S) Reset()                    { *m = TourMatchLotteryGiveUpC2S{} }
func (m *TourMatchLotteryGiveUpC2S) String() string            { return proto.CompactTextString(m) }
func (*TourMatchLotteryGiveUpC2S) ProtoMessage()               {}
func (*TourMatchLotteryGiveUpC2S) Descriptor() ([]byte, []int) { return fileDescriptor78, []int{26} }

func (m *TourMatchLotteryGiveUpC2S) GetPreLevelId() int32 {
	if m != nil && m.PreLevelId != nil {
		return *m.PreLevelId
	}
	return 0
}

// 巡演赛：放弃抽奖
type TourMatchLotteryGiveUpS2C struct {
	Lottery          *TourMatchLottery `protobuf:"bytes,1,opt,name=lottery" json:"lottery,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *TourMatchLotteryGiveUpS2C) Reset()                    { *m = TourMatchLotteryGiveUpS2C{} }
func (m *TourMatchLotteryGiveUpS2C) String() string            { return proto.CompactTextString(m) }
func (*TourMatchLotteryGiveUpS2C) ProtoMessage()               {}
func (*TourMatchLotteryGiveUpS2C) Descriptor() ([]byte, []int) { return fileDescriptor78, []int{27} }

func (m *TourMatchLotteryGiveUpS2C) GetLottery() *TourMatchLottery {
	if m != nil {
		return m.Lottery
	}
	return nil
}

// 巡演赛分支赛后更新
type TourMatchBranchAfterFightUpdateDataS2C struct {
	LevelCfgId       *int32 `protobuf:"varint,1,opt,name=levelCfgId" json:"levelCfgId,omitempty"`
	IsWin            *bool  `protobuf:"varint,2,opt,name=isWin" json:"isWin,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *TourMatchBranchAfterFightUpdateDataS2C) Reset() {
	*m = TourMatchBranchAfterFightUpdateDataS2C{}
}
func (m *TourMatchBranchAfterFightUpdateDataS2C) String() string { return proto.CompactTextString(m) }
func (*TourMatchBranchAfterFightUpdateDataS2C) ProtoMessage()    {}
func (*TourMatchBranchAfterFightUpdateDataS2C) Descriptor() ([]byte, []int) {
	return fileDescriptor78, []int{28}
}

func (m *TourMatchBranchAfterFightUpdateDataS2C) GetLevelCfgId() int32 {
	if m != nil && m.LevelCfgId != nil {
		return *m.LevelCfgId
	}
	return 0
}

func (m *TourMatchBranchAfterFightUpdateDataS2C) GetIsWin() bool {
	if m != nil && m.IsWin != nil {
		return *m.IsWin
	}
	return false
}

// 开始扫荡
type TourMatchShaoDangC2S struct {
	LevelCfgId       *int32 `protobuf:"varint,1,opt,name=levelCfgId" json:"levelCfgId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *TourMatchShaoDangC2S) Reset()                    { *m = TourMatchShaoDangC2S{} }
func (m *TourMatchShaoDangC2S) String() string            { return proto.CompactTextString(m) }
func (*TourMatchShaoDangC2S) ProtoMessage()               {}
func (*TourMatchShaoDangC2S) Descriptor() ([]byte, []int) { return fileDescriptor78, []int{29} }

func (m *TourMatchShaoDangC2S) GetLevelCfgId() int32 {
	if m != nil && m.LevelCfgId != nil {
		return *m.LevelCfgId
	}
	return 0
}

// 返回扫荡结果
type TourMatchShaoDangS2C struct {
	LevelCfgId *int32 `protobuf:"varint,1,opt,name=levelCfgId" json:"levelCfgId,omitempty"`
	LevelNum   *int32 `protobuf:"varint,2,opt,name=levelNum" json:"levelNum,omitempty"`
	// 奖励
	Rewards          []*ItemVaryConfigList `protobuf:"bytes,3,rep,name=rewards" json:"rewards,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *TourMatchShaoDangS2C) Reset()                    { *m = TourMatchShaoDangS2C{} }
func (m *TourMatchShaoDangS2C) String() string            { return proto.CompactTextString(m) }
func (*TourMatchShaoDangS2C) ProtoMessage()               {}
func (*TourMatchShaoDangS2C) Descriptor() ([]byte, []int) { return fileDescriptor78, []int{30} }

func (m *TourMatchShaoDangS2C) GetLevelCfgId() int32 {
	if m != nil && m.LevelCfgId != nil {
		return *m.LevelCfgId
	}
	return 0
}

func (m *TourMatchShaoDangS2C) GetLevelNum() int32 {
	if m != nil && m.LevelNum != nil {
		return *m.LevelNum
	}
	return 0
}

func (m *TourMatchShaoDangS2C) GetRewards() []*ItemVaryConfigList {
	if m != nil {
		return m.Rewards
	}
	return nil
}

func init() {
	proto.RegisterType((*BuffList)(nil), "BuffList")
	proto.RegisterType((*TourMatchData)(nil), "TourMatchData")
	proto.RegisterType((*TourMatchLottery)(nil), "TourMatchLottery")
	proto.RegisterType((*TourMatchOppData)(nil), "TourMatchOppData")
	proto.RegisterType((*PlayerVit)(nil), "PlayerVit")
	proto.RegisterType((*TourMatchLevelInfo)(nil), "TourMatchLevelInfo")
	proto.RegisterType((*SupplyDepot)(nil), "SupplyDepot")
	proto.RegisterType((*TourMatchRefresh)(nil), "TourMatchRefresh")
	proto.RegisterType((*GetTourMatchOppReq)(nil), "GetTourMatchOppReq")
	proto.RegisterType((*GetTourMatchOppResp)(nil), "GetTourMatchOppResp")
	proto.RegisterType((*TourMatchOppInfo)(nil), "TourMatchOppInfo")
	proto.RegisterType((*TourMatchGamerInfo)(nil), "TourMatchGamerInfo")
	proto.RegisterType((*SendTourMatchS2C)(nil), "SendTourMatchS2C")
	proto.RegisterType((*TourMatchSendBuffListS2C)(nil), "TourMatchSendBuffListS2C")
	proto.RegisterType((*TourMatchChoiceBuffC2S)(nil), "TourMatchChoiceBuffC2S")
	proto.RegisterType((*TourMatchChoiceBuffS2C)(nil), "TourMatchChoiceBuffS2C")
	proto.RegisterType((*TourMatchUseSupplyDepotC2S)(nil), "TourMatchUseSupplyDepotC2S")
	proto.RegisterType((*TourMatchUseSupplyDepotS2C)(nil), "TourMatchUseSupplyDepotS2C")
	proto.RegisterType((*TourMatchAfterFightUpdateDataS2C)(nil), "TourMatchAfterFightUpdateDataS2C")
	proto.RegisterType((*TourMatchFullAllPlayerVitC2S)(nil), "TourMatchFullAllPlayerVitC2S")
	proto.RegisterType((*TourMatchFullAllPlayerVitS2C)(nil), "TourMatchFullAllPlayerVitS2C")
	proto.RegisterType((*TourMatchGetFirstLevelDataC2S)(nil), "TourMatchGetFirstLevelDataC2S")
	proto.RegisterType((*TourMatchGetFirstLevelDataS2C)(nil), "TourMatchGetFirstLevelDataS2C")
	proto.RegisterType((*UpdateTourMatchLevelDataS2C)(nil), "UpdateTourMatchLevelDataS2C")
	proto.RegisterType((*TourMatchLotteryC2S)(nil), "TourMatchLotteryC2S")
	proto.RegisterType((*TourMatchLotteryS2C)(nil), "TourMatchLotteryS2C")
	proto.RegisterType((*TourMatchLotteryGiveUpC2S)(nil), "TourMatchLotteryGiveUpC2S")
	proto.RegisterType((*TourMatchLotteryGiveUpS2C)(nil), "TourMatchLotteryGiveUpS2C")
	proto.RegisterType((*TourMatchBranchAfterFightUpdateDataS2C)(nil), "TourMatchBranchAfterFightUpdateDataS2C")
	proto.RegisterType((*TourMatchShaoDangC2S)(nil), "TourMatchShaoDangC2S")
	proto.RegisterType((*TourMatchShaoDangS2C)(nil), "TourMatchShaoDangS2C")
	proto.RegisterEnum("TourMatchLevelState", TourMatchLevelState_name, TourMatchLevelState_value)
	proto.RegisterEnum("SupplyDepotState", SupplyDepotState_name, SupplyDepotState_value)
	proto.RegisterEnum("TourMatchRefresh_MsgID", TourMatchRefresh_MsgID_name, TourMatchRefresh_MsgID_value)
	proto.RegisterEnum("GetTourMatchOppReq_MsgID", GetTourMatchOppReq_MsgID_name, GetTourMatchOppReq_MsgID_value)
	proto.RegisterEnum("GetTourMatchOppResp_MsgID", GetTourMatchOppResp_MsgID_name, GetTourMatchOppResp_MsgID_value)
	proto.RegisterEnum("SendTourMatchS2C_MsgID", SendTourMatchS2C_MsgID_name, SendTourMatchS2C_MsgID_value)
	proto.RegisterEnum("TourMatchSendBuffListS2C_MsgID", TourMatchSendBuffListS2C_MsgID_name, TourMatchSendBuffListS2C_MsgID_value)
	proto.RegisterEnum("TourMatchChoiceBuffC2S_MsgID", TourMatchChoiceBuffC2S_MsgID_name, TourMatchChoiceBuffC2S_MsgID_value)
	proto.RegisterEnum("TourMatchChoiceBuffS2C_MsgID", TourMatchChoiceBuffS2C_MsgID_name, TourMatchChoiceBuffS2C_MsgID_value)
	proto.RegisterEnum("TourMatchUseSupplyDepotC2S_MsgID", TourMatchUseSupplyDepotC2S_MsgID_name, TourMatchUseSupplyDepotC2S_MsgID_value)
	proto.RegisterEnum("TourMatchUseSupplyDepotS2C_MsgID", TourMatchUseSupplyDepotS2C_MsgID_name, TourMatchUseSupplyDepotS2C_MsgID_value)
	proto.RegisterEnum("TourMatchAfterFightUpdateDataS2C_MsgID", TourMatchAfterFightUpdateDataS2C_MsgID_name, TourMatchAfterFightUpdateDataS2C_MsgID_value)
	proto.RegisterEnum("TourMatchFullAllPlayerVitC2S_MsgID", TourMatchFullAllPlayerVitC2S_MsgID_name, TourMatchFullAllPlayerVitC2S_MsgID_value)
	proto.RegisterEnum("TourMatchFullAllPlayerVitS2C_MsgID", TourMatchFullAllPlayerVitS2C_MsgID_name, TourMatchFullAllPlayerVitS2C_MsgID_value)
	proto.RegisterEnum("TourMatchGetFirstLevelDataC2S_MsgID", TourMatchGetFirstLevelDataC2S_MsgID_name, TourMatchGetFirstLevelDataC2S_MsgID_value)
	proto.RegisterEnum("TourMatchGetFirstLevelDataS2C_MsgID", TourMatchGetFirstLevelDataS2C_MsgID_name, TourMatchGetFirstLevelDataS2C_MsgID_value)
	proto.RegisterEnum("UpdateTourMatchLevelDataS2C_MsgID", UpdateTourMatchLevelDataS2C_MsgID_name, UpdateTourMatchLevelDataS2C_MsgID_value)
	proto.RegisterEnum("TourMatchLotteryC2S_MsgID", TourMatchLotteryC2S_MsgID_name, TourMatchLotteryC2S_MsgID_value)
	proto.RegisterEnum("TourMatchLotteryS2C_MsgID", TourMatchLotteryS2C_MsgID_name, TourMatchLotteryS2C_MsgID_value)
	proto.RegisterEnum("TourMatchLotteryGiveUpC2S_MsgID", TourMatchLotteryGiveUpC2S_MsgID_name, TourMatchLotteryGiveUpC2S_MsgID_value)
	proto.RegisterEnum("TourMatchLotteryGiveUpS2C_MsgID", TourMatchLotteryGiveUpS2C_MsgID_name, TourMatchLotteryGiveUpS2C_MsgID_value)
	proto.RegisterEnum("TourMatchBranchAfterFightUpdateDataS2C_MsgID", TourMatchBranchAfterFightUpdateDataS2C_MsgID_name, TourMatchBranchAfterFightUpdateDataS2C_MsgID_value)
	proto.RegisterEnum("TourMatchShaoDangC2S_MsgID", TourMatchShaoDangC2S_MsgID_name, TourMatchShaoDangC2S_MsgID_value)
	proto.RegisterEnum("TourMatchShaoDangS2C_MsgID", TourMatchShaoDangS2C_MsgID_name, TourMatchShaoDangS2C_MsgID_value)
}

func init() { proto.RegisterFile("tour_match.proto", fileDescriptor78) }

var fileDescriptor78 = []byte{
	// 1296 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xa4, 0x57, 0x5b, 0x4f, 0xe3, 0x56,
	0x10, 0x56, 0x6e, 0x90, 0x4c, 0x02, 0x09, 0x86, 0xb2, 0x29, 0x7b, 0x11, 0xeb, 0xd2, 0x2d, 0x42,
	0x55, 0x56, 0x42, 0x5d, 0xf5, 0xad, 0x2d, 0x90, 0x0d, 0x8a, 0x04, 0x14, 0x25, 0xc0, 0x4a, 0x7d,
	0x89, 0x0e, 0xf1, 0x49, 0x6c, 0xd5, 0xb1, 0x8d, 0x7d, 0x12, 0xe0, 0xb1, 0xad, 0xda, 0xdd, 0x5e,
	0x54, 0xa9, 0xff, 0xaa, 0x7f, 0xa2, 0x3f, 0xa3, 0xef, 0x9d, 0x39, 0x76, 0x1c, 0xc7, 0xb1, 0xd1,
	0xae, 0xfa, 0x16, 0x9f, 0x33, 0x97, 0x6f, 0x66, 0xbe, 0x99, 0x39, 0x81, 0x9a, 0xb0, 0xc7, 0x6e,
	0x6f, 0xc4, 0x44, 0x5f, 0x6f, 0x38, 0xae, 0x2d, 0xec, 0xad, 0x4a, 0xdf, 0x1e, 0x8d, 0x6c, 0x2b,
	0xf8, 0x82, 0xbe, 0x6d, 0x0d, 0x82, 0xdf, 0x25, 0x67, 0xe2, 0xf8, 0x3f, 0xd5, 0x67, 0x50, 0x3c,
	0x1c, 0x0f, 0x06, 0x27, 0x86, 0x27, 0x14, 0x05, 0xe0, 0x48, 0xb7, 0x8d, 0x3e, 0xa7, 0xaf, 0x7a,
	0x66, 0x3b, 0xb7, 0x5b, 0x50, 0xff, 0xcd, 0xc1, 0xca, 0x05, 0x5a, 0x3e, 0x25, 0xc3, 0x4d, 0x26,
	0x98, 0xf2, 0x11, 0xac, 0x58, 0xfc, 0x4e, 0x74, 0xb8, 0xc7, 0xc5, 0x85, 0x31, 0xe2, 0x28, 0x98,
	0xd9, 0xcd, 0x29, 0x2f, 0xa0, 0x64, 0xf2, 0x09, 0x37, 0xa5, 0x6e, 0x0e, 0x75, 0xcb, 0xfb, 0xeb,
	0x8d, 0x50, 0xf3, 0x84, 0xae, 0xda, 0xd6, 0xc0, 0x26, 0x27, 0xd7, 0xe8, 0xb0, 0xad, 0x49, 0xc1,
	0x3c, 0x39, 0x51, 0x9e, 0xc3, 0x8a, 0x63, 0xb2, 0x7b, 0xee, 0x5e, 0x19, 0x42, 0x1e, 0x17, 0xa4,
	0x3e, 0x34, 0xce, 0xa7, 0xa7, 0xca, 0x0e, 0xd4, 0x6c, 0xc7, 0x39, 0x9f, 0x93, 0x5a, 0x5a, 0x90,
	0xfa, 0x14, 0xaa, 0xde, 0xd8, 0x71, 0xcc, 0xfb, 0x26, 0x77, 0x6c, 0x5f, 0x68, 0x59, 0x0a, 0x55,
	0x1a, 0xdd, 0xd9, 0x39, 0x8a, 0x29, 0xb7, 0xcc, 0x10, 0x7e, 0xb0, 0xd3, 0xf0, 0xeb, 0x45, 0x29,
	0x59, 0x6a, 0x84, 0xf9, 0xd8, 0x84, 0xd5, 0xfe, 0xd8, 0x75, 0xb9, 0x25, 0x7c, 0xf8, 0x5a, 0xbd,
	0x84, 0xa1, 0x16, 0x14, 0x15, 0x96, 0x4d, 0x5b, 0x08, 0xee, 0xde, 0xd7, 0x41, 0xea, 0xac, 0x45,
	0x02, 0xf5, 0x2f, 0x94, 0xcf, 0xa1, 0x7a, 0xed, 0x32, 0x2b, 0x12, 0x79, 0xbd, 0x9c, 0x9e, 0x94,
	0x67, 0xb0, 0x19, 0x78, 0xea, 0xd8, 0x63, 0x4b, 0x6b, 0x19, 0x43, 0x5d, 0x9c, 0xdb, 0xb7, 0xdc,
	0xad, 0x57, 0xd0, 0x63, 0x5e, 0x79, 0x0c, 0xeb, 0xd1, 0xfb, 0x63, 0x36, 0xe2, 0xee, 0xc9, 0xa4,
	0xbe, 0x22, 0xe1, 0xa0, 0xb2, 0xc9, 0x3c, 0x71, 0xc8, 0x84, 0x30, 0xf9, 0x15, 0x33, 0xc7, 0xbc,
	0xcb, 0xfb, 0xc2, 0xb0, 0xad, 0xfa, 0xaa, 0xbc, 0xdf, 0x02, 0x85, 0xee, 0xcf, 0x99, 0xe7, 0x49,
	0x8f, 0x47, 0x68, 0x42, 0xd4, 0xab, 0xf2, 0xee, 0x11, 0x54, 0xe9, 0xae, 0xcb, 0xec, 0x26, 0xb3,
	0x86, 0x2d, 0x93, 0x0d, 0xeb, 0x35, 0xbc, 0x28, 0xaa, 0x5f, 0x42, 0x6d, 0x21, 0xa6, 0x1a, 0x14,
	0x1d, 0x97, 0x4b, 0x1b, 0xb2, 0xe8, 0x05, 0x65, 0x0d, 0x4a, 0x9a, 0xcb, 0x6e, 0x7d, 0x8b, 0x59,
	0x3a, 0x52, 0x4f, 0x22, 0x8a, 0xdf, 0x3a, 0x8e, 0xa4, 0x4c, 0x15, 0x13, 0x16, 0x64, 0xd0, 0xd7,
	0xfb, 0x0c, 0x2a, 0x58, 0xcd, 0xee, 0xcd, 0x98, 0x69, 0x24, 0x20, 0x55, 0x29, 0x8d, 0xe7, 0x13,
	0xa7, 0x63, 0x9b, 0x5c, 0x5e, 0x50, 0x62, 0xd4, 0x57, 0x50, 0x9a, 0x55, 0x77, 0x03, 0x2a, 0x3e,
	0x4d, 0xda, 0x96, 0x27, 0x02, 0x5b, 0x39, 0x22, 0x54, 0x90, 0x1b, 0x94, 0x09, 0x40, 0xfc, 0x95,
	0x05, 0x25, 0x21, 0xcd, 0x15, 0xc8, 0x9b, 0x93, 0x10, 0xc4, 0x27, 0x50, 0xf0, 0x04, 0x13, 0x5c,
	0xea, 0xac, 0xee, 0x6f, 0xc4, 0x0a, 0xd3, 0xa5, 0x3b, 0x82, 0x8e, 0x48, 0xcf, 0x30, 0xe1, 0xc8,
	0xd5, 0xcc, 0x6e, 0x29, 0x38, 0x68, 0x63, 0x37, 0x21, 0x4b, 0xc9, 0xcc, 0x2a, 0x2c, 0xe1, 0xc1,
	0xb1, 0xa1, 0x21, 0x1f, 0x93, 0x62, 0x5b, 0x4e, 0x89, 0x8d, 0x92, 0x87, 0x82, 0x17, 0x9c, 0x8d,
	0x10, 0x52, 0x51, 0xea, 0xa2, 0x71, 0xc3, 0xeb, 0xd8, 0xd7, 0xb6, 0x90, 0x54, 0x2b, 0x12, 0x05,
	0x5d, 0xfa, 0x24, 0xa9, 0x33, 0xa7, 0x8f, 0x82, 0x20, 0x05, 0x9f, 0xc0, 0x86, 0x3c, 0xef, 0x70,
	0x66, 0x46, 0x0a, 0x8f, 0x1c, 0xa3, 0xdb, 0x75, 0x28, 0x5f, 0x47, 0x0e, 0x2b, 0x32, 0x27, 0x2d,
	0x28, 0x47, 0x7b, 0x00, 0xdb, 0x78, 0x5a, 0xcc, 0xa3, 0xc1, 0x30, 0x4c, 0xca, 0xf6, 0x7c, 0x52,
	0xd6, 0xa2, 0x7d, 0x23, 0x33, 0xa2, 0xee, 0x46, 0x0a, 0xdc, 0xe1, 0x03, 0x97, 0x7b, 0xba, 0xba,
	0x01, 0x85, 0x53, 0x6f, 0xd8, 0x6e, 0x2a, 0x65, 0x58, 0xe2, 0xf2, 0x57, 0xed, 0x9d, 0xa6, 0xbe,
	0xcd, 0x80, 0x72, 0x8c, 0x43, 0x22, 0x42, 0x87, 0x0e, 0xbf, 0x41, 0x99, 0xdc, 0xd0, 0x98, 0xfa,
	0xc3, 0x00, 0x47, 0xec, 0x2e, 0x1a, 0x42, 0x56, 0x32, 0x1e, 0x43, 0xe0, 0x77, 0x7d, 0x73, 0xac,
	0xf1, 0x70, 0xa0, 0x14, 0xa2, 0x3c, 0xca, 0x4b, 0x6d, 0x64, 0xa4, 0xe1, 0x1d, 0xca, 0x3e, 0x93,
	0xd5, 0x28, 0x26, 0x21, 0xf9, 0x9b, 0xab, 0x2e, 0xac, 0x2f, 0x00, 0xf1, 0x1c, 0x6a, 0x64, 0xaa,
	0x25, 0x35, 0x67, 0x26, 0xa8, 0x52, 0x54, 0x46, 0x56, 0x29, 0xe2, 0x33, 0xfb, 0x41, 0x3e, 0x6f,
	0xe6, 0x1b, 0x41, 0x1a, 0x9b, 0x0b, 0x1d, 0xd9, 0x68, 0x11, 0xaf, 0xb2, 0x92, 0x57, 0x48, 0x23,
	0xe1, 0x53, 0x21, 0x37, 0xbd, 0x35, 0x88, 0x64, 0x7e, 0xa0, 0x3b, 0x50, 0xf2, 0xa6, 0xc4, 0x91,
	0x5e, 0x13, 0xbb, 0x85, 0x45, 0x58, 0x2f, 0x67, 0xc4, 0xff, 0x73, 0x8a, 0x9d, 0x35, 0x98, 0x4d,
	0xa2, 0x42, 0xc0, 0xa2, 0x5a, 0x97, 0x5b, 0x5a, 0xe8, 0xa6, 0xbb, 0x7f, 0x84, 0x64, 0xcc, 0x6b,
	0xc4, 0x74, 0x3f, 0x87, 0xab, 0x8d, 0xb9, 0x7d, 0x91, 0x94, 0x9d, 0x1f, 0x74, 0xb5, 0x09, 0xf5,
	0x99, 0x0d, 0x34, 0x38, 0x1d, 0xba, 0x64, 0x6f, 0x7e, 0x45, 0xf8, 0x7b, 0x28, 0xc1, 0xca, 0x8f,
	0xba, 0xfa, 0x15, 0x6c, 0x86, 0x56, 0x66, 0xd3, 0xfc, 0x68, 0xbf, 0x4b, 0x91, 0xf9, 0x36, 0xfc,
	0xb8, 0x93, 0xf4, 0x7f, 0x4a, 0xd3, 0x27, 0x0c, 0xef, 0xa7, 0xdf, 0x83, 0xad, 0x50, 0xff, 0xd2,
	0xe3, 0x91, 0x5e, 0x21, 0x0c, 0x29, 0x2d, 0x16, 0x1f, 0x63, 0x54, 0x8a, 0x5c, 0x92, 0x83, 0x9f,
	0x75, 0xf5, 0xfb, 0x54, 0x07, 0x04, 0x32, 0x79, 0x20, 0x3e, 0x87, 0x72, 0x64, 0x09, 0x06, 0xb3,
	0x75, 0x6e, 0x01, 0xa6, 0x38, 0xfb, 0x27, 0x03, 0xdb, 0xa1, 0xb7, 0x83, 0x01, 0xce, 0x7c, 0xb9,
	0x88, 0x2e, 0x1d, 0xac, 0x2e, 0xa7, 0x5a, 0x92, 0xcf, 0x15, 0x28, 0x18, 0xde, 0x1b, 0xc3, 0x92,
	0xce, 0x8a, 0xca, 0x53, 0x28, 0x85, 0xab, 0x1b, 0x5d, 0xc5, 0x17, 0x72, 0x0c, 0x4b, 0x6e, 0x11,
	0x0b, 0x5a, 0x88, 0x3f, 0x08, 0xe6, 0x96, 0x70, 0xa4, 0xff, 0x0a, 0xf1, 0xed, 0xbb, 0x14, 0x6f,
	0xda, 0x60, 0x53, 0x25, 0xc5, 0xf7, 0x8b, 0xae, 0x7e, 0x01, 0x4f, 0x42, 0xc9, 0xd6, 0xd8, 0x34,
	0x0f, 0x4c, 0x33, 0x44, 0x8a, 0xf5, 0x4a, 0xd2, 0x7a, 0xab, 0xab, 0x6f, 0x1e, 0xd0, 0xa2, 0x84,
	0x2c, 0x3c, 0x5e, 0x32, 0xf1, 0x2c, 0xa4, 0x18, 0x7e, 0x05, 0x4f, 0x67, 0xdd, 0xca, 0x45, 0xcb,
	0x70, 0x3d, 0xff, 0xa1, 0x41, 0xa9, 0x4e, 0xc1, 0xf3, 0x4e, 0xc7, 0x26, 0x7f, 0x40, 0x8d, 0x00,
	0xed, 0x05, 0xb3, 0x22, 0x02, 0xe6, 0x51, 0x43, 0x0e, 0x89, 0x10, 0x7a, 0xcb, 0xb0, 0x98, 0xd9,
	0x7b, 0x7d, 0x97, 0xe2, 0x62, 0x02, 0x8f, 0xfd, 0xa2, 0xcf, 0x6f, 0xc4, 0xa9, 0x83, 0x97, 0xa0,
	0x88, 0x85, 0xe5, 0x1a, 0x78, 0x4a, 0x7c, 0xde, 0x44, 0x47, 0x66, 0x36, 0x6d, 0x64, 0xfe, 0xaa,
	0xab, 0x5f, 0xc3, 0x7a, 0xbc, 0x94, 0xd4, 0x47, 0x38, 0x0f, 0xa6, 0x7d, 0xf4, 0x50, 0x3f, 0xfe,
	0xa6, 0xab, 0xd6, 0xa2, 0x01, 0x02, 0x1c, 0xa1, 0x4c, 0x26, 0x85, 0x32, 0x48, 0xc3, 0xbc, 0x21,
	0xf8, 0x28, 0xe0, 0x70, 0xb5, 0xd1, 0xc6, 0x8f, 0x2b, 0x86, 0x00, 0xf0, 0xd9, 0x6c, 0x0c, 0x53,
	0xfc, 0xbd, 0x86, 0x8f, 0xe3, 0x86, 0x8e, 0x8d, 0x09, 0xbf, 0x74, 0x3e, 0x00, 0xf6, 0xef, 0xba,
	0x7a, 0x99, 0x66, 0xe6, 0x3d, 0xc1, 0xa7, 0x98, 0x65, 0xf0, 0x22, 0x94, 0xf4, 0xb3, 0x9f, 0xd6,
	0xd4, 0x08, 0xd5, 0x8c, 0x8f, 0xa9, 0xb0, 0xd1, 0x53, 0x2b, 0xf6, 0x87, 0xae, 0x7e, 0x03, 0x1b,
	0xb3, 0x31, 0xae, 0xfb, 0xaf, 0xc8, 0x20, 0xf6, 0xb8, 0xc1, 0x24, 0x0b, 0x7f, 0xea, 0xea, 0x5d,
	0x82, 0x85, 0x34, 0x48, 0xc8, 0x23, 0x79, 0x76, 0x36, 0x1e, 0x05, 0xcb, 0x78, 0x07, 0x96, 0x5d,
	0x7e, 0xcb, 0x5c, 0xcd, 0x0b, 0xff, 0x73, 0xcc, 0x17, 0x8e, 0x9a, 0x20, 0xd9, 0xf3, 0xde, 0x77,
	0x51, 0xb2, 0xcc, 0x5e, 0x7c, 0x6b, 0xf8, 0x87, 0xe7, 0xd4, 0xec, 0xf6, 0xce, 0x6c, 0xd1, 0xa3,
	0x37, 0x73, 0x2d, 0x83, 0xa9, 0x28, 0xc9, 0x23, 0xf9, 0x99, 0x0d, 0x25, 0xb0, 0xfb, 0x7a, 0x34,
	0xa7, 0x6a, 0x39, 0x5c, 0x17, 0x20, 0x8f, 0x0e, 0x08, 0x4b, 0x2d, 0xbf, 0xf7, 0x12, 0xd7, 0x64,
	0xec, 0xe1, 0x44, 0x32, 0xdd, 0xa6, 0xb4, 0x8b, 0x93, 0x1c, 0xad, 0x96, 0x61, 0x99, 0xbe, 0xe9,
	0x23, 0xfb, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xa2, 0x0a, 0x4d, 0x8b, 0xbf, 0x0d, 0x00, 0x00,
}
