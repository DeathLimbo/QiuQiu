// Code generated by protoc-gen-go.
// source: legendary.proto
// DO NOT EDIT!

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type LegendaryGetDataC2S_MsgID int32

const (
	LegendaryGetDataC2S_eMsgID LegendaryGetDataC2S_MsgID = 794
)

var LegendaryGetDataC2S_MsgID_name = map[int32]string{
	794: "eMsgID",
}
var LegendaryGetDataC2S_MsgID_value = map[string]int32{
	"eMsgID": 794,
}

func (x LegendaryGetDataC2S_MsgID) Enum() *LegendaryGetDataC2S_MsgID {
	p := new(LegendaryGetDataC2S_MsgID)
	*p = x
	return p
}
func (x LegendaryGetDataC2S_MsgID) String() string {
	return proto.EnumName(LegendaryGetDataC2S_MsgID_name, int32(x))
}
func (x *LegendaryGetDataC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LegendaryGetDataC2S_MsgID_value, data, "LegendaryGetDataC2S_MsgID")
	if err != nil {
		return err
	}
	*x = LegendaryGetDataC2S_MsgID(value)
	return nil
}
func (LegendaryGetDataC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor38, []int{5, 0}
}

type LegendaryGetDataS2C_MsgID int32

const (
	LegendaryGetDataS2C_eMsgID LegendaryGetDataS2C_MsgID = 794
)

var LegendaryGetDataS2C_MsgID_name = map[int32]string{
	794: "eMsgID",
}
var LegendaryGetDataS2C_MsgID_value = map[string]int32{
	"eMsgID": 794,
}

func (x LegendaryGetDataS2C_MsgID) Enum() *LegendaryGetDataS2C_MsgID {
	p := new(LegendaryGetDataS2C_MsgID)
	*p = x
	return p
}
func (x LegendaryGetDataS2C_MsgID) String() string {
	return proto.EnumName(LegendaryGetDataS2C_MsgID_name, int32(x))
}
func (x *LegendaryGetDataS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LegendaryGetDataS2C_MsgID_value, data, "LegendaryGetDataS2C_MsgID")
	if err != nil {
		return err
	}
	*x = LegendaryGetDataS2C_MsgID(value)
	return nil
}
func (LegendaryGetDataS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor38, []int{6, 0}
}

type LegendaryNotifyDataS2C_MsgID int32

const (
	LegendaryNotifyDataS2C_eMsgID LegendaryNotifyDataS2C_MsgID = 795
)

var LegendaryNotifyDataS2C_MsgID_name = map[int32]string{
	795: "eMsgID",
}
var LegendaryNotifyDataS2C_MsgID_value = map[string]int32{
	"eMsgID": 795,
}

func (x LegendaryNotifyDataS2C_MsgID) Enum() *LegendaryNotifyDataS2C_MsgID {
	p := new(LegendaryNotifyDataS2C_MsgID)
	*p = x
	return p
}
func (x LegendaryNotifyDataS2C_MsgID) String() string {
	return proto.EnumName(LegendaryNotifyDataS2C_MsgID_name, int32(x))
}
func (x *LegendaryNotifyDataS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LegendaryNotifyDataS2C_MsgID_value, data, "LegendaryNotifyDataS2C_MsgID")
	if err != nil {
		return err
	}
	*x = LegendaryNotifyDataS2C_MsgID(value)
	return nil
}
func (LegendaryNotifyDataS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor38, []int{8, 0}
}

type LegendaryRecordGetDataC2S_MsgID int32

const (
	LegendaryRecordGetDataC2S_eMsgID LegendaryRecordGetDataC2S_MsgID = 796
)

var LegendaryRecordGetDataC2S_MsgID_name = map[int32]string{
	796: "eMsgID",
}
var LegendaryRecordGetDataC2S_MsgID_value = map[string]int32{
	"eMsgID": 796,
}

func (x LegendaryRecordGetDataC2S_MsgID) Enum() *LegendaryRecordGetDataC2S_MsgID {
	p := new(LegendaryRecordGetDataC2S_MsgID)
	*p = x
	return p
}
func (x LegendaryRecordGetDataC2S_MsgID) String() string {
	return proto.EnumName(LegendaryRecordGetDataC2S_MsgID_name, int32(x))
}
func (x *LegendaryRecordGetDataC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LegendaryRecordGetDataC2S_MsgID_value, data, "LegendaryRecordGetDataC2S_MsgID")
	if err != nil {
		return err
	}
	*x = LegendaryRecordGetDataC2S_MsgID(value)
	return nil
}
func (LegendaryRecordGetDataC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor38, []int{10, 0}
}

type LegendaryRecordGetDataS2C_MsgID int32

const (
	LegendaryRecordGetDataS2C_eMsgID LegendaryRecordGetDataS2C_MsgID = 796
)

var LegendaryRecordGetDataS2C_MsgID_name = map[int32]string{
	796: "eMsgID",
}
var LegendaryRecordGetDataS2C_MsgID_value = map[string]int32{
	"eMsgID": 796,
}

func (x LegendaryRecordGetDataS2C_MsgID) Enum() *LegendaryRecordGetDataS2C_MsgID {
	p := new(LegendaryRecordGetDataS2C_MsgID)
	*p = x
	return p
}
func (x LegendaryRecordGetDataS2C_MsgID) String() string {
	return proto.EnumName(LegendaryRecordGetDataS2C_MsgID_name, int32(x))
}
func (x *LegendaryRecordGetDataS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LegendaryRecordGetDataS2C_MsgID_value, data, "LegendaryRecordGetDataS2C_MsgID")
	if err != nil {
		return err
	}
	*x = LegendaryRecordGetDataS2C_MsgID(value)
	return nil
}
func (LegendaryRecordGetDataS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor38, []int{11, 0}
}

type LegendaryGetRewardC2S_MsgID int32

const (
	LegendaryGetRewardC2S_eMsgID LegendaryGetRewardC2S_MsgID = 798
)

var LegendaryGetRewardC2S_MsgID_name = map[int32]string{
	798: "eMsgID",
}
var LegendaryGetRewardC2S_MsgID_value = map[string]int32{
	"eMsgID": 798,
}

func (x LegendaryGetRewardC2S_MsgID) Enum() *LegendaryGetRewardC2S_MsgID {
	p := new(LegendaryGetRewardC2S_MsgID)
	*p = x
	return p
}
func (x LegendaryGetRewardC2S_MsgID) String() string {
	return proto.EnumName(LegendaryGetRewardC2S_MsgID_name, int32(x))
}
func (x *LegendaryGetRewardC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LegendaryGetRewardC2S_MsgID_value, data, "LegendaryGetRewardC2S_MsgID")
	if err != nil {
		return err
	}
	*x = LegendaryGetRewardC2S_MsgID(value)
	return nil
}
func (LegendaryGetRewardC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor38, []int{12, 0}
}

type LegendaryGetRewardS2C_MsgID int32

const (
	LegendaryGetRewardS2C_eMsgID LegendaryGetRewardS2C_MsgID = 798
)

var LegendaryGetRewardS2C_MsgID_name = map[int32]string{
	798: "eMsgID",
}
var LegendaryGetRewardS2C_MsgID_value = map[string]int32{
	"eMsgID": 798,
}

func (x LegendaryGetRewardS2C_MsgID) Enum() *LegendaryGetRewardS2C_MsgID {
	p := new(LegendaryGetRewardS2C_MsgID)
	*p = x
	return p
}
func (x LegendaryGetRewardS2C_MsgID) String() string {
	return proto.EnumName(LegendaryGetRewardS2C_MsgID_name, int32(x))
}
func (x *LegendaryGetRewardS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LegendaryGetRewardS2C_MsgID_value, data, "LegendaryGetRewardS2C_MsgID")
	if err != nil {
		return err
	}
	*x = LegendaryGetRewardS2C_MsgID(value)
	return nil
}
func (LegendaryGetRewardS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor38, []int{13, 0}
}

type LegendaryGetRankDataC2S_MsgID int32

const (
	LegendaryGetRankDataC2S_eMsgID LegendaryGetRankDataC2S_MsgID = 820
)

var LegendaryGetRankDataC2S_MsgID_name = map[int32]string{
	820: "eMsgID",
}
var LegendaryGetRankDataC2S_MsgID_value = map[string]int32{
	"eMsgID": 820,
}

func (x LegendaryGetRankDataC2S_MsgID) Enum() *LegendaryGetRankDataC2S_MsgID {
	p := new(LegendaryGetRankDataC2S_MsgID)
	*p = x
	return p
}
func (x LegendaryGetRankDataC2S_MsgID) String() string {
	return proto.EnumName(LegendaryGetRankDataC2S_MsgID_name, int32(x))
}
func (x *LegendaryGetRankDataC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LegendaryGetRankDataC2S_MsgID_value, data, "LegendaryGetRankDataC2S_MsgID")
	if err != nil {
		return err
	}
	*x = LegendaryGetRankDataC2S_MsgID(value)
	return nil
}
func (LegendaryGetRankDataC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor38, []int{14, 0}
}

type LegendaryGetRankDataS2C_MsgID int32

const (
	LegendaryGetRankDataS2C_eMsgID LegendaryGetRankDataS2C_MsgID = 820
)

var LegendaryGetRankDataS2C_MsgID_name = map[int32]string{
	820: "eMsgID",
}
var LegendaryGetRankDataS2C_MsgID_value = map[string]int32{
	"eMsgID": 820,
}

func (x LegendaryGetRankDataS2C_MsgID) Enum() *LegendaryGetRankDataS2C_MsgID {
	p := new(LegendaryGetRankDataS2C_MsgID)
	*p = x
	return p
}
func (x LegendaryGetRankDataS2C_MsgID) String() string {
	return proto.EnumName(LegendaryGetRankDataS2C_MsgID_name, int32(x))
}
func (x *LegendaryGetRankDataS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LegendaryGetRankDataS2C_MsgID_value, data, "LegendaryGetRankDataS2C_MsgID")
	if err != nil {
		return err
	}
	*x = LegendaryGetRankDataS2C_MsgID(value)
	return nil
}
func (LegendaryGetRankDataS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor38, []int{15, 0}
}

// boss数据（服务器使用）
type LegendaryBoss struct {
	// 所属区服
	Lsid *int32 `protobuf:"varint,1,opt,name=lsid" json:"lsid,omitempty"`
	// boss在global表中的下标
	Key *int32 `protobuf:"varint,2,opt,name=key" json:"key,omitempty"`
	// 本轮传奇挑战赛的结束时间
	EndTime *int64 `protobuf:"varint,4,opt,name=endTime" json:"endTime,omitempty"`
	// boss版本
	BossVersion      *int32 `protobuf:"varint,6,opt,name=bossVersion" json:"bossVersion,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *LegendaryBoss) Reset()                    { *m = LegendaryBoss{} }
func (m *LegendaryBoss) String() string            { return proto.CompactTextString(m) }
func (*LegendaryBoss) ProtoMessage()               {}
func (*LegendaryBoss) Descriptor() ([]byte, []int) { return fileDescriptor38, []int{0} }

func (m *LegendaryBoss) GetLsid() int32 {
	if m != nil && m.Lsid != nil {
		return *m.Lsid
	}
	return 0
}

func (m *LegendaryBoss) GetKey() int32 {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return 0
}

func (m *LegendaryBoss) GetEndTime() int64 {
	if m != nil && m.EndTime != nil {
		return *m.EndTime
	}
	return 0
}

func (m *LegendaryBoss) GetBossVersion() int32 {
	if m != nil && m.BossVersion != nil {
		return *m.BossVersion
	}
	return 0
}

// 玩家数据（服务器使用0）
type LegendaryChallenge struct {
	ChallengeNum     *int32 `protobuf:"varint,1,opt,name=challengeNum" json:"challengeNum,omitempty"`
	Viewership       *int32 `protobuf:"varint,2,opt,name=viewership" json:"viewership,omitempty"`
	BossVersion      *int32 `protobuf:"varint,3,opt,name=bossVersion" json:"bossVersion,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *LegendaryChallenge) Reset()                    { *m = LegendaryChallenge{} }
func (m *LegendaryChallenge) String() string            { return proto.CompactTextString(m) }
func (*LegendaryChallenge) ProtoMessage()               {}
func (*LegendaryChallenge) Descriptor() ([]byte, []int) { return fileDescriptor38, []int{1} }

func (m *LegendaryChallenge) GetChallengeNum() int32 {
	if m != nil && m.ChallengeNum != nil {
		return *m.ChallengeNum
	}
	return 0
}

func (m *LegendaryChallenge) GetViewership() int32 {
	if m != nil && m.Viewership != nil {
		return *m.Viewership
	}
	return 0
}

func (m *LegendaryChallenge) GetBossVersion() int32 {
	if m != nil && m.BossVersion != nil {
		return *m.BossVersion
	}
	return 0
}

// 在我之前的3位（包含我在内共4位）（服务器使用1）
type LegendaryRankInfoList struct {
	ThreeBeforeMe    []*LegendaryRankInfo `protobuf:"bytes,1,rep,name=threeBeforeMe" json:"threeBeforeMe,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *LegendaryRankInfoList) Reset()                    { *m = LegendaryRankInfoList{} }
func (m *LegendaryRankInfoList) String() string            { return proto.CompactTextString(m) }
func (*LegendaryRankInfoList) ProtoMessage()               {}
func (*LegendaryRankInfoList) Descriptor() ([]byte, []int) { return fileDescriptor38, []int{2} }

func (m *LegendaryRankInfoList) GetThreeBeforeMe() []*LegendaryRankInfo {
	if m != nil {
		return m.ThreeBeforeMe
	}
	return nil
}

// 已领取的挑战奖励（服务器使用2）
type LegendaryRewardList struct {
	GotRewards       []int32 `protobuf:"varint,1,rep,name=gotRewards" json:"gotRewards,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *LegendaryRewardList) Reset()                    { *m = LegendaryRewardList{} }
func (m *LegendaryRewardList) String() string            { return proto.CompactTextString(m) }
func (*LegendaryRewardList) ProtoMessage()               {}
func (*LegendaryRewardList) Descriptor() ([]byte, []int) { return fileDescriptor38, []int{3} }

func (m *LegendaryRewardList) GetGotRewards() []int32 {
	if m != nil {
		return m.GotRewards
	}
	return nil
}

// 挑战记录（服务器使用3）
type LegendaryRecordList struct {
	Records          []*LegendaryRecord `protobuf:"bytes,1,rep,name=records" json:"records,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *LegendaryRecordList) Reset()                    { *m = LegendaryRecordList{} }
func (m *LegendaryRecordList) String() string            { return proto.CompactTextString(m) }
func (*LegendaryRecordList) ProtoMessage()               {}
func (*LegendaryRecordList) Descriptor() ([]byte, []int) { return fileDescriptor38, []int{4} }

func (m *LegendaryRecordList) GetRecords() []*LegendaryRecord {
	if m != nil {
		return m.Records
	}
	return nil
}

// 客户端无数据时，请求数据
type LegendaryGetDataC2S struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *LegendaryGetDataC2S) Reset()                    { *m = LegendaryGetDataC2S{} }
func (m *LegendaryGetDataC2S) String() string            { return proto.CompactTextString(m) }
func (*LegendaryGetDataC2S) ProtoMessage()               {}
func (*LegendaryGetDataC2S) Descriptor() ([]byte, []int) { return fileDescriptor38, []int{5} }

// 客户端无数据时，请求数据
type LegendaryGetDataS2C struct {
	// 已挑战次数
	ChallengeNum *int32 `protobuf:"varint,1,opt,name=challengeNum" json:"challengeNum,omitempty"`
	// 收视人数
	Viewership *int32 `protobuf:"varint,2,opt,name=viewership" json:"viewership,omitempty"`
	// 已领取的挑战奖励
	GotRewards []int32 `protobuf:"varint,3,rep,name=gotRewards" json:"gotRewards,omitempty"`
	// 在我之前的3位（覆盖）
	ThreeBeforeMe []*LegendaryRankInfo `protobuf:"bytes,4,rep,name=threeBeforeMe" json:"threeBeforeMe,omitempty"`
	// bossId
	BossId *int32 `protobuf:"varint,6,opt,name=bossId" json:"bossId,omitempty"`
	// 本轮挑战赛结束时间
	EndTime          *int64 `protobuf:"varint,7,opt,name=endTime" json:"endTime,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *LegendaryGetDataS2C) Reset()                    { *m = LegendaryGetDataS2C{} }
func (m *LegendaryGetDataS2C) String() string            { return proto.CompactTextString(m) }
func (*LegendaryGetDataS2C) ProtoMessage()               {}
func (*LegendaryGetDataS2C) Descriptor() ([]byte, []int) { return fileDescriptor38, []int{6} }

func (m *LegendaryGetDataS2C) GetChallengeNum() int32 {
	if m != nil && m.ChallengeNum != nil {
		return *m.ChallengeNum
	}
	return 0
}

func (m *LegendaryGetDataS2C) GetViewership() int32 {
	if m != nil && m.Viewership != nil {
		return *m.Viewership
	}
	return 0
}

func (m *LegendaryGetDataS2C) GetGotRewards() []int32 {
	if m != nil {
		return m.GotRewards
	}
	return nil
}

func (m *LegendaryGetDataS2C) GetThreeBeforeMe() []*LegendaryRankInfo {
	if m != nil {
		return m.ThreeBeforeMe
	}
	return nil
}

func (m *LegendaryGetDataS2C) GetBossId() int32 {
	if m != nil && m.BossId != nil {
		return *m.BossId
	}
	return 0
}

func (m *LegendaryGetDataS2C) GetEndTime() int64 {
	if m != nil && m.EndTime != nil {
		return *m.EndTime
	}
	return 0
}

type LegendaryRankInfo struct {
	Rank             *int32  `protobuf:"varint,1,opt,name=rank" json:"rank,omitempty"`
	Viewership       *int32  `protobuf:"varint,2,opt,name=viewership" json:"viewership,omitempty"`
	Name             *string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *LegendaryRankInfo) Reset()                    { *m = LegendaryRankInfo{} }
func (m *LegendaryRankInfo) String() string            { return proto.CompactTextString(m) }
func (*LegendaryRankInfo) ProtoMessage()               {}
func (*LegendaryRankInfo) Descriptor() ([]byte, []int) { return fileDescriptor38, []int{7} }

func (m *LegendaryRankInfo) GetRank() int32 {
	if m != nil && m.Rank != nil {
		return *m.Rank
	}
	return 0
}

func (m *LegendaryRankInfo) GetViewership() int32 {
	if m != nil && m.Viewership != nil {
		return *m.Viewership
	}
	return 0
}

func (m *LegendaryRankInfo) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

// 存在数据更新时，同步数据
type LegendaryNotifyDataS2C struct {
	ChallengeNum     *int32               `protobuf:"varint,1,opt,name=challengeNum" json:"challengeNum,omitempty"`
	Record           *LegendaryRecord     `protobuf:"bytes,2,opt,name=record" json:"record,omitempty"`
	Viewership       *int32               `protobuf:"varint,3,opt,name=viewership" json:"viewership,omitempty"`
	ThreeBeforeMe    []*LegendaryRankInfo `protobuf:"bytes,4,rep,name=threeBeforeMe" json:"threeBeforeMe,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *LegendaryNotifyDataS2C) Reset()                    { *m = LegendaryNotifyDataS2C{} }
func (m *LegendaryNotifyDataS2C) String() string            { return proto.CompactTextString(m) }
func (*LegendaryNotifyDataS2C) ProtoMessage()               {}
func (*LegendaryNotifyDataS2C) Descriptor() ([]byte, []int) { return fileDescriptor38, []int{8} }

func (m *LegendaryNotifyDataS2C) GetChallengeNum() int32 {
	if m != nil && m.ChallengeNum != nil {
		return *m.ChallengeNum
	}
	return 0
}

func (m *LegendaryNotifyDataS2C) GetRecord() *LegendaryRecord {
	if m != nil {
		return m.Record
	}
	return nil
}

func (m *LegendaryNotifyDataS2C) GetViewership() int32 {
	if m != nil && m.Viewership != nil {
		return *m.Viewership
	}
	return 0
}

func (m *LegendaryNotifyDataS2C) GetThreeBeforeMe() []*LegendaryRankInfo {
	if m != nil {
		return m.ThreeBeforeMe
	}
	return nil
}

type LegendaryRecord struct {
	// 基本数据记录
	Record *FightDataRecord `protobuf:"bytes,1,opt,name=record" json:"record,omitempty"`
	// 收视人数
	Viewership       *int32 `protobuf:"varint,2,opt,name=viewership" json:"viewership,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *LegendaryRecord) Reset()                    { *m = LegendaryRecord{} }
func (m *LegendaryRecord) String() string            { return proto.CompactTextString(m) }
func (*LegendaryRecord) ProtoMessage()               {}
func (*LegendaryRecord) Descriptor() ([]byte, []int) { return fileDescriptor38, []int{9} }

func (m *LegendaryRecord) GetRecord() *FightDataRecord {
	if m != nil {
		return m.Record
	}
	return nil
}

func (m *LegendaryRecord) GetViewership() int32 {
	if m != nil && m.Viewership != nil {
		return *m.Viewership
	}
	return 0
}

// 客户端无数据时，请求比赛记录数据
type LegendaryRecordGetDataC2S struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *LegendaryRecordGetDataC2S) Reset()                    { *m = LegendaryRecordGetDataC2S{} }
func (m *LegendaryRecordGetDataC2S) String() string            { return proto.CompactTextString(m) }
func (*LegendaryRecordGetDataC2S) ProtoMessage()               {}
func (*LegendaryRecordGetDataC2S) Descriptor() ([]byte, []int) { return fileDescriptor38, []int{10} }

type LegendaryRecordGetDataS2C struct {
	Record           []*LegendaryRecord `protobuf:"bytes,1,rep,name=record" json:"record,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *LegendaryRecordGetDataS2C) Reset()                    { *m = LegendaryRecordGetDataS2C{} }
func (m *LegendaryRecordGetDataS2C) String() string            { return proto.CompactTextString(m) }
func (*LegendaryRecordGetDataS2C) ProtoMessage()               {}
func (*LegendaryRecordGetDataS2C) Descriptor() ([]byte, []int) { return fileDescriptor38, []int{11} }

func (m *LegendaryRecordGetDataS2C) GetRecord() []*LegendaryRecord {
	if m != nil {
		return m.Record
	}
	return nil
}

// 领取比赛奖励
type LegendaryGetRewardC2S struct {
	RewardId         *int32 `protobuf:"varint,1,opt,name=rewardId" json:"rewardId,omitempty"`
	IsOneKey         *bool  `protobuf:"varint,2,opt,name=isOneKey" json:"isOneKey,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *LegendaryGetRewardC2S) Reset()                    { *m = LegendaryGetRewardC2S{} }
func (m *LegendaryGetRewardC2S) String() string            { return proto.CompactTextString(m) }
func (*LegendaryGetRewardC2S) ProtoMessage()               {}
func (*LegendaryGetRewardC2S) Descriptor() ([]byte, []int) { return fileDescriptor38, []int{12} }

func (m *LegendaryGetRewardC2S) GetRewardId() int32 {
	if m != nil && m.RewardId != nil {
		return *m.RewardId
	}
	return 0
}

func (m *LegendaryGetRewardC2S) GetIsOneKey() bool {
	if m != nil && m.IsOneKey != nil {
		return *m.IsOneKey
	}
	return false
}

type LegendaryGetRewardS2C struct {
	GotReward        []int32 `protobuf:"varint,2,rep,name=gotReward" json:"gotReward,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *LegendaryGetRewardS2C) Reset()                    { *m = LegendaryGetRewardS2C{} }
func (m *LegendaryGetRewardS2C) String() string            { return proto.CompactTextString(m) }
func (*LegendaryGetRewardS2C) ProtoMessage()               {}
func (*LegendaryGetRewardS2C) Descriptor() ([]byte, []int) { return fileDescriptor38, []int{13} }

func (m *LegendaryGetRewardS2C) GetGotReward() []int32 {
	if m != nil {
		return m.GotReward
	}
	return nil
}

// 获取传奇挑战赛排行榜数据
type LegendaryGetRankDataC2S struct {
	Gid              *int32 `protobuf:"varint,1,opt,name=gid" json:"gid,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *LegendaryGetRankDataC2S) Reset()                    { *m = LegendaryGetRankDataC2S{} }
func (m *LegendaryGetRankDataC2S) String() string            { return proto.CompactTextString(m) }
func (*LegendaryGetRankDataC2S) ProtoMessage()               {}
func (*LegendaryGetRankDataC2S) Descriptor() ([]byte, []int) { return fileDescriptor38, []int{14} }

func (m *LegendaryGetRankDataC2S) GetGid() int32 {
	if m != nil && m.Gid != nil {
		return *m.Gid
	}
	return 0
}

// 获取传奇挑战赛排行榜数据
type LegendaryGetRankDataS2C struct {
	// 传奇挑战赛记录
	Record           *LegendaryRecord `protobuf:"bytes,1,opt,name=record" json:"record,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *LegendaryGetRankDataS2C) Reset()                    { *m = LegendaryGetRankDataS2C{} }
func (m *LegendaryGetRankDataS2C) String() string            { return proto.CompactTextString(m) }
func (*LegendaryGetRankDataS2C) ProtoMessage()               {}
func (*LegendaryGetRankDataS2C) Descriptor() ([]byte, []int) { return fileDescriptor38, []int{15} }

func (m *LegendaryGetRankDataS2C) GetRecord() *LegendaryRecord {
	if m != nil {
		return m.Record
	}
	return nil
}

func init() {
	proto.RegisterType((*LegendaryBoss)(nil), "LegendaryBoss")
	proto.RegisterType((*LegendaryChallenge)(nil), "LegendaryChallenge")
	proto.RegisterType((*LegendaryRankInfoList)(nil), "LegendaryRankInfoList")
	proto.RegisterType((*LegendaryRewardList)(nil), "LegendaryRewardList")
	proto.RegisterType((*LegendaryRecordList)(nil), "LegendaryRecordList")
	proto.RegisterType((*LegendaryGetDataC2S)(nil), "LegendaryGetDataC2S")
	proto.RegisterType((*LegendaryGetDataS2C)(nil), "LegendaryGetDataS2C")
	proto.RegisterType((*LegendaryRankInfo)(nil), "LegendaryRankInfo")
	proto.RegisterType((*LegendaryNotifyDataS2C)(nil), "LegendaryNotifyDataS2C")
	proto.RegisterType((*LegendaryRecord)(nil), "LegendaryRecord")
	proto.RegisterType((*LegendaryRecordGetDataC2S)(nil), "LegendaryRecordGetDataC2S")
	proto.RegisterType((*LegendaryRecordGetDataS2C)(nil), "LegendaryRecordGetDataS2C")
	proto.RegisterType((*LegendaryGetRewardC2S)(nil), "LegendaryGetRewardC2S")
	proto.RegisterType((*LegendaryGetRewardS2C)(nil), "LegendaryGetRewardS2C")
	proto.RegisterType((*LegendaryGetRankDataC2S)(nil), "LegendaryGetRankDataC2S")
	proto.RegisterType((*LegendaryGetRankDataS2C)(nil), "LegendaryGetRankDataS2C")
	proto.RegisterEnum("LegendaryGetDataC2S_MsgID", LegendaryGetDataC2S_MsgID_name, LegendaryGetDataC2S_MsgID_value)
	proto.RegisterEnum("LegendaryGetDataS2C_MsgID", LegendaryGetDataS2C_MsgID_name, LegendaryGetDataS2C_MsgID_value)
	proto.RegisterEnum("LegendaryNotifyDataS2C_MsgID", LegendaryNotifyDataS2C_MsgID_name, LegendaryNotifyDataS2C_MsgID_value)
	proto.RegisterEnum("LegendaryRecordGetDataC2S_MsgID", LegendaryRecordGetDataC2S_MsgID_name, LegendaryRecordGetDataC2S_MsgID_value)
	proto.RegisterEnum("LegendaryRecordGetDataS2C_MsgID", LegendaryRecordGetDataS2C_MsgID_name, LegendaryRecordGetDataS2C_MsgID_value)
	proto.RegisterEnum("LegendaryGetRewardC2S_MsgID", LegendaryGetRewardC2S_MsgID_name, LegendaryGetRewardC2S_MsgID_value)
	proto.RegisterEnum("LegendaryGetRewardS2C_MsgID", LegendaryGetRewardS2C_MsgID_name, LegendaryGetRewardS2C_MsgID_value)
	proto.RegisterEnum("LegendaryGetRankDataC2S_MsgID", LegendaryGetRankDataC2S_MsgID_name, LegendaryGetRankDataC2S_MsgID_value)
	proto.RegisterEnum("LegendaryGetRankDataS2C_MsgID", LegendaryGetRankDataS2C_MsgID_name, LegendaryGetRankDataS2C_MsgID_value)
}

func init() { proto.RegisterFile("legendary.proto", fileDescriptor38) }

var fileDescriptor38 = []byte{
	// 512 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x94, 0xcf, 0x6e, 0x13, 0x31,
	0x10, 0xc6, 0xb5, 0x6c, 0xb2, 0x69, 0x27, 0x29, 0x49, 0xdd, 0x02, 0x81, 0x53, 0xf1, 0xa9, 0x15,
	0x52, 0x24, 0x72, 0xe2, 0xc0, 0x01, 0x25, 0x15, 0x55, 0x44, 0x5b, 0xfe, 0x04, 0x71, 0x5f, 0x92,
	0xc9, 0xc6, 0x6a, 0xb2, 0xae, 0xec, 0x85, 0x2a, 0xaf, 0x02, 0x88, 0x1b, 0x6f, 0x50, 0xde, 0x8f,
	0xb1, 0xd7, 0x49, 0x93, 0x8d, 0x13, 0xd1, 0xdb, 0x8e, 0x35, 0xf3, 0xf3, 0xe7, 0x6f, 0x66, 0x16,
	0xea, 0x13, 0x4c, 0x30, 0x1d, 0xc6, 0x6a, 0xd6, 0xba, 0x56, 0x32, 0x93, 0xcf, 0x6a, 0x03, 0x39,
	0x9d, 0xca, 0xd4, 0x45, 0xd5, 0x91, 0x48, 0xc6, 0x99, 0x0b, 0x40, 0xc5, 0xe9, 0x55, 0xfe, 0xcd,
	0x3f, 0xc0, 0xde, 0xf9, 0xbc, 0xb2, 0x23, 0xb5, 0x66, 0x35, 0x28, 0x4d, 0xb4, 0x18, 0x36, 0x83,
	0xa3, 0xe0, 0xb8, 0xcc, 0xaa, 0x10, 0x5e, 0xe1, 0xac, 0xf9, 0xc0, 0x06, 0x75, 0xa8, 0x50, 0xe2,
	0x67, 0x31, 0xc5, 0x66, 0x89, 0x0e, 0x42, 0x76, 0x00, 0xd5, 0xaf, 0x54, 0xf3, 0x05, 0x95, 0x16,
	0x32, 0x6d, 0x46, 0x26, 0x8b, 0xf7, 0x81, 0x2d, 0x88, 0xdd, 0x71, 0x3c, 0x99, 0x60, 0x9a, 0x20,
	0x3b, 0x84, 0xda, 0x60, 0x1e, 0x5c, 0x7e, 0x9b, 0x3a, 0x3c, 0x03, 0xf8, 0x2e, 0xf0, 0x86, 0xea,
	0xc7, 0xe2, 0xda, 0xdd, 0x52, 0x80, 0x86, 0x16, 0xda, 0x81, 0x47, 0x0b, 0xe8, 0x27, 0x52, 0xdf,
	0x4b, 0x47, 0xf2, 0x5c, 0xe8, 0x8c, 0x9d, 0xc0, 0x5e, 0x36, 0x56, 0x88, 0x1d, 0x1c, 0x49, 0x85,
	0x17, 0x48, 0xe0, 0xf0, 0xb8, 0xda, 0x66, 0xad, 0xb5, 0x74, 0x7e, 0x02, 0x07, 0x77, 0x87, 0x78,
	0x13, 0xab, 0xa1, 0x25, 0x90, 0x86, 0x44, 0x66, 0xf9, 0x81, 0xb6, 0xe5, 0x65, 0xfe, 0x6a, 0x25,
	0x75, 0x20, 0x5d, 0xea, 0x73, 0xa8, 0x28, 0x1b, 0x69, 0x77, 0x4d, 0xa3, 0x55, 0x48, 0xe3, 0x2f,
	0x96, 0x2a, 0xcf, 0x30, 0x3b, 0x8d, 0xb3, 0xb8, 0xdb, 0xee, 0xf3, 0x43, 0x28, 0x5f, 0xe8, 0xa4,
	0x77, 0x4a, 0x86, 0x46, 0x68, 0xbf, 0x1a, 0x3f, 0x22, 0xfe, 0x37, 0x58, 0xcf, 0xee, 0xb7, 0xbb,
	0xf7, 0x30, 0x6b, 0x55, 0x7c, 0x68, 0xc4, 0xaf, 0x5b, 0x52, 0xda, 0x64, 0x09, 0x7b, 0x08, 0x91,
	0xf1, 0xba, 0x37, 0xcc, 0x7b, 0xb7, 0xdc, 0xe1, 0x8a, 0xe9, 0xf0, 0x06, 0xdd, 0x5d, 0xd8, 0x5f,
	0x67, 0xd1, 0xe0, 0x98, 0xb9, 0xda, 0x22, 0x96, 0x32, 0xd2, 0x98, 0xd0, 0xa6, 0xa5, 0xbb, 0xfc,
	0x4f, 0x00, 0x8f, 0x17, 0x94, 0x4b, 0x99, 0x89, 0xd1, 0x6c, 0xfb, 0xfb, 0x8f, 0x20, 0xca, 0xdd,
	0xb7, 0x38, 0x8f, 0xf9, 0x85, 0x4b, 0xed, 0xe4, 0xdc, 0xc3, 0x0d, 0xdf, 0x63, 0x7f, 0x46, 0xfc,
	0x0c, 0xea, 0xc5, 0x7b, 0xee, 0x94, 0x04, 0x4e, 0xc9, 0x5b, 0xb3, 0x5e, 0x46, 0xbe, 0x57, 0x89,
	0x7d, 0x3e, 0x7f, 0x09, 0x4f, 0x0b, 0xa0, 0xed, 0x03, 0xf2, 0x2b, 0xa2, 0x5d, 0xda, 0x50, 0x62,
	0x5c, 0x5a, 0x56, 0xe1, 0x1f, 0x46, 0x3f, 0xf4, 0xe3, 0xd2, 0x2e, 0x11, 0x2e, 0x1f, 0x1e, 0xd2,
	0xc0, 0x1a, 0xb0, 0xa3, 0x6c, 0xd0, 0x9b, 0xaf, 0x3f, 0x9d, 0x08, 0xfd, 0x3e, 0xc5, 0x77, 0xee,
	0x1f, 0xb0, 0xe3, 0x43, 0xfe, 0x8e, 0xf8, 0x1b, 0x1f, 0xd2, 0x68, 0xdc, 0x87, 0xdd, 0xc5, 0x7c,
	0x12, 0xc1, 0xec, 0x96, 0x9f, 0xf0, 0x1a, 0x9e, 0xac, 0x10, 0xa8, 0x27, 0xce, 0x1a, 0xf3, 0x0f,
	0x4a, 0xe6, 0x3f, 0x24, 0x5f, 0xf5, 0xad, 0x79, 0x92, 0xb7, 0xba, 0xe8, 0x52, 0xf0, 0xbf, 0x2e,
	0xdd, 0x46, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0xb9, 0x40, 0x1c, 0x6e, 0x51, 0x05, 0x00, 0x00,
}
