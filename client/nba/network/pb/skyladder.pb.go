// Code generated by protoc-gen-go.
// source: skyladder.proto
// DO NOT EDIT!

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 天梯匹配状态
type SkyLadderMatchState int32

const (
	// 待机状态
	SkyLadderMatchState_SLMS_is_idle SkyLadderMatchState = 1
	// 匹配中
	SkyLadderMatchState_SLMS_is_matching SkyLadderMatchState = 2
	// 匹配失败
	SkyLadderMatchState_SLMS_matching_fail SkyLadderMatchState = 3
	// 匹配成功
	SkyLadderMatchState_SLMS_matching_succeed SkyLadderMatchState = 4
)

var SkyLadderMatchState_name = map[int32]string{
	1: "SLMS_is_idle",
	2: "SLMS_is_matching",
	3: "SLMS_matching_fail",
	4: "SLMS_matching_succeed",
}
var SkyLadderMatchState_value = map[string]int32{
	"SLMS_is_idle":          1,
	"SLMS_is_matching":      2,
	"SLMS_matching_fail":    3,
	"SLMS_matching_succeed": 4,
}

func (x SkyLadderMatchState) Enum() *SkyLadderMatchState {
	p := new(SkyLadderMatchState)
	*p = x
	return p
}
func (x SkyLadderMatchState) String() string {
	return proto.EnumName(SkyLadderMatchState_name, int32(x))
}
func (x *SkyLadderMatchState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SkyLadderMatchState_value, data, "SkyLadderMatchState")
	if err != nil {
		return err
	}
	*x = SkyLadderMatchState(value)
	return nil
}
func (SkyLadderMatchState) EnumDescriptor() ([]byte, []int) { return fileDescriptor70, []int{0} }

type SkyLadderMatchC2S_MsgID int32

const (
	SkyLadderMatchC2S_eMsgID SkyLadderMatchC2S_MsgID = 10242
)

var SkyLadderMatchC2S_MsgID_name = map[int32]string{
	10242: "eMsgID",
}
var SkyLadderMatchC2S_MsgID_value = map[string]int32{
	"eMsgID": 10242,
}

func (x SkyLadderMatchC2S_MsgID) Enum() *SkyLadderMatchC2S_MsgID {
	p := new(SkyLadderMatchC2S_MsgID)
	*p = x
	return p
}
func (x SkyLadderMatchC2S_MsgID) String() string {
	return proto.EnumName(SkyLadderMatchC2S_MsgID_name, int32(x))
}
func (x *SkyLadderMatchC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SkyLadderMatchC2S_MsgID_value, data, "SkyLadderMatchC2S_MsgID")
	if err != nil {
		return err
	}
	*x = SkyLadderMatchC2S_MsgID(value)
	return nil
}
func (SkyLadderMatchC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor70, []int{11, 0}
}

type SkyLadderMatchS2C_MsgID int32

const (
	SkyLadderMatchS2C_eMsgID SkyLadderMatchS2C_MsgID = 10242
)

var SkyLadderMatchS2C_MsgID_name = map[int32]string{
	10242: "eMsgID",
}
var SkyLadderMatchS2C_MsgID_value = map[string]int32{
	"eMsgID": 10242,
}

func (x SkyLadderMatchS2C_MsgID) Enum() *SkyLadderMatchS2C_MsgID {
	p := new(SkyLadderMatchS2C_MsgID)
	*p = x
	return p
}
func (x SkyLadderMatchS2C_MsgID) String() string {
	return proto.EnumName(SkyLadderMatchS2C_MsgID_name, int32(x))
}
func (x *SkyLadderMatchS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SkyLadderMatchS2C_MsgID_value, data, "SkyLadderMatchS2C_MsgID")
	if err != nil {
		return err
	}
	*x = SkyLadderMatchS2C_MsgID(value)
	return nil
}
func (SkyLadderMatchS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor70, []int{12, 0}
}

type SkyLadderCancelMatchC2S_MsgID int32

const (
	SkyLadderCancelMatchC2S_eMsgID SkyLadderCancelMatchC2S_MsgID = 10243
)

var SkyLadderCancelMatchC2S_MsgID_name = map[int32]string{
	10243: "eMsgID",
}
var SkyLadderCancelMatchC2S_MsgID_value = map[string]int32{
	"eMsgID": 10243,
}

func (x SkyLadderCancelMatchC2S_MsgID) Enum() *SkyLadderCancelMatchC2S_MsgID {
	p := new(SkyLadderCancelMatchC2S_MsgID)
	*p = x
	return p
}
func (x SkyLadderCancelMatchC2S_MsgID) String() string {
	return proto.EnumName(SkyLadderCancelMatchC2S_MsgID_name, int32(x))
}
func (x *SkyLadderCancelMatchC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SkyLadderCancelMatchC2S_MsgID_value, data, "SkyLadderCancelMatchC2S_MsgID")
	if err != nil {
		return err
	}
	*x = SkyLadderCancelMatchC2S_MsgID(value)
	return nil
}
func (SkyLadderCancelMatchC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor70, []int{13, 0}
}

type SkyLadderCancelMatchS2C_MsgID int32

const (
	SkyLadderCancelMatchS2C_eMsgID SkyLadderCancelMatchS2C_MsgID = 10243
)

var SkyLadderCancelMatchS2C_MsgID_name = map[int32]string{
	10243: "eMsgID",
}
var SkyLadderCancelMatchS2C_MsgID_value = map[string]int32{
	"eMsgID": 10243,
}

func (x SkyLadderCancelMatchS2C_MsgID) Enum() *SkyLadderCancelMatchS2C_MsgID {
	p := new(SkyLadderCancelMatchS2C_MsgID)
	*p = x
	return p
}
func (x SkyLadderCancelMatchS2C_MsgID) String() string {
	return proto.EnumName(SkyLadderCancelMatchS2C_MsgID_name, int32(x))
}
func (x *SkyLadderCancelMatchS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SkyLadderCancelMatchS2C_MsgID_value, data, "SkyLadderCancelMatchS2C_MsgID")
	if err != nil {
		return err
	}
	*x = SkyLadderCancelMatchS2C_MsgID(value)
	return nil
}
func (SkyLadderCancelMatchS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor70, []int{14, 0}
}

type BuyBattleTimeC2S_MsgID int32

const (
	BuyBattleTimeC2S_eMsgID BuyBattleTimeC2S_MsgID = 10244
)

var BuyBattleTimeC2S_MsgID_name = map[int32]string{
	10244: "eMsgID",
}
var BuyBattleTimeC2S_MsgID_value = map[string]int32{
	"eMsgID": 10244,
}

func (x BuyBattleTimeC2S_MsgID) Enum() *BuyBattleTimeC2S_MsgID {
	p := new(BuyBattleTimeC2S_MsgID)
	*p = x
	return p
}
func (x BuyBattleTimeC2S_MsgID) String() string {
	return proto.EnumName(BuyBattleTimeC2S_MsgID_name, int32(x))
}
func (x *BuyBattleTimeC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BuyBattleTimeC2S_MsgID_value, data, "BuyBattleTimeC2S_MsgID")
	if err != nil {
		return err
	}
	*x = BuyBattleTimeC2S_MsgID(value)
	return nil
}
func (BuyBattleTimeC2S_MsgID) EnumDescriptor() ([]byte, []int) { return fileDescriptor70, []int{15, 0} }

type BuyBattleTimeS2C_MsgID int32

const (
	BuyBattleTimeS2C_eMsgID BuyBattleTimeS2C_MsgID = 10244
)

var BuyBattleTimeS2C_MsgID_name = map[int32]string{
	10244: "eMsgID",
}
var BuyBattleTimeS2C_MsgID_value = map[string]int32{
	"eMsgID": 10244,
}

func (x BuyBattleTimeS2C_MsgID) Enum() *BuyBattleTimeS2C_MsgID {
	p := new(BuyBattleTimeS2C_MsgID)
	*p = x
	return p
}
func (x BuyBattleTimeS2C_MsgID) String() string {
	return proto.EnumName(BuyBattleTimeS2C_MsgID_name, int32(x))
}
func (x *BuyBattleTimeS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BuyBattleTimeS2C_MsgID_value, data, "BuyBattleTimeS2C_MsgID")
	if err != nil {
		return err
	}
	*x = BuyBattleTimeS2C_MsgID(value)
	return nil
}
func (BuyBattleTimeS2C_MsgID) EnumDescriptor() ([]byte, []int) { return fileDescriptor70, []int{16, 0} }

type GetItemC2S_MsgID int32

const (
	GetItemC2S_eMsgID GetItemC2S_MsgID = 10245
)

var GetItemC2S_MsgID_name = map[int32]string{
	10245: "eMsgID",
}
var GetItemC2S_MsgID_value = map[string]int32{
	"eMsgID": 10245,
}

func (x GetItemC2S_MsgID) Enum() *GetItemC2S_MsgID {
	p := new(GetItemC2S_MsgID)
	*p = x
	return p
}
func (x GetItemC2S_MsgID) String() string {
	return proto.EnumName(GetItemC2S_MsgID_name, int32(x))
}
func (x *GetItemC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GetItemC2S_MsgID_value, data, "GetItemC2S_MsgID")
	if err != nil {
		return err
	}
	*x = GetItemC2S_MsgID(value)
	return nil
}
func (GetItemC2S_MsgID) EnumDescriptor() ([]byte, []int) { return fileDescriptor70, []int{17, 0} }

type GetItemS2C_MsgID int32

const (
	GetItemS2C_eMsgID GetItemS2C_MsgID = 10245
)

var GetItemS2C_MsgID_name = map[int32]string{
	10245: "eMsgID",
}
var GetItemS2C_MsgID_value = map[string]int32{
	"eMsgID": 10245,
}

func (x GetItemS2C_MsgID) Enum() *GetItemS2C_MsgID {
	p := new(GetItemS2C_MsgID)
	*p = x
	return p
}
func (x GetItemS2C_MsgID) String() string {
	return proto.EnumName(GetItemS2C_MsgID_name, int32(x))
}
func (x *GetItemS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GetItemS2C_MsgID_value, data, "GetItemS2C_MsgID")
	if err != nil {
		return err
	}
	*x = GetItemS2C_MsgID(value)
	return nil
}
func (GetItemS2C_MsgID) EnumDescriptor() ([]byte, []int) { return fileDescriptor70, []int{18, 0} }

type GetSkyLadderRankC2S_MsgID int32

const (
	GetSkyLadderRankC2S_eMsgID GetSkyLadderRankC2S_MsgID = 10246
)

var GetSkyLadderRankC2S_MsgID_name = map[int32]string{
	10246: "eMsgID",
}
var GetSkyLadderRankC2S_MsgID_value = map[string]int32{
	"eMsgID": 10246,
}

func (x GetSkyLadderRankC2S_MsgID) Enum() *GetSkyLadderRankC2S_MsgID {
	p := new(GetSkyLadderRankC2S_MsgID)
	*p = x
	return p
}
func (x GetSkyLadderRankC2S_MsgID) String() string {
	return proto.EnumName(GetSkyLadderRankC2S_MsgID_name, int32(x))
}
func (x *GetSkyLadderRankC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GetSkyLadderRankC2S_MsgID_value, data, "GetSkyLadderRankC2S_MsgID")
	if err != nil {
		return err
	}
	*x = GetSkyLadderRankC2S_MsgID(value)
	return nil
}
func (GetSkyLadderRankC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor70, []int{19, 0}
}

type GetSkyLadderRankS2C_MsgID int32

const (
	GetSkyLadderRankS2C_eMsgID GetSkyLadderRankS2C_MsgID = 10246
)

var GetSkyLadderRankS2C_MsgID_name = map[int32]string{
	10246: "eMsgID",
}
var GetSkyLadderRankS2C_MsgID_value = map[string]int32{
	"eMsgID": 10246,
}

func (x GetSkyLadderRankS2C_MsgID) Enum() *GetSkyLadderRankS2C_MsgID {
	p := new(GetSkyLadderRankS2C_MsgID)
	*p = x
	return p
}
func (x GetSkyLadderRankS2C_MsgID) String() string {
	return proto.EnumName(GetSkyLadderRankS2C_MsgID_name, int32(x))
}
func (x *GetSkyLadderRankS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GetSkyLadderRankS2C_MsgID_value, data, "GetSkyLadderRankS2C_MsgID")
	if err != nil {
		return err
	}
	*x = GetSkyLadderRankS2C_MsgID(value)
	return nil
}
func (GetSkyLadderRankS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor70, []int{20, 0}
}

type GetFightRecordC2S_MsgID int32

const (
	GetFightRecordC2S_eMsgID GetFightRecordC2S_MsgID = 10247
)

var GetFightRecordC2S_MsgID_name = map[int32]string{
	10247: "eMsgID",
}
var GetFightRecordC2S_MsgID_value = map[string]int32{
	"eMsgID": 10247,
}

func (x GetFightRecordC2S_MsgID) Enum() *GetFightRecordC2S_MsgID {
	p := new(GetFightRecordC2S_MsgID)
	*p = x
	return p
}
func (x GetFightRecordC2S_MsgID) String() string {
	return proto.EnumName(GetFightRecordC2S_MsgID_name, int32(x))
}
func (x *GetFightRecordC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GetFightRecordC2S_MsgID_value, data, "GetFightRecordC2S_MsgID")
	if err != nil {
		return err
	}
	*x = GetFightRecordC2S_MsgID(value)
	return nil
}
func (GetFightRecordC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor70, []int{21, 0}
}

type GetFightRecordS2C_MsgID int32

const (
	GetFightRecordS2C_eMsgID GetFightRecordS2C_MsgID = 10247
)

var GetFightRecordS2C_MsgID_name = map[int32]string{
	10247: "eMsgID",
}
var GetFightRecordS2C_MsgID_value = map[string]int32{
	"eMsgID": 10247,
}

func (x GetFightRecordS2C_MsgID) Enum() *GetFightRecordS2C_MsgID {
	p := new(GetFightRecordS2C_MsgID)
	*p = x
	return p
}
func (x GetFightRecordS2C_MsgID) String() string {
	return proto.EnumName(GetFightRecordS2C_MsgID_name, int32(x))
}
func (x *GetFightRecordS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GetFightRecordS2C_MsgID_value, data, "GetFightRecordS2C_MsgID")
	if err != nil {
		return err
	}
	*x = GetFightRecordS2C_MsgID(value)
	return nil
}
func (GetFightRecordS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor70, []int{22, 0}
}

type SkyLadderS2C_MsgID int32

const (
	SkyLadderS2C_eMsgID SkyLadderS2C_MsgID = 10241
)

var SkyLadderS2C_MsgID_name = map[int32]string{
	10241: "eMsgID",
}
var SkyLadderS2C_MsgID_value = map[string]int32{
	"eMsgID": 10241,
}

func (x SkyLadderS2C_MsgID) Enum() *SkyLadderS2C_MsgID {
	p := new(SkyLadderS2C_MsgID)
	*p = x
	return p
}
func (x SkyLadderS2C_MsgID) String() string {
	return proto.EnumName(SkyLadderS2C_MsgID_name, int32(x))
}
func (x *SkyLadderS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SkyLadderS2C_MsgID_value, data, "SkyLadderS2C_MsgID")
	if err != nil {
		return err
	}
	*x = SkyLadderS2C_MsgID(value)
	return nil
}
func (SkyLadderS2C_MsgID) EnumDescriptor() ([]byte, []int) { return fileDescriptor70, []int{23, 0} }

// 天梯系统数据
type SkyLadder struct {
	FirstBeginTime   *int64 `protobuf:"varint,1,opt,name=first_begin_time" json:"first_begin_time,omitempty"`
	CurrBeginTime    *int64 `protobuf:"varint,2,opt,name=curr_begin_time" json:"curr_begin_time,omitempty"`
	Index            *int32 `protobuf:"varint,3,opt,name=index" json:"index,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SkyLadder) Reset()                    { *m = SkyLadder{} }
func (m *SkyLadder) String() string            { return proto.CompactTextString(m) }
func (*SkyLadder) ProtoMessage()               {}
func (*SkyLadder) Descriptor() ([]byte, []int) { return fileDescriptor70, []int{0} }

func (m *SkyLadder) GetFirstBeginTime() int64 {
	if m != nil && m.FirstBeginTime != nil {
		return *m.FirstBeginTime
	}
	return 0
}

func (m *SkyLadder) GetCurrBeginTime() int64 {
	if m != nil && m.CurrBeginTime != nil {
		return *m.CurrBeginTime
	}
	return 0
}

func (m *SkyLadder) GetIndex() int32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

// 天梯个人数据
type PlayerSkyLadder struct {
	CurrBattleNum      *int32  `protobuf:"varint,1,opt,name=curr_battle_num" json:"curr_battle_num,omitempty"`
	BuyNum             *int32  `protobuf:"varint,2,opt,name=buy_num" json:"buy_num,omitempty"`
	CurrLevel          *int32  `protobuf:"varint,3,opt,name=curr_level" json:"curr_level,omitempty"`
	CurrScore          *int32  `protobuf:"varint,4,opt,name=curr_score" json:"curr_score,omitempty"`
	TotalWin           *int32  `protobuf:"varint,5,opt,name=total_win" json:"total_win,omitempty"`
	TotalLose          *int32  `protobuf:"varint,6,opt,name=total_lose" json:"total_lose,omitempty"`
	CurrRank           *int32  `protobuf:"varint,7,opt,name=curr_rank" json:"curr_rank,omitempty"`
	HistoryMaxLevel    *int32  `protobuf:"varint,8,opt,name=history_max_level" json:"history_max_level,omitempty"`
	ActiveReward       []int32 `protobuf:"varint,9,rep,name=active_reward" json:"active_reward,omitempty"`
	LevelReward        []int32 `protobuf:"varint,10,rep,name=level_reward" json:"level_reward,omitempty"`
	BattleIds          []int32 `protobuf:"varint,11,rep,name=battle_ids" json:"battle_ids,omitempty"`
	NextResetTime      *int64  `protobuf:"varint,12,opt,name=next_reset_time" json:"next_reset_time,omitempty"`
	NextMatchResetTime *int64  `protobuf:"varint,13,opt,name=next_match_reset_time" json:"next_match_reset_time,omitempty"`
	LastFailed         *bool   `protobuf:"varint,14,opt,name=last_failed" json:"last_failed,omitempty"`
	XXX_unrecognized   []byte  `json:"-"`
}

func (m *PlayerSkyLadder) Reset()                    { *m = PlayerSkyLadder{} }
func (m *PlayerSkyLadder) String() string            { return proto.CompactTextString(m) }
func (*PlayerSkyLadder) ProtoMessage()               {}
func (*PlayerSkyLadder) Descriptor() ([]byte, []int) { return fileDescriptor70, []int{1} }

func (m *PlayerSkyLadder) GetCurrBattleNum() int32 {
	if m != nil && m.CurrBattleNum != nil {
		return *m.CurrBattleNum
	}
	return 0
}

func (m *PlayerSkyLadder) GetBuyNum() int32 {
	if m != nil && m.BuyNum != nil {
		return *m.BuyNum
	}
	return 0
}

func (m *PlayerSkyLadder) GetCurrLevel() int32 {
	if m != nil && m.CurrLevel != nil {
		return *m.CurrLevel
	}
	return 0
}

func (m *PlayerSkyLadder) GetCurrScore() int32 {
	if m != nil && m.CurrScore != nil {
		return *m.CurrScore
	}
	return 0
}

func (m *PlayerSkyLadder) GetTotalWin() int32 {
	if m != nil && m.TotalWin != nil {
		return *m.TotalWin
	}
	return 0
}

func (m *PlayerSkyLadder) GetTotalLose() int32 {
	if m != nil && m.TotalLose != nil {
		return *m.TotalLose
	}
	return 0
}

func (m *PlayerSkyLadder) GetCurrRank() int32 {
	if m != nil && m.CurrRank != nil {
		return *m.CurrRank
	}
	return 0
}

func (m *PlayerSkyLadder) GetHistoryMaxLevel() int32 {
	if m != nil && m.HistoryMaxLevel != nil {
		return *m.HistoryMaxLevel
	}
	return 0
}

func (m *PlayerSkyLadder) GetActiveReward() []int32 {
	if m != nil {
		return m.ActiveReward
	}
	return nil
}

func (m *PlayerSkyLadder) GetLevelReward() []int32 {
	if m != nil {
		return m.LevelReward
	}
	return nil
}

func (m *PlayerSkyLadder) GetBattleIds() []int32 {
	if m != nil {
		return m.BattleIds
	}
	return nil
}

func (m *PlayerSkyLadder) GetNextResetTime() int64 {
	if m != nil && m.NextResetTime != nil {
		return *m.NextResetTime
	}
	return 0
}

func (m *PlayerSkyLadder) GetNextMatchResetTime() int64 {
	if m != nil && m.NextMatchResetTime != nil {
		return *m.NextMatchResetTime
	}
	return 0
}

func (m *PlayerSkyLadder) GetLastFailed() bool {
	if m != nil && m.LastFailed != nil {
		return *m.LastFailed
	}
	return false
}

// 天梯排行
type LadderRankRecord struct {
	Gid              *int32  `protobuf:"varint,1,opt,name=gid" json:"gid,omitempty"`
	Name             *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Score            *int32  `protobuf:"varint,3,opt,name=score" json:"score,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *LadderRankRecord) Reset()                    { *m = LadderRankRecord{} }
func (m *LadderRankRecord) String() string            { return proto.CompactTextString(m) }
func (*LadderRankRecord) ProtoMessage()               {}
func (*LadderRankRecord) Descriptor() ([]byte, []int) { return fileDescriptor70, []int{2} }

func (m *LadderRankRecord) GetGid() int32 {
	if m != nil && m.Gid != nil {
		return *m.Gid
	}
	return 0
}

func (m *LadderRankRecord) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *LadderRankRecord) GetScore() int32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

// 天梯挑战记录
type LadderFightRecord struct {
	Record           *FightDataRecord `protobuf:"bytes,1,opt,name=record" json:"record,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *LadderFightRecord) Reset()                    { *m = LadderFightRecord{} }
func (m *LadderFightRecord) String() string            { return proto.CompactTextString(m) }
func (*LadderFightRecord) ProtoMessage()               {}
func (*LadderFightRecord) Descriptor() ([]byte, []int) { return fileDescriptor70, []int{3} }

func (m *LadderFightRecord) GetRecord() *FightDataRecord {
	if m != nil {
		return m.Record
	}
	return nil
}

// robot范围段的上下限战力值
type OneScopeRobotVal struct {
	Id               *int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	MinVal           *uint64 `protobuf:"varint,2,opt,name=minVal" json:"minVal,omitempty"`
	MaxVal           *uint64 `protobuf:"varint,3,opt,name=maxVal" json:"maxVal,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *OneScopeRobotVal) Reset()                    { *m = OneScopeRobotVal{} }
func (m *OneScopeRobotVal) String() string            { return proto.CompactTextString(m) }
func (*OneScopeRobotVal) ProtoMessage()               {}
func (*OneScopeRobotVal) Descriptor() ([]byte, []int) { return fileDescriptor70, []int{4} }

func (m *OneScopeRobotVal) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *OneScopeRobotVal) GetMinVal() uint64 {
	if m != nil && m.MinVal != nil {
		return *m.MinVal
	}
	return 0
}

func (m *OneScopeRobotVal) GetMaxVal() uint64 {
	if m != nil && m.MaxVal != nil {
		return *m.MaxVal
	}
	return 0
}

// 初使的robot
type OneRobot struct {
	Id               *int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Power            *uint64 `protobuf:"varint,2,opt,name=power" json:"power,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *OneRobot) Reset()                    { *m = OneRobot{} }
func (m *OneRobot) String() string            { return proto.CompactTextString(m) }
func (*OneRobot) ProtoMessage()               {}
func (*OneRobot) Descriptor() ([]byte, []int) { return fileDescriptor70, []int{5} }

func (m *OneRobot) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *OneRobot) GetPower() uint64 {
	if m != nil && m.Power != nil {
		return *m.Power
	}
	return 0
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~服务端进程间消息~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~//
// 天梯请求匹配信息
type SkyLadderMatchInfoL2M struct {
	Gid         *int32  `protobuf:"varint,1,opt,name=gid" json:"gid,omitempty"`
	Battleforce *uint64 `protobuf:"varint,2,opt,name=battleforce" json:"battleforce,omitempty"`
	// 段位ID
	LevelId *int32 `protobuf:"varint,3,opt,name=level_id" json:"level_id,omitempty"`
	// 区服ID
	ZoneId *int32 `protobuf:"varint,4,opt,name=zone_id" json:"zone_id,omitempty"`
	// 进程ID
	PsId *int32 `protobuf:"varint,5,opt,name=ps_id" json:"ps_id,omitempty"`
	// 今日挑战过的gid(同一个玩家只能匹配一次)
	BattleIds        []int32 `protobuf:"varint,6,rep,name=battle_ids" json:"battle_ids,omitempty"`
	LastFailed       *bool   `protobuf:"varint,7,opt,name=last_failed" json:"last_failed,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SkyLadderMatchInfoL2M) Reset()                    { *m = SkyLadderMatchInfoL2M{} }
func (m *SkyLadderMatchInfoL2M) String() string            { return proto.CompactTextString(m) }
func (*SkyLadderMatchInfoL2M) ProtoMessage()               {}
func (*SkyLadderMatchInfoL2M) Descriptor() ([]byte, []int) { return fileDescriptor70, []int{6} }

func (m *SkyLadderMatchInfoL2M) GetGid() int32 {
	if m != nil && m.Gid != nil {
		return *m.Gid
	}
	return 0
}

func (m *SkyLadderMatchInfoL2M) GetBattleforce() uint64 {
	if m != nil && m.Battleforce != nil {
		return *m.Battleforce
	}
	return 0
}

func (m *SkyLadderMatchInfoL2M) GetLevelId() int32 {
	if m != nil && m.LevelId != nil {
		return *m.LevelId
	}
	return 0
}

func (m *SkyLadderMatchInfoL2M) GetZoneId() int32 {
	if m != nil && m.ZoneId != nil {
		return *m.ZoneId
	}
	return 0
}

func (m *SkyLadderMatchInfoL2M) GetPsId() int32 {
	if m != nil && m.PsId != nil {
		return *m.PsId
	}
	return 0
}

func (m *SkyLadderMatchInfoL2M) GetBattleIds() []int32 {
	if m != nil {
		return m.BattleIds
	}
	return nil
}

func (m *SkyLadderMatchInfoL2M) GetLastFailed() bool {
	if m != nil && m.LastFailed != nil {
		return *m.LastFailed
	}
	return false
}

// 天梯返回匹配信息
type SkyLadderMatchInfoM2L struct {
	Gid          *int32 `protobuf:"varint,1,opt,name=gid" json:"gid,omitempty"`
	OtherGid     *int32 `protobuf:"varint,2,opt,name=other_gid" json:"other_gid,omitempty"`
	OtherIsRobot *bool  `protobuf:"varint,3,opt,name=other_is_robot" json:"other_is_robot,omitempty"`
	// 匹配所用事件(毫秒)
	UseTick          *int32 `protobuf:"varint,4,opt,name=useTick" json:"useTick,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SkyLadderMatchInfoM2L) Reset()                    { *m = SkyLadderMatchInfoM2L{} }
func (m *SkyLadderMatchInfoM2L) String() string            { return proto.CompactTextString(m) }
func (*SkyLadderMatchInfoM2L) ProtoMessage()               {}
func (*SkyLadderMatchInfoM2L) Descriptor() ([]byte, []int) { return fileDescriptor70, []int{7} }

func (m *SkyLadderMatchInfoM2L) GetGid() int32 {
	if m != nil && m.Gid != nil {
		return *m.Gid
	}
	return 0
}

func (m *SkyLadderMatchInfoM2L) GetOtherGid() int32 {
	if m != nil && m.OtherGid != nil {
		return *m.OtherGid
	}
	return 0
}

func (m *SkyLadderMatchInfoM2L) GetOtherIsRobot() bool {
	if m != nil && m.OtherIsRobot != nil {
		return *m.OtherIsRobot
	}
	return false
}

func (m *SkyLadderMatchInfoM2L) GetUseTick() int32 {
	if m != nil && m.UseTick != nil {
		return *m.UseTick
	}
	return 0
}

// 退出天梯匹配
type SkyLadderCancelMatchL2M struct {
	// 玩家id
	Gid *int32 `protobuf:"varint,1,opt,name=gid" json:"gid,omitempty"`
	// logic id
	PsId *int32 `protobuf:"varint,2,opt,name=psId" json:"psId,omitempty"`
	// 区服id
	LsId             *int32 `protobuf:"varint,3,opt,name=lsId" json:"lsId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SkyLadderCancelMatchL2M) Reset()                    { *m = SkyLadderCancelMatchL2M{} }
func (m *SkyLadderCancelMatchL2M) String() string            { return proto.CompactTextString(m) }
func (*SkyLadderCancelMatchL2M) ProtoMessage()               {}
func (*SkyLadderCancelMatchL2M) Descriptor() ([]byte, []int) { return fileDescriptor70, []int{8} }

func (m *SkyLadderCancelMatchL2M) GetGid() int32 {
	if m != nil && m.Gid != nil {
		return *m.Gid
	}
	return 0
}

func (m *SkyLadderCancelMatchL2M) GetPsId() int32 {
	if m != nil && m.PsId != nil {
		return *m.PsId
	}
	return 0
}

func (m *SkyLadderCancelMatchL2M) GetLsId() int32 {
	if m != nil && m.LsId != nil {
		return *m.LsId
	}
	return 0
}

// 匹配对象
type OneSkyLadderUser struct {
	// 玩家id
	Gid *int32 `protobuf:"varint,1,opt,name=gid" json:"gid,omitempty"`
	// 进程ID
	PsId *int32 `protobuf:"varint,2,opt,name=psId" json:"psId,omitempty"`
	// logic id
	LsId             *int32 `protobuf:"varint,3,opt,name=lsId" json:"lsId,omitempty"`
	IsRobot          *bool  `protobuf:"varint,4,opt,name=isRobot" json:"isRobot,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *OneSkyLadderUser) Reset()                    { *m = OneSkyLadderUser{} }
func (m *OneSkyLadderUser) String() string            { return proto.CompactTextString(m) }
func (*OneSkyLadderUser) ProtoMessage()               {}
func (*OneSkyLadderUser) Descriptor() ([]byte, []int) { return fileDescriptor70, []int{9} }

func (m *OneSkyLadderUser) GetGid() int32 {
	if m != nil && m.Gid != nil {
		return *m.Gid
	}
	return 0
}

func (m *OneSkyLadderUser) GetPsId() int32 {
	if m != nil && m.PsId != nil {
		return *m.PsId
	}
	return 0
}

func (m *OneSkyLadderUser) GetLsId() int32 {
	if m != nil && m.LsId != nil {
		return *m.LsId
	}
	return 0
}

func (m *OneSkyLadderUser) GetIsRobot() bool {
	if m != nil && m.IsRobot != nil {
		return *m.IsRobot
	}
	return false
}

// 匹配完成通知战斗服创建房间
type CreateLadderRoomInfoM2F struct {
	Self             *OneSkyLadderUser `protobuf:"bytes,1,opt,name=self" json:"self,omitempty"`
	Other            *OneSkyLadderUser `protobuf:"bytes,2,opt,name=other" json:"other,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *CreateLadderRoomInfoM2F) Reset()                    { *m = CreateLadderRoomInfoM2F{} }
func (m *CreateLadderRoomInfoM2F) String() string            { return proto.CompactTextString(m) }
func (*CreateLadderRoomInfoM2F) ProtoMessage()               {}
func (*CreateLadderRoomInfoM2F) Descriptor() ([]byte, []int) { return fileDescriptor70, []int{10} }

func (m *CreateLadderRoomInfoM2F) GetSelf() *OneSkyLadderUser {
	if m != nil {
		return m.Self
	}
	return nil
}

func (m *CreateLadderRoomInfoM2F) GetOther() *OneSkyLadderUser {
	if m != nil {
		return m.Other
	}
	return nil
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~客户端接口~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~//
// 开始匹配
type SkyLadderMatchC2S struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *SkyLadderMatchC2S) Reset()                    { *m = SkyLadderMatchC2S{} }
func (m *SkyLadderMatchC2S) String() string            { return proto.CompactTextString(m) }
func (*SkyLadderMatchC2S) ProtoMessage()               {}
func (*SkyLadderMatchC2S) Descriptor() ([]byte, []int) { return fileDescriptor70, []int{11} }

// 返回匹配
type SkyLadderMatchS2C struct {
	MatchState *SkyLadderMatchState `protobuf:"varint,1,opt,name=matchState,enum=SkyLadderMatchState" json:"matchState,omitempty"`
	// 匹配成功后才有2、3、4
	// 天梯对手段位
	OppSkyLv *int32 `protobuf:"varint,2,opt,name=oppSkyLv" json:"oppSkyLv,omitempty"`
	// 天梯对手队伍id
	OppIcon *int32 `protobuf:"varint,3,opt,name=oppIcon" json:"oppIcon,omitempty"`
	// 天梯对手名称
	OppName          *string `protobuf:"bytes,4,opt,name=oppName" json:"oppName,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SkyLadderMatchS2C) Reset()                    { *m = SkyLadderMatchS2C{} }
func (m *SkyLadderMatchS2C) String() string            { return proto.CompactTextString(m) }
func (*SkyLadderMatchS2C) ProtoMessage()               {}
func (*SkyLadderMatchS2C) Descriptor() ([]byte, []int) { return fileDescriptor70, []int{12} }

func (m *SkyLadderMatchS2C) GetMatchState() SkyLadderMatchState {
	if m != nil && m.MatchState != nil {
		return *m.MatchState
	}
	return SkyLadderMatchState_SLMS_is_idle
}

func (m *SkyLadderMatchS2C) GetOppSkyLv() int32 {
	if m != nil && m.OppSkyLv != nil {
		return *m.OppSkyLv
	}
	return 0
}

func (m *SkyLadderMatchS2C) GetOppIcon() int32 {
	if m != nil && m.OppIcon != nil {
		return *m.OppIcon
	}
	return 0
}

func (m *SkyLadderMatchS2C) GetOppName() string {
	if m != nil && m.OppName != nil {
		return *m.OppName
	}
	return ""
}

// 取消匹配
type SkyLadderCancelMatchC2S struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *SkyLadderCancelMatchC2S) Reset()                    { *m = SkyLadderCancelMatchC2S{} }
func (m *SkyLadderCancelMatchC2S) String() string            { return proto.CompactTextString(m) }
func (*SkyLadderCancelMatchC2S) ProtoMessage()               {}
func (*SkyLadderCancelMatchC2S) Descriptor() ([]byte, []int) { return fileDescriptor70, []int{13} }

// 取消匹配
type SkyLadderCancelMatchS2C struct {
	IsSuccess        *bool  `protobuf:"varint,1,opt,name=isSuccess" json:"isSuccess,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SkyLadderCancelMatchS2C) Reset()                    { *m = SkyLadderCancelMatchS2C{} }
func (m *SkyLadderCancelMatchS2C) String() string            { return proto.CompactTextString(m) }
func (*SkyLadderCancelMatchS2C) ProtoMessage()               {}
func (*SkyLadderCancelMatchS2C) Descriptor() ([]byte, []int) { return fileDescriptor70, []int{14} }

func (m *SkyLadderCancelMatchS2C) GetIsSuccess() bool {
	if m != nil && m.IsSuccess != nil {
		return *m.IsSuccess
	}
	return false
}

// 请求购买挑战次数
type BuyBattleTimeC2S struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *BuyBattleTimeC2S) Reset()                    { *m = BuyBattleTimeC2S{} }
func (m *BuyBattleTimeC2S) String() string            { return proto.CompactTextString(m) }
func (*BuyBattleTimeC2S) ProtoMessage()               {}
func (*BuyBattleTimeC2S) Descriptor() ([]byte, []int) { return fileDescriptor70, []int{15} }

// 返回 购买挑战次数
type BuyBattleTimeS2C struct {
	BuyTimes         *int32 `protobuf:"varint,1,opt,name=buy_times" json:"buy_times,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *BuyBattleTimeS2C) Reset()                    { *m = BuyBattleTimeS2C{} }
func (m *BuyBattleTimeS2C) String() string            { return proto.CompactTextString(m) }
func (*BuyBattleTimeS2C) ProtoMessage()               {}
func (*BuyBattleTimeS2C) Descriptor() ([]byte, []int) { return fileDescriptor70, []int{16} }

func (m *BuyBattleTimeS2C) GetBuyTimes() int32 {
	if m != nil && m.BuyTimes != nil {
		return *m.BuyTimes
	}
	return 0
}

// 请求领取奖励物品
type GetItemC2S struct {
	GetType          *int32 `protobuf:"varint,1,opt,name=get_type" json:"get_type,omitempty"`
	GetId            *int32 `protobuf:"varint,2,opt,name=get_id" json:"get_id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GetItemC2S) Reset()                    { *m = GetItemC2S{} }
func (m *GetItemC2S) String() string            { return proto.CompactTextString(m) }
func (*GetItemC2S) ProtoMessage()               {}
func (*GetItemC2S) Descriptor() ([]byte, []int) { return fileDescriptor70, []int{17} }

func (m *GetItemC2S) GetGetType() int32 {
	if m != nil && m.GetType != nil {
		return *m.GetType
	}
	return 0
}

func (m *GetItemC2S) GetGetId() int32 {
	if m != nil && m.GetId != nil {
		return *m.GetId
	}
	return 0
}

// 返回 奖励物品
type GetItemS2C struct {
	GetType          *int32 `protobuf:"varint,1,opt,name=get_type" json:"get_type,omitempty"`
	GetId            *int32 `protobuf:"varint,2,opt,name=get_id" json:"get_id,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GetItemS2C) Reset()                    { *m = GetItemS2C{} }
func (m *GetItemS2C) String() string            { return proto.CompactTextString(m) }
func (*GetItemS2C) ProtoMessage()               {}
func (*GetItemS2C) Descriptor() ([]byte, []int) { return fileDescriptor70, []int{18} }

func (m *GetItemS2C) GetGetType() int32 {
	if m != nil && m.GetType != nil {
		return *m.GetType
	}
	return 0
}

func (m *GetItemS2C) GetGetId() int32 {
	if m != nil && m.GetId != nil {
		return *m.GetId
	}
	return 0
}

// 获取玩家天梯排行
type GetSkyLadderRankC2S struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *GetSkyLadderRankC2S) Reset()                    { *m = GetSkyLadderRankC2S{} }
func (m *GetSkyLadderRankC2S) String() string            { return proto.CompactTextString(m) }
func (*GetSkyLadderRankC2S) ProtoMessage()               {}
func (*GetSkyLadderRankC2S) Descriptor() ([]byte, []int) { return fileDescriptor70, []int{19} }

// 获取玩家天梯排行
type GetSkyLadderRankS2C struct {
	Reports          []*LadderRankRecord `protobuf:"bytes,1,rep,name=reports" json:"reports,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *GetSkyLadderRankS2C) Reset()                    { *m = GetSkyLadderRankS2C{} }
func (m *GetSkyLadderRankS2C) String() string            { return proto.CompactTextString(m) }
func (*GetSkyLadderRankS2C) ProtoMessage()               {}
func (*GetSkyLadderRankS2C) Descriptor() ([]byte, []int) { return fileDescriptor70, []int{20} }

func (m *GetSkyLadderRankS2C) GetReports() []*LadderRankRecord {
	if m != nil {
		return m.Reports
	}
	return nil
}

// 获取挑战记录
type GetFightRecordC2S struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *GetFightRecordC2S) Reset()                    { *m = GetFightRecordC2S{} }
func (m *GetFightRecordC2S) String() string            { return proto.CompactTextString(m) }
func (*GetFightRecordC2S) ProtoMessage()               {}
func (*GetFightRecordC2S) Descriptor() ([]byte, []int) { return fileDescriptor70, []int{21} }

// 获取挑战记录
type GetFightRecordS2C struct {
	Reports          []*LadderFightRecord `protobuf:"bytes,1,rep,name=reports" json:"reports,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *GetFightRecordS2C) Reset()                    { *m = GetFightRecordS2C{} }
func (m *GetFightRecordS2C) String() string            { return proto.CompactTextString(m) }
func (*GetFightRecordS2C) ProtoMessage()               {}
func (*GetFightRecordS2C) Descriptor() ([]byte, []int) { return fileDescriptor70, []int{22} }

func (m *GetFightRecordS2C) GetReports() []*LadderFightRecord {
	if m != nil {
		return m.Reports
	}
	return nil
}

// 返回天梯信息
type SkyLadderS2C struct {
	Index            *int32           `protobuf:"varint,1,opt,name=index" json:"index,omitempty"`
	BeginTime        *int64           `protobuf:"varint,2,opt,name=begin_time" json:"begin_time,omitempty"`
	LadderInfo       *PlayerSkyLadder `protobuf:"bytes,3,opt,name=ladderInfo" json:"ladderInfo,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *SkyLadderS2C) Reset()                    { *m = SkyLadderS2C{} }
func (m *SkyLadderS2C) String() string            { return proto.CompactTextString(m) }
func (*SkyLadderS2C) ProtoMessage()               {}
func (*SkyLadderS2C) Descriptor() ([]byte, []int) { return fileDescriptor70, []int{23} }

func (m *SkyLadderS2C) GetIndex() int32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *SkyLadderS2C) GetBeginTime() int64 {
	if m != nil && m.BeginTime != nil {
		return *m.BeginTime
	}
	return 0
}

func (m *SkyLadderS2C) GetLadderInfo() *PlayerSkyLadder {
	if m != nil {
		return m.LadderInfo
	}
	return nil
}

func init() {
	proto.RegisterType((*SkyLadder)(nil), "SkyLadder")
	proto.RegisterType((*PlayerSkyLadder)(nil), "PlayerSkyLadder")
	proto.RegisterType((*LadderRankRecord)(nil), "LadderRankRecord")
	proto.RegisterType((*LadderFightRecord)(nil), "LadderFightRecord")
	proto.RegisterType((*OneScopeRobotVal)(nil), "OneScopeRobotVal")
	proto.RegisterType((*OneRobot)(nil), "OneRobot")
	proto.RegisterType((*SkyLadderMatchInfoL2M)(nil), "SkyLadderMatchInfoL2M")
	proto.RegisterType((*SkyLadderMatchInfoM2L)(nil), "SkyLadderMatchInfoM2L")
	proto.RegisterType((*SkyLadderCancelMatchL2M)(nil), "SkyLadderCancelMatchL2M")
	proto.RegisterType((*OneSkyLadderUser)(nil), "OneSkyLadderUser")
	proto.RegisterType((*CreateLadderRoomInfoM2F)(nil), "CreateLadderRoomInfoM2F")
	proto.RegisterType((*SkyLadderMatchC2S)(nil), "SkyLadderMatchC2S")
	proto.RegisterType((*SkyLadderMatchS2C)(nil), "SkyLadderMatchS2C")
	proto.RegisterType((*SkyLadderCancelMatchC2S)(nil), "SkyLadderCancelMatchC2S")
	proto.RegisterType((*SkyLadderCancelMatchS2C)(nil), "SkyLadderCancelMatchS2C")
	proto.RegisterType((*BuyBattleTimeC2S)(nil), "BuyBattleTimeC2S")
	proto.RegisterType((*BuyBattleTimeS2C)(nil), "BuyBattleTimeS2C")
	proto.RegisterType((*GetItemC2S)(nil), "GetItemC2S")
	proto.RegisterType((*GetItemS2C)(nil), "GetItemS2C")
	proto.RegisterType((*GetSkyLadderRankC2S)(nil), "GetSkyLadderRankC2S")
	proto.RegisterType((*GetSkyLadderRankS2C)(nil), "GetSkyLadderRankS2C")
	proto.RegisterType((*GetFightRecordC2S)(nil), "GetFightRecordC2S")
	proto.RegisterType((*GetFightRecordS2C)(nil), "GetFightRecordS2C")
	proto.RegisterType((*SkyLadderS2C)(nil), "SkyLadderS2C")
	proto.RegisterEnum("SkyLadderMatchState", SkyLadderMatchState_name, SkyLadderMatchState_value)
	proto.RegisterEnum("SkyLadderMatchC2S_MsgID", SkyLadderMatchC2S_MsgID_name, SkyLadderMatchC2S_MsgID_value)
	proto.RegisterEnum("SkyLadderMatchS2C_MsgID", SkyLadderMatchS2C_MsgID_name, SkyLadderMatchS2C_MsgID_value)
	proto.RegisterEnum("SkyLadderCancelMatchC2S_MsgID", SkyLadderCancelMatchC2S_MsgID_name, SkyLadderCancelMatchC2S_MsgID_value)
	proto.RegisterEnum("SkyLadderCancelMatchS2C_MsgID", SkyLadderCancelMatchS2C_MsgID_name, SkyLadderCancelMatchS2C_MsgID_value)
	proto.RegisterEnum("BuyBattleTimeC2S_MsgID", BuyBattleTimeC2S_MsgID_name, BuyBattleTimeC2S_MsgID_value)
	proto.RegisterEnum("BuyBattleTimeS2C_MsgID", BuyBattleTimeS2C_MsgID_name, BuyBattleTimeS2C_MsgID_value)
	proto.RegisterEnum("GetItemC2S_MsgID", GetItemC2S_MsgID_name, GetItemC2S_MsgID_value)
	proto.RegisterEnum("GetItemS2C_MsgID", GetItemS2C_MsgID_name, GetItemS2C_MsgID_value)
	proto.RegisterEnum("GetSkyLadderRankC2S_MsgID", GetSkyLadderRankC2S_MsgID_name, GetSkyLadderRankC2S_MsgID_value)
	proto.RegisterEnum("GetSkyLadderRankS2C_MsgID", GetSkyLadderRankS2C_MsgID_name, GetSkyLadderRankS2C_MsgID_value)
	proto.RegisterEnum("GetFightRecordC2S_MsgID", GetFightRecordC2S_MsgID_name, GetFightRecordC2S_MsgID_value)
	proto.RegisterEnum("GetFightRecordS2C_MsgID", GetFightRecordS2C_MsgID_name, GetFightRecordS2C_MsgID_value)
	proto.RegisterEnum("SkyLadderS2C_MsgID", SkyLadderS2C_MsgID_name, SkyLadderS2C_MsgID_value)
}

func init() { proto.RegisterFile("skyladder.proto", fileDescriptor70) }

var fileDescriptor70 = []byte{
	// 924 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x55, 0x5b, 0x6f, 0xe3, 0x44,
	0x14, 0x56, 0x9a, 0x4b, 0x93, 0x93, 0xb4, 0x75, 0xdc, 0x96, 0x1a, 0x24, 0x44, 0x65, 0x40, 0x2a,
	0x20, 0x05, 0x29, 0x12, 0x4f, 0x20, 0x1e, 0xda, 0x6a, 0x51, 0xa4, 0x64, 0x37, 0x6a, 0x16, 0x9e,
	0x90, 0xc2, 0xd4, 0x9e, 0xa4, 0xa3, 0xda, 0x1e, 0x6b, 0x66, 0xd2, 0x36, 0xbc, 0x71, 0xdd, 0x3f,
	0xc0, 0x6f, 0xe2, 0x77, 0x31, 0x73, 0xc6, 0x76, 0x13, 0x37, 0x96, 0xd0, 0xbe, 0xf9, 0x7c, 0xe7,
	0xf2, 0x9d, 0xdb, 0x1c, 0xc3, 0x91, 0xbc, 0x5f, 0x47, 0x24, 0x0c, 0xa9, 0x18, 0xa4, 0x82, 0x2b,
	0xfe, 0x51, 0x2f, 0xe0, 0x71, 0xcc, 0x93, 0x4c, 0xea, 0x2e, 0xd8, 0xf2, 0x4e, 0x59, 0xc1, 0x9f,
	0x40, 0x67, 0x76, 0xbf, 0x1e, 0xa3, 0xb5, 0xeb, 0x81, 0xb3, 0x60, 0x42, 0xaa, 0xf9, 0x2d, 0x5d,
	0xb2, 0x64, 0xae, 0x58, 0x4c, 0xbd, 0xda, 0x79, 0xed, 0xa2, 0xee, 0x9e, 0xc1, 0x51, 0xb0, 0x12,
	0x62, 0x53, 0xb1, 0x87, 0x8a, 0x03, 0x68, 0xb2, 0x24, 0xa4, 0x4f, 0x5e, 0x5d, 0x8b, 0x4d, 0xff,
	0xdf, 0x3d, 0x38, 0x9a, 0x46, 0x64, 0x4d, 0xc5, 0x73, 0xd4, 0xc2, 0x97, 0x28, 0x15, 0xd1, 0x79,
	0xb2, 0x8a, 0x31, 0x68, 0xd3, 0x3d, 0x82, 0xfd, 0xdb, 0xd5, 0x1a, 0x81, 0x3d, 0x04, 0x5c, 0x00,
	0xb4, 0x8c, 0xe8, 0x03, 0x8d, 0x6c, 0xc4, 0x02, 0x93, 0x01, 0x17, 0xd4, 0x6b, 0x20, 0xd6, 0x87,
	0x8e, 0xe2, 0x8a, 0x44, 0xf3, 0x47, 0x96, 0x78, 0xcd, 0xdc, 0xcc, 0x42, 0x11, 0x97, 0xd4, 0x6b,
	0xe5, 0x66, 0xe8, 0x2a, 0x48, 0x72, 0xef, 0xed, 0x23, 0xf4, 0x21, 0xf4, 0xef, 0x98, 0x54, 0x5c,
	0xac, 0xe7, 0x31, 0x79, 0xca, 0x88, 0xda, 0xa8, 0x3a, 0x85, 0x03, 0x12, 0x28, 0xf6, 0x40, 0xe7,
	0x82, 0x3e, 0x12, 0x11, 0x7a, 0x9d, 0xf3, 0xba, 0x86, 0x4f, 0xa0, 0x87, 0x56, 0x39, 0x0a, 0x88,
	0x6a, 0xba, 0xac, 0x1c, 0x16, 0x4a, 0xaf, 0x8b, 0x98, 0xae, 0x33, 0xa1, 0x4f, 0x4a, 0x1b, 0x4a,
	0xaa, 0x6c, 0x8f, 0x7a, 0xd8, 0xa3, 0x8f, 0xe1, 0x14, 0x15, 0x31, 0x51, 0xc1, 0xdd, 0xa6, 0xfa,
	0x00, 0xd5, 0xc7, 0xd0, 0x8d, 0x88, 0x6e, 0xfa, 0x82, 0xb0, 0x88, 0x86, 0xde, 0xa1, 0x06, 0xdb,
	0xfe, 0x77, 0xe0, 0xd8, 0xf6, 0xdd, 0xe8, 0xe4, 0x6f, 0xa8, 0x2e, 0x3e, 0x74, 0xbb, 0x50, 0x5f,
	0xb2, 0x30, 0x6b, 0x5e, 0x0f, 0x1a, 0x09, 0xc9, 0xc6, 0xd0, 0x31, 0x63, 0xb0, 0x0d, 0xb2, 0x63,
	0xf8, 0x06, 0xfa, 0xd6, 0xfb, 0x95, 0x19, 0x75, 0xe6, 0x7e, 0x0e, 0x2d, 0x81, 0x5f, 0x18, 0xa1,
	0x3b, 0x74, 0x06, 0xa8, 0xbd, 0x26, 0x8a, 0x58, 0x0b, 0xff, 0x7b, 0x70, 0xde, 0x24, 0x74, 0x16,
	0xf0, 0x94, 0xde, 0xf0, 0x5b, 0xae, 0x7e, 0x22, 0x91, 0x2e, 0x74, 0xaf, 0xe0, 0x3c, 0x84, 0x56,
	0xcc, 0x12, 0x8d, 0x22, 0x6b, 0x03, 0x65, 0xf2, 0x64, 0x64, 0x43, 0xdb, 0xf0, 0x3f, 0x87, 0xb6,
	0xf6, 0x47, 0xd7, 0x2d, 0x3f, 0x9d, 0x5d, 0xca, 0x1f, 0xa9, 0xb0, 0x6e, 0xfe, 0x3f, 0x35, 0x38,
	0x2d, 0xd6, 0x63, 0x62, 0x9a, 0x32, 0x4a, 0x16, 0x7c, 0x3c, 0x9c, 0x6c, 0x57, 0xa8, 0xfb, 0x62,
	0x7b, 0xbc, 0xe0, 0x22, 0xa0, 0x19, 0xa5, 0x03, 0x6d, 0x3b, 0x0e, 0x6d, 0x56, 0xcf, 0xb7, 0xe8,
	0x57, 0x9e, 0x98, 0x41, 0x64, 0xdb, 0x61, 0xd8, 0xa4, 0x11, 0x8b, 0xcd, 0xd8, 0x18, 0x55, 0x0b,
	0x47, 0x55, 0x6a, 0xf9, 0x3e, 0xb6, 0xfc, 0x97, 0x5d, 0x59, 0x4d, 0x86, 0xe3, 0xed, 0xac, 0xf4,
	0x52, 0x71, 0x75, 0x47, 0xc5, 0xdc, 0x40, 0x76, 0x6d, 0x3f, 0x80, 0x43, 0x0b, 0x31, 0x39, 0x17,
	0xa6, 0x78, 0xcc, 0xac, 0x6d, 0x32, 0x5b, 0x49, 0xfa, 0x96, 0x05, 0xf7, 0x36, 0x33, 0xff, 0x12,
	0xce, 0x0a, 0x86, 0x2b, 0x92, 0x04, 0x34, 0x42, 0x9e, 0x17, 0x95, 0xeb, 0xd9, 0xa6, 0x72, 0x94,
	0x87, 0xd7, 0x52, 0x64, 0x24, 0x3b, 0xda, 0xb1, 0x9d, 0x51, 0x1e, 0xe6, 0x47, 0xa9, 0x5f, 0xd8,
	0xff, 0x75, 0x36, 0x19, 0x31, 0x89, 0xf3, 0xc1, 0x8c, 0xda, 0xfe, 0xcf, 0x70, 0x76, 0x25, 0x28,
	0x51, 0x34, 0x5b, 0x36, 0xce, 0x63, 0x5b, 0xf5, 0x2b, 0xf7, 0x13, 0x68, 0x48, 0x1a, 0x2d, 0xb2,
	0x65, 0xe9, 0x0f, 0x5e, 0xb0, 0x9e, 0x43, 0x13, 0xcb, 0x46, 0xa6, 0x5d, 0x16, 0xfe, 0x17, 0xd0,
	0xdf, 0xee, 0xe8, 0xd5, 0x70, 0xe6, 0x9f, 0x40, 0x73, 0x22, 0x97, 0xa3, 0x6b, 0x9d, 0x75, 0x8b,
	0xe2, 0x97, 0xf3, 0xfb, 0xd4, 0x7f, 0x57, 0x2b, 0xdb, 0xce, 0x86, 0x57, 0xee, 0x05, 0x00, 0x3e,
	0x9a, 0x99, 0xd2, 0x29, 0x62, 0x26, 0x87, 0xc3, 0x93, 0x41, 0xc9, 0xce, 0xe8, 0xcc, 0x5e, 0xf0,
	0x34, 0x35, 0x9a, 0x87, 0xac, 0x72, 0x5d, 0xab, 0x46, 0x46, 0x01, 0x4f, 0x9e, 0x8b, 0xd7, 0xc0,
	0x6b, 0xf3, 0x68, 0x4c, 0xf1, 0x9d, 0x8a, 0x4c, 0xbe, 0xde, 0x3d, 0xa4, 0x8a, 0xd4, 0xff, 0x98,
	0x56, 0x4d, 0xd5, 0xe4, 0xaf, 0x97, 0x85, 0xc9, 0xd9, 0x2a, 0x08, 0xa8, 0x94, 0x98, 0x7e, 0xbb,
	0x22, 0xc6, 0x05, 0x38, 0x97, 0xab, 0xf5, 0x25, 0xee, 0xe9, 0x5b, 0x7d, 0x1a, 0x2a, 0xd8, 0xfe,
	0x9c, 0xfa, 0xdf, 0x96, 0x2c, 0x33, 0x1a, 0x73, 0x48, 0xcd, 0x4d, 0xb1, 0x34, 0xcd, 0x0a, 0xe7,
	0x6b, 0x80, 0x1f, 0xa8, 0x1a, 0x29, 0x1a, 0x6b, 0x02, 0xd3, 0xb3, 0xa5, 0x39, 0x45, 0xeb, 0x94,
	0x3e, 0x3f, 0x70, 0x83, 0xe4, 0x9b, 0xbd, 0x2b, 0xca, 0x5f, 0x9b, 0x51, 0x0c, 0xf9, 0xfb, 0x46,
	0xf9, 0x0a, 0x8e, 0x75, 0x94, 0xa2, 0x73, 0xe6, 0xce, 0x55, 0x54, 0xfd, 0xf7, 0xd4, 0x7f, 0xf3,
	0xd2, 0xd8, 0x70, 0xfb, 0xb0, 0x2f, 0x68, 0xca, 0x85, 0x32, 0x65, 0xd7, 0x71, 0x09, 0xcb, 0x57,
	0xb3, 0x22, 0xa0, 0x5e, 0x4d, 0x1d, 0x70, 0xe3, 0x3c, 0x56, 0x70, 0xbf, 0x9b, 0xfa, 0xaf, 0xcb,
	0xa6, 0x86, 0xf9, 0xd3, 0x32, 0xb3, 0x3b, 0x78, 0x71, 0x71, 0x2b, 0xe2, 0xc5, 0xd0, 0x2b, 0x0a,
	0x31, 0xa1, 0x8a, 0x5f, 0x68, 0xad, 0xb8, 0x57, 0xe5, 0xbf, 0xec, 0x67, 0x00, 0xf6, 0x87, 0x6e,
	0x1e, 0x27, 0xae, 0xb3, 0x39, 0xdf, 0xa5, 0x1f, 0xed, 0x2e, 0xba, 0xdf, 0xa6, 0x5f, 0xa6, 0x70,
	0xbc, 0xfb, 0xc1, 0xf4, 0x66, 0xe3, 0xc9, 0xcc, 0xdc, 0x2c, 0x16, 0x46, 0xd4, 0xa9, 0xe9, 0x3f,
	0x9d, 0x93, 0x23, 0xf8, 0xe8, 0x58, 0xb2, 0x74, 0xf6, 0xf4, 0x71, 0x73, 0x11, 0xcd, 0x21, 0xbc,
	0x99, 0x4e, 0x5d, 0xff, 0x49, 0x4f, 0xb7, 0x71, 0x69, 0xd6, 0x9c, 0x86, 0x4e, 0xe3, 0xbf, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x7c, 0xef, 0x0e, 0xfa, 0x80, 0x08, 0x00, 0x00,
}
