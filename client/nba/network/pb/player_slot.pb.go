// Code generated by protoc-gen-go.
// source: player_slot.proto
// DO NOT EDIT!

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type UpdatePlayerSlotS2C_MsgID int32

const (
	UpdatePlayerSlotS2C_eMsgID UpdatePlayerSlotS2C_MsgID = 2313
)

var UpdatePlayerSlotS2C_MsgID_name = map[int32]string{
	2313: "eMsgID",
}
var UpdatePlayerSlotS2C_MsgID_value = map[string]int32{
	"eMsgID": 2313,
}

func (x UpdatePlayerSlotS2C_MsgID) Enum() *UpdatePlayerSlotS2C_MsgID {
	p := new(UpdatePlayerSlotS2C_MsgID)
	*p = x
	return p
}
func (x UpdatePlayerSlotS2C_MsgID) String() string {
	return proto.EnumName(UpdatePlayerSlotS2C_MsgID_name, int32(x))
}
func (x *UpdatePlayerSlotS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(UpdatePlayerSlotS2C_MsgID_value, data, "UpdatePlayerSlotS2C_MsgID")
	if err != nil {
		return err
	}
	*x = UpdatePlayerSlotS2C_MsgID(value)
	return nil
}
func (UpdatePlayerSlotS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor49, []int{1, 0}
}

type SwapPlayerSlotC2S_MsgID int32

const (
	SwapPlayerSlotC2S_eMsgID SwapPlayerSlotC2S_MsgID = 2307
)

var SwapPlayerSlotC2S_MsgID_name = map[int32]string{
	2307: "eMsgID",
}
var SwapPlayerSlotC2S_MsgID_value = map[string]int32{
	"eMsgID": 2307,
}

func (x SwapPlayerSlotC2S_MsgID) Enum() *SwapPlayerSlotC2S_MsgID {
	p := new(SwapPlayerSlotC2S_MsgID)
	*p = x
	return p
}
func (x SwapPlayerSlotC2S_MsgID) String() string {
	return proto.EnumName(SwapPlayerSlotC2S_MsgID_name, int32(x))
}
func (x *SwapPlayerSlotC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SwapPlayerSlotC2S_MsgID_value, data, "SwapPlayerSlotC2S_MsgID")
	if err != nil {
		return err
	}
	*x = SwapPlayerSlotC2S_MsgID(value)
	return nil
}
func (SwapPlayerSlotC2S_MsgID) EnumDescriptor() ([]byte, []int) { return fileDescriptor49, []int{2, 0} }

type SwapPlayerSlotS2C_MsgID int32

const (
	SwapPlayerSlotS2C_eMsgID SwapPlayerSlotS2C_MsgID = 2307
)

var SwapPlayerSlotS2C_MsgID_name = map[int32]string{
	2307: "eMsgID",
}
var SwapPlayerSlotS2C_MsgID_value = map[string]int32{
	"eMsgID": 2307,
}

func (x SwapPlayerSlotS2C_MsgID) Enum() *SwapPlayerSlotS2C_MsgID {
	p := new(SwapPlayerSlotS2C_MsgID)
	*p = x
	return p
}
func (x SwapPlayerSlotS2C_MsgID) String() string {
	return proto.EnumName(SwapPlayerSlotS2C_MsgID_name, int32(x))
}
func (x *SwapPlayerSlotS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SwapPlayerSlotS2C_MsgID_value, data, "SwapPlayerSlotS2C_MsgID")
	if err != nil {
		return err
	}
	*x = SwapPlayerSlotS2C_MsgID(value)
	return nil
}
func (SwapPlayerSlotS2C_MsgID) EnumDescriptor() ([]byte, []int) { return fileDescriptor49, []int{3, 0} }

// 球员槽
type PlayerSlot struct {
	// 序号
	Index *int32 `protobuf:"varint,1,opt,name=index" json:"index,omitempty"`
	// 等级
	Level *int32 `protobuf:"varint,2,opt,name=level" json:"level,omitempty"`
	// 等级经验
	Exp *int32 `protobuf:"varint,3,opt,name=exp" json:"exp,omitempty"`
	// 阶级
	ClassInfo *PlayerClass `protobuf:"bytes,4,opt,name=classInfo" json:"classInfo,omitempty"`
	// 球员身上的装备
	Equipments       []int64 `protobuf:"varint,10,rep,name=equipments" json:"equipments,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PlayerSlot) Reset()                    { *m = PlayerSlot{} }
func (m *PlayerSlot) String() string            { return proto.CompactTextString(m) }
func (*PlayerSlot) ProtoMessage()               {}
func (*PlayerSlot) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{0} }

func (m *PlayerSlot) GetIndex() int32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *PlayerSlot) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *PlayerSlot) GetExp() int32 {
	if m != nil && m.Exp != nil {
		return *m.Exp
	}
	return 0
}

func (m *PlayerSlot) GetClassInfo() *PlayerClass {
	if m != nil {
		return m.ClassInfo
	}
	return nil
}

func (m *PlayerSlot) GetEquipments() []int64 {
	if m != nil {
		return m.Equipments
	}
	return nil
}

// 更新球员槽
type UpdatePlayerSlotS2C struct {
	// 球员槽列表
	SlotList         []*PlayerSlot `protobuf:"bytes,1,rep,name=slotList" json:"slotList,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *UpdatePlayerSlotS2C) Reset()                    { *m = UpdatePlayerSlotS2C{} }
func (m *UpdatePlayerSlotS2C) String() string            { return proto.CompactTextString(m) }
func (*UpdatePlayerSlotS2C) ProtoMessage()               {}
func (*UpdatePlayerSlotS2C) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{1} }

func (m *UpdatePlayerSlotS2C) GetSlotList() []*PlayerSlot {
	if m != nil {
		return m.SlotList
	}
	return nil
}

// 交换球员槽
type SwapPlayerSlotC2S struct {
	Slots            []int32 `protobuf:"varint,1,rep,name=slots" json:"slots,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SwapPlayerSlotC2S) Reset()                    { *m = SwapPlayerSlotC2S{} }
func (m *SwapPlayerSlotC2S) String() string            { return proto.CompactTextString(m) }
func (*SwapPlayerSlotC2S) ProtoMessage()               {}
func (*SwapPlayerSlotC2S) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{2} }

func (m *SwapPlayerSlotC2S) GetSlots() []int32 {
	if m != nil {
		return m.Slots
	}
	return nil
}

// 交换球员槽
type SwapPlayerSlotS2C struct {
	// 球员槽列表
	SlotList         []*PlayerSlot `protobuf:"bytes,1,rep,name=slotList" json:"slotList,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *SwapPlayerSlotS2C) Reset()                    { *m = SwapPlayerSlotS2C{} }
func (m *SwapPlayerSlotS2C) String() string            { return proto.CompactTextString(m) }
func (*SwapPlayerSlotS2C) ProtoMessage()               {}
func (*SwapPlayerSlotS2C) Descriptor() ([]byte, []int) { return fileDescriptor49, []int{3} }

func (m *SwapPlayerSlotS2C) GetSlotList() []*PlayerSlot {
	if m != nil {
		return m.SlotList
	}
	return nil
}

func init() {
	proto.RegisterType((*PlayerSlot)(nil), "PlayerSlot")
	proto.RegisterType((*UpdatePlayerSlotS2C)(nil), "UpdatePlayerSlotS2C")
	proto.RegisterType((*SwapPlayerSlotC2S)(nil), "SwapPlayerSlotC2S")
	proto.RegisterType((*SwapPlayerSlotS2C)(nil), "SwapPlayerSlotS2C")
	proto.RegisterEnum("UpdatePlayerSlotS2C_MsgID", UpdatePlayerSlotS2C_MsgID_name, UpdatePlayerSlotS2C_MsgID_value)
	proto.RegisterEnum("SwapPlayerSlotC2S_MsgID", SwapPlayerSlotC2S_MsgID_name, SwapPlayerSlotC2S_MsgID_value)
	proto.RegisterEnum("SwapPlayerSlotS2C_MsgID", SwapPlayerSlotS2C_MsgID_name, SwapPlayerSlotS2C_MsgID_value)
}

func init() { proto.RegisterFile("player_slot.proto", fileDescriptor49) }

var fileDescriptor49 = []byte{
	// 230 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x12, 0x2c, 0xc8, 0x49, 0xac,
	0x4c, 0x2d, 0x8a, 0x2f, 0xce, 0xc9, 0x2f, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x97, 0xe2, 0x49,
	0xce, 0xcf, 0xcd, 0xcd, 0xcf, 0x83, 0xf0, 0x94, 0x72, 0xb8, 0xb8, 0x02, 0xc0, 0x4a, 0x82, 0x81,
	0x2a, 0x84, 0x78, 0xb9, 0x58, 0x33, 0xf3, 0x52, 0x52, 0x2b, 0x24, 0x18, 0x15, 0x18, 0x35, 0x58,
	0x41, 0xdc, 0x9c, 0xd4, 0xb2, 0xd4, 0x1c, 0x09, 0x26, 0x30, 0x97, 0x9b, 0x8b, 0x39, 0xb5, 0xa2,
	0x40, 0x82, 0x19, 0xcc, 0x91, 0xe7, 0xe2, 0x4c, 0xce, 0x49, 0x2c, 0x2e, 0xf6, 0xcc, 0x4b, 0xcb,
	0x97, 0x60, 0x01, 0x0a, 0x71, 0x1b, 0xf1, 0xe8, 0x41, 0x8c, 0x72, 0x06, 0x89, 0x0b, 0x09, 0x71,
	0x71, 0xa5, 0x16, 0x96, 0x66, 0x16, 0xe4, 0xa6, 0xe6, 0x95, 0x14, 0x4b, 0x70, 0x29, 0x30, 0x6b,
	0x30, 0x2b, 0x79, 0x71, 0x09, 0x87, 0x16, 0xa4, 0x24, 0x96, 0xa4, 0x22, 0xec, 0x0c, 0x36, 0x72,
	0x16, 0x92, 0xe5, 0xe2, 0x00, 0x39, 0xd0, 0x27, 0xb3, 0xb8, 0x04, 0x68, 0x33, 0x33, 0xd0, 0x28,
	0x6e, 0x3d, 0x84, 0x0a, 0x25, 0x11, 0x2e, 0x56, 0xdf, 0xe2, 0x74, 0x4f, 0x17, 0xa0, 0x03, 0xd8,
	0x52, 0xc1, 0x2c, 0x81, 0x4e, 0x21, 0x25, 0x0b, 0x2e, 0xc1, 0xe0, 0xf2, 0xc4, 0x02, 0x84, 0x3a,
	0x67, 0xa3, 0x60, 0x90, 0x8b, 0x41, 0x26, 0x15, 0x83, 0x8d, 0x61, 0xc5, 0xa6, 0xb3, 0x59, 0x48,
	0xc9, 0x03, 0x5d, 0x27, 0x79, 0x6e, 0x68, 0x16, 0x02, 0x04, 0x00, 0x00, 0xff, 0xff, 0xf3, 0x14,
	0xf0, 0x16, 0x5f, 0x01, 0x00, 0x00,
}
