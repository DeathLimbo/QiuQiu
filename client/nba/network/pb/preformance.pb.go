// Code generated by protoc-gen-go.
// source: preformance.proto
// DO NOT EDIT!

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type GamerGetPerformanceDataC2S_MsgID int32

const (
	GamerGetPerformanceDataC2S_eMsgID GamerGetPerformanceDataC2S_MsgID = 790
)

var GamerGetPerformanceDataC2S_MsgID_name = map[int32]string{
	790: "eMsgID",
}
var GamerGetPerformanceDataC2S_MsgID_value = map[string]int32{
	"eMsgID": 790,
}

func (x GamerGetPerformanceDataC2S_MsgID) Enum() *GamerGetPerformanceDataC2S_MsgID {
	p := new(GamerGetPerformanceDataC2S_MsgID)
	*p = x
	return p
}
func (x GamerGetPerformanceDataC2S_MsgID) String() string {
	return proto.EnumName(GamerGetPerformanceDataC2S_MsgID_name, int32(x))
}
func (x *GamerGetPerformanceDataC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GamerGetPerformanceDataC2S_MsgID_value, data, "GamerGetPerformanceDataC2S_MsgID")
	if err != nil {
		return err
	}
	*x = GamerGetPerformanceDataC2S_MsgID(value)
	return nil
}
func (GamerGetPerformanceDataC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor51, []int{2, 0}
}

type GamerGetPerformanceDataS2C_MsgID int32

const (
	GamerGetPerformanceDataS2C_eMsgID GamerGetPerformanceDataS2C_MsgID = 790
)

var GamerGetPerformanceDataS2C_MsgID_name = map[int32]string{
	790: "eMsgID",
}
var GamerGetPerformanceDataS2C_MsgID_value = map[string]int32{
	"eMsgID": 790,
}

func (x GamerGetPerformanceDataS2C_MsgID) Enum() *GamerGetPerformanceDataS2C_MsgID {
	p := new(GamerGetPerformanceDataS2C_MsgID)
	*p = x
	return p
}
func (x GamerGetPerformanceDataS2C_MsgID) String() string {
	return proto.EnumName(GamerGetPerformanceDataS2C_MsgID_name, int32(x))
}
func (x *GamerGetPerformanceDataS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GamerGetPerformanceDataS2C_MsgID_value, data, "GamerGetPerformanceDataS2C_MsgID")
	if err != nil {
		return err
	}
	*x = GamerGetPerformanceDataS2C_MsgID(value)
	return nil
}
func (GamerGetPerformanceDataS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor51, []int{3, 0}
}

type GamerSetJumpSquadTagC2S_MsgID int32

const (
	GamerSetJumpSquadTagC2S_eMsgID GamerSetJumpSquadTagC2S_MsgID = 791
)

var GamerSetJumpSquadTagC2S_MsgID_name = map[int32]string{
	791: "eMsgID",
}
var GamerSetJumpSquadTagC2S_MsgID_value = map[string]int32{
	"eMsgID": 791,
}

func (x GamerSetJumpSquadTagC2S_MsgID) Enum() *GamerSetJumpSquadTagC2S_MsgID {
	p := new(GamerSetJumpSquadTagC2S_MsgID)
	*p = x
	return p
}
func (x GamerSetJumpSquadTagC2S_MsgID) String() string {
	return proto.EnumName(GamerSetJumpSquadTagC2S_MsgID_name, int32(x))
}
func (x *GamerSetJumpSquadTagC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GamerSetJumpSquadTagC2S_MsgID_value, data, "GamerSetJumpSquadTagC2S_MsgID")
	if err != nil {
		return err
	}
	*x = GamerSetJumpSquadTagC2S_MsgID(value)
	return nil
}
func (GamerSetJumpSquadTagC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor51, []int{4, 0}
}

type GamerPerformanceSweepC2S_MsgID int32

const (
	GamerPerformanceSweepC2S_eMsgID GamerPerformanceSweepC2S_MsgID = 792
)

var GamerPerformanceSweepC2S_MsgID_name = map[int32]string{
	792: "eMsgID",
}
var GamerPerformanceSweepC2S_MsgID_value = map[string]int32{
	"eMsgID": 792,
}

func (x GamerPerformanceSweepC2S_MsgID) Enum() *GamerPerformanceSweepC2S_MsgID {
	p := new(GamerPerformanceSweepC2S_MsgID)
	*p = x
	return p
}
func (x GamerPerformanceSweepC2S_MsgID) String() string {
	return proto.EnumName(GamerPerformanceSweepC2S_MsgID_name, int32(x))
}
func (x *GamerPerformanceSweepC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GamerPerformanceSweepC2S_MsgID_value, data, "GamerPerformanceSweepC2S_MsgID")
	if err != nil {
		return err
	}
	*x = GamerPerformanceSweepC2S_MsgID(value)
	return nil
}
func (GamerPerformanceSweepC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor51, []int{5, 0}
}

type GamerPerformanceSweepS2C_MsgID int32

const (
	GamerPerformanceSweepS2C_eMsgID GamerPerformanceSweepS2C_MsgID = 792
)

var GamerPerformanceSweepS2C_MsgID_name = map[int32]string{
	792: "eMsgID",
}
var GamerPerformanceSweepS2C_MsgID_value = map[string]int32{
	"eMsgID": 792,
}

func (x GamerPerformanceSweepS2C_MsgID) Enum() *GamerPerformanceSweepS2C_MsgID {
	p := new(GamerPerformanceSweepS2C_MsgID)
	*p = x
	return p
}
func (x GamerPerformanceSweepS2C_MsgID) String() string {
	return proto.EnumName(GamerPerformanceSweepS2C_MsgID_name, int32(x))
}
func (x *GamerPerformanceSweepS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GamerPerformanceSweepS2C_MsgID_value, data, "GamerPerformanceSweepS2C_MsgID")
	if err != nil {
		return err
	}
	*x = GamerPerformanceSweepS2C_MsgID(value)
	return nil
}
func (GamerPerformanceSweepS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor51, []int{6, 0}
}

type GamerRefreshPerformanceChapterInfoS2C_MsgID int32

const (
	GamerRefreshPerformanceChapterInfoS2C_eMsgID GamerRefreshPerformanceChapterInfoS2C_MsgID = 793
)

var GamerRefreshPerformanceChapterInfoS2C_MsgID_name = map[int32]string{
	793: "eMsgID",
}
var GamerRefreshPerformanceChapterInfoS2C_MsgID_value = map[string]int32{
	"eMsgID": 793,
}

func (x GamerRefreshPerformanceChapterInfoS2C_MsgID) Enum() *GamerRefreshPerformanceChapterInfoS2C_MsgID {
	p := new(GamerRefreshPerformanceChapterInfoS2C_MsgID)
	*p = x
	return p
}
func (x GamerRefreshPerformanceChapterInfoS2C_MsgID) String() string {
	return proto.EnumName(GamerRefreshPerformanceChapterInfoS2C_MsgID_name, int32(x))
}
func (x *GamerRefreshPerformanceChapterInfoS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GamerRefreshPerformanceChapterInfoS2C_MsgID_value, data, "GamerRefreshPerformanceChapterInfoS2C_MsgID")
	if err != nil {
		return err
	}
	*x = GamerRefreshPerformanceChapterInfoS2C_MsgID(value)
	return nil
}
func (GamerRefreshPerformanceChapterInfoS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor51, []int{7, 0}
}

// 表演赛关卡数据
type PerformanceChapterInfo struct {
	// 关卡id(配置表索引id)
	ChapterId *int32 `protobuf:"varint,1,opt,name=chapterId" json:"chapterId,omitempty"`
	// 历史最高星数
	HistoryMaxStar *int32 `protobuf:"varint,2,opt,name=historyMaxStar" json:"historyMaxStar,omitempty"`
	// 是否通关（通关后可以扫荡）
	IsPass           *bool  `protobuf:"varint,3,opt,name=isPass" json:"isPass,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *PerformanceChapterInfo) Reset()                    { *m = PerformanceChapterInfo{} }
func (m *PerformanceChapterInfo) String() string            { return proto.CompactTextString(m) }
func (*PerformanceChapterInfo) ProtoMessage()               {}
func (*PerformanceChapterInfo) Descriptor() ([]byte, []int) { return fileDescriptor51, []int{0} }

func (m *PerformanceChapterInfo) GetChapterId() int32 {
	if m != nil && m.ChapterId != nil {
		return *m.ChapterId
	}
	return 0
}

func (m *PerformanceChapterInfo) GetHistoryMaxStar() int32 {
	if m != nil && m.HistoryMaxStar != nil {
		return *m.HistoryMaxStar
	}
	return 0
}

func (m *PerformanceChapterInfo) GetIsPass() bool {
	if m != nil && m.IsPass != nil {
		return *m.IsPass
	}
	return false
}

// 表演赛数据
type PerformanceInfo struct {
	// 表演赛类型
	PerformanceType *PerformanceType `protobuf:"varint,1,opt,name=performanceType,enum=PerformanceType" json:"performanceType,omitempty"`
	// 关卡列表
	ChapterInfos []*PerformanceChapterInfo `protobuf:"bytes,2,rep,name=chapterInfos" json:"chapterInfos,omitempty"`
	// 当日已挑战次数
	DunkCount *int32 `protobuf:"varint,3,opt,name=dunkCount" json:"dunkCount,omitempty"`
	// 跳过阵容设置标记
	Tag *bool `protobuf:"varint,4,opt,name=tag" json:"tag,omitempty"`
	// 下次刷新挑战次数的时间搓
	NextRefreshDunkCountTime *int64 `protobuf:"varint,5,opt,name=nextRefreshDunkCountTime" json:"nextRefreshDunkCountTime,omitempty"`
	// 终身累计参与多少次
	AllJoinSum       *int32 `protobuf:"varint,6,opt,name=allJoinSum" json:"allJoinSum,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *PerformanceInfo) Reset()                    { *m = PerformanceInfo{} }
func (m *PerformanceInfo) String() string            { return proto.CompactTextString(m) }
func (*PerformanceInfo) ProtoMessage()               {}
func (*PerformanceInfo) Descriptor() ([]byte, []int) { return fileDescriptor51, []int{1} }

func (m *PerformanceInfo) GetPerformanceType() PerformanceType {
	if m != nil && m.PerformanceType != nil {
		return *m.PerformanceType
	}
	return PerformanceType_PFT_ThreeDunk
}

func (m *PerformanceInfo) GetChapterInfos() []*PerformanceChapterInfo {
	if m != nil {
		return m.ChapterInfos
	}
	return nil
}

func (m *PerformanceInfo) GetDunkCount() int32 {
	if m != nil && m.DunkCount != nil {
		return *m.DunkCount
	}
	return 0
}

func (m *PerformanceInfo) GetTag() bool {
	if m != nil && m.Tag != nil {
		return *m.Tag
	}
	return false
}

func (m *PerformanceInfo) GetNextRefreshDunkCountTime() int64 {
	if m != nil && m.NextRefreshDunkCountTime != nil {
		return *m.NextRefreshDunkCountTime
	}
	return 0
}

func (m *PerformanceInfo) GetAllJoinSum() int32 {
	if m != nil && m.AllJoinSum != nil {
		return *m.AllJoinSum
	}
	return 0
}

// 获取玩家表演赛数据（客户端请求）
type GamerGetPerformanceDataC2S struct {
	PerformanceType  *PerformanceType `protobuf:"varint,1,opt,name=performanceType,enum=PerformanceType" json:"performanceType,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *GamerGetPerformanceDataC2S) Reset()                    { *m = GamerGetPerformanceDataC2S{} }
func (m *GamerGetPerformanceDataC2S) String() string            { return proto.CompactTextString(m) }
func (*GamerGetPerformanceDataC2S) ProtoMessage()               {}
func (*GamerGetPerformanceDataC2S) Descriptor() ([]byte, []int) { return fileDescriptor51, []int{2} }

func (m *GamerGetPerformanceDataC2S) GetPerformanceType() PerformanceType {
	if m != nil && m.PerformanceType != nil {
		return *m.PerformanceType
	}
	return PerformanceType_PFT_ThreeDunk
}

// 获取玩家表演赛数据（服务器应答）
type GamerGetPerformanceDataS2C struct {
	PerformanceType  *PerformanceType          `protobuf:"varint,1,opt,name=performanceType,enum=PerformanceType" json:"performanceType,omitempty"`
	ChapterInfos     []*PerformanceChapterInfo `protobuf:"bytes,2,rep,name=chapterInfos" json:"chapterInfos,omitempty"`
	DunkCount        *int32                    `protobuf:"varint,3,opt,name=dunkCount" json:"dunkCount,omitempty"`
	Tag              *bool                     `protobuf:"varint,4,opt,name=tag" json:"tag,omitempty"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *GamerGetPerformanceDataS2C) Reset()                    { *m = GamerGetPerformanceDataS2C{} }
func (m *GamerGetPerformanceDataS2C) String() string            { return proto.CompactTextString(m) }
func (*GamerGetPerformanceDataS2C) ProtoMessage()               {}
func (*GamerGetPerformanceDataS2C) Descriptor() ([]byte, []int) { return fileDescriptor51, []int{3} }

func (m *GamerGetPerformanceDataS2C) GetPerformanceType() PerformanceType {
	if m != nil && m.PerformanceType != nil {
		return *m.PerformanceType
	}
	return PerformanceType_PFT_ThreeDunk
}

func (m *GamerGetPerformanceDataS2C) GetChapterInfos() []*PerformanceChapterInfo {
	if m != nil {
		return m.ChapterInfos
	}
	return nil
}

func (m *GamerGetPerformanceDataS2C) GetDunkCount() int32 {
	if m != nil && m.DunkCount != nil {
		return *m.DunkCount
	}
	return 0
}

func (m *GamerGetPerformanceDataS2C) GetTag() bool {
	if m != nil && m.Tag != nil {
		return *m.Tag
	}
	return false
}

// 设置是否设置阵容跳过标记（客户端请求）
type GamerSetJumpSquadTagC2S struct {
	PerformanceType  *PerformanceType `protobuf:"varint,1,opt,name=performanceType,enum=PerformanceType" json:"performanceType,omitempty"`
	Tag              *bool            `protobuf:"varint,2,opt,name=tag" json:"tag,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *GamerSetJumpSquadTagC2S) Reset()                    { *m = GamerSetJumpSquadTagC2S{} }
func (m *GamerSetJumpSquadTagC2S) String() string            { return proto.CompactTextString(m) }
func (*GamerSetJumpSquadTagC2S) ProtoMessage()               {}
func (*GamerSetJumpSquadTagC2S) Descriptor() ([]byte, []int) { return fileDescriptor51, []int{4} }

func (m *GamerSetJumpSquadTagC2S) GetPerformanceType() PerformanceType {
	if m != nil && m.PerformanceType != nil {
		return *m.PerformanceType
	}
	return PerformanceType_PFT_ThreeDunk
}

func (m *GamerSetJumpSquadTagC2S) GetTag() bool {
	if m != nil && m.Tag != nil {
		return *m.Tag
	}
	return false
}

// 扫荡（客户端请求）
type GamerPerformanceSweepC2S struct {
	ChapterId        *int32 `protobuf:"varint,1,opt,name=chapterId" json:"chapterId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GamerPerformanceSweepC2S) Reset()                    { *m = GamerPerformanceSweepC2S{} }
func (m *GamerPerformanceSweepC2S) String() string            { return proto.CompactTextString(m) }
func (*GamerPerformanceSweepC2S) ProtoMessage()               {}
func (*GamerPerformanceSweepC2S) Descriptor() ([]byte, []int) { return fileDescriptor51, []int{5} }

func (m *GamerPerformanceSweepC2S) GetChapterId() int32 {
	if m != nil && m.ChapterId != nil {
		return *m.ChapterId
	}
	return 0
}

// 扫荡（服务器应答）
type GamerPerformanceSweepS2C struct {
	PerformanceType  *PerformanceType `protobuf:"varint,1,opt,name=performanceType,enum=PerformanceType" json:"performanceType,omitempty"`
	DunkCount        *int32           `protobuf:"varint,2,opt,name=dunkCount" json:"dunkCount,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *GamerPerformanceSweepS2C) Reset()                    { *m = GamerPerformanceSweepS2C{} }
func (m *GamerPerformanceSweepS2C) String() string            { return proto.CompactTextString(m) }
func (*GamerPerformanceSweepS2C) ProtoMessage()               {}
func (*GamerPerformanceSweepS2C) Descriptor() ([]byte, []int) { return fileDescriptor51, []int{6} }

func (m *GamerPerformanceSweepS2C) GetPerformanceType() PerformanceType {
	if m != nil && m.PerformanceType != nil {
		return *m.PerformanceType
	}
	return PerformanceType_PFT_ThreeDunk
}

func (m *GamerPerformanceSweepS2C) GetDunkCount() int32 {
	if m != nil && m.DunkCount != nil {
		return *m.DunkCount
	}
	return 0
}

// 比赛结束刷新关卡数据，通知客户端
type GamerRefreshPerformanceChapterInfoS2C struct {
	PerformanceType  *PerformanceType          `protobuf:"varint,1,opt,name=performanceType,enum=PerformanceType" json:"performanceType,omitempty"`
	ChapterInfos     []*PerformanceChapterInfo `protobuf:"bytes,2,rep,name=chapterInfos" json:"chapterInfos,omitempty"`
	DunkCount        *int32                    `protobuf:"varint,3,opt,name=dunkCount" json:"dunkCount,omitempty"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *GamerRefreshPerformanceChapterInfoS2C) Reset()         { *m = GamerRefreshPerformanceChapterInfoS2C{} }
func (m *GamerRefreshPerformanceChapterInfoS2C) String() string { return proto.CompactTextString(m) }
func (*GamerRefreshPerformanceChapterInfoS2C) ProtoMessage()    {}
func (*GamerRefreshPerformanceChapterInfoS2C) Descriptor() ([]byte, []int) {
	return fileDescriptor51, []int{7}
}

func (m *GamerRefreshPerformanceChapterInfoS2C) GetPerformanceType() PerformanceType {
	if m != nil && m.PerformanceType != nil {
		return *m.PerformanceType
	}
	return PerformanceType_PFT_ThreeDunk
}

func (m *GamerRefreshPerformanceChapterInfoS2C) GetChapterInfos() []*PerformanceChapterInfo {
	if m != nil {
		return m.ChapterInfos
	}
	return nil
}

func (m *GamerRefreshPerformanceChapterInfoS2C) GetDunkCount() int32 {
	if m != nil && m.DunkCount != nil {
		return *m.DunkCount
	}
	return 0
}

func init() {
	proto.RegisterType((*PerformanceChapterInfo)(nil), "PerformanceChapterInfo")
	proto.RegisterType((*PerformanceInfo)(nil), "PerformanceInfo")
	proto.RegisterType((*GamerGetPerformanceDataC2S)(nil), "GamerGetPerformanceDataC2S")
	proto.RegisterType((*GamerGetPerformanceDataS2C)(nil), "GamerGetPerformanceDataS2C")
	proto.RegisterType((*GamerSetJumpSquadTagC2S)(nil), "GamerSetJumpSquadTagC2S")
	proto.RegisterType((*GamerPerformanceSweepC2S)(nil), "GamerPerformanceSweepC2S")
	proto.RegisterType((*GamerPerformanceSweepS2C)(nil), "GamerPerformanceSweepS2C")
	proto.RegisterType((*GamerRefreshPerformanceChapterInfoS2C)(nil), "GamerRefreshPerformanceChapterInfoS2C")
	proto.RegisterEnum("GamerGetPerformanceDataC2S_MsgID", GamerGetPerformanceDataC2S_MsgID_name, GamerGetPerformanceDataC2S_MsgID_value)
	proto.RegisterEnum("GamerGetPerformanceDataS2C_MsgID", GamerGetPerformanceDataS2C_MsgID_name, GamerGetPerformanceDataS2C_MsgID_value)
	proto.RegisterEnum("GamerSetJumpSquadTagC2S_MsgID", GamerSetJumpSquadTagC2S_MsgID_name, GamerSetJumpSquadTagC2S_MsgID_value)
	proto.RegisterEnum("GamerPerformanceSweepC2S_MsgID", GamerPerformanceSweepC2S_MsgID_name, GamerPerformanceSweepC2S_MsgID_value)
	proto.RegisterEnum("GamerPerformanceSweepS2C_MsgID", GamerPerformanceSweepS2C_MsgID_name, GamerPerformanceSweepS2C_MsgID_value)
	proto.RegisterEnum("GamerRefreshPerformanceChapterInfoS2C_MsgID", GamerRefreshPerformanceChapterInfoS2C_MsgID_name, GamerRefreshPerformanceChapterInfoS2C_MsgID_value)
}

func init() { proto.RegisterFile("preformance.proto", fileDescriptor51) }

var fileDescriptor51 = []byte{
	// 370 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xc4, 0x92, 0xcf, 0x6a, 0xea, 0x40,
	0x14, 0xc6, 0x89, 0xb9, 0x09, 0xf7, 0x1e, 0x2f, 0xfe, 0x09, 0x45, 0x07, 0x57, 0x12, 0x28, 0xd8,
	0x45, 0x5d, 0xe4, 0x15, 0x22, 0x88, 0x82, 0x20, 0x1d, 0xb7, 0x5d, 0x0c, 0xf1, 0x24, 0x86, 0x9a,
	0x99, 0x74, 0x32, 0xa1, 0xfa, 0x22, 0xfd, 0xf3, 0x0a, 0xa5, 0x2f, 0xd1, 0x37, 0x6b, 0x9c, 0x2a,
	0x2a, 0x35, 0x05, 0x37, 0xed, 0xee, 0x9c, 0xc3, 0xc9, 0xf7, 0xfd, 0xf2, 0xcd, 0x81, 0x66, 0x2a,
	0x31, 0x14, 0x32, 0x61, 0x3c, 0xc0, 0x7e, 0x2a, 0x85, 0x12, 0x9d, 0x6a, 0xc2, 0x02, 0x29, 0xb6,
	0x0d, 0x04, 0x82, 0x87, 0x9f, 0xb5, 0x4b, 0xa1, 0x35, 0x45, 0xb9, 0xdb, 0xf6, 0x17, 0x2c, 0x55,
	0x28, 0x47, 0x3c, 0x14, 0x4e, 0x13, 0xfe, 0x05, 0xdb, 0x76, 0x4e, 0x8c, 0xae, 0xd1, 0xb3, 0x9c,
	0x16, 0xd4, 0x16, 0x71, 0xa6, 0x84, 0x5c, 0x4f, 0xd8, 0x8a, 0x2a, 0x26, 0x49, 0x45, 0xcf, 0x6b,
	0x60, 0xc7, 0xd9, 0x94, 0x65, 0x19, 0x31, 0x8b, 0xfe, 0xaf, 0xfb, 0x6e, 0x40, 0xfd, 0x40, 0x55,
	0xcb, 0x5d, 0x41, 0x3d, 0xdd, 0x8f, 0x66, 0xeb, 0x14, 0xb5, 0x68, 0xcd, 0x6b, 0xf4, 0xa7, 0xc7,
	0x73, 0xe7, 0x1a, 0xfe, 0x07, 0x7b, 0x90, 0xac, 0x30, 0x31, 0x7b, 0x55, 0xaf, 0xdd, 0x2f, 0x07,
	0x9d, 0xe7, 0xfc, 0xce, 0x17, 0x39, 0x57, 0x1a, 0xc0, 0x72, 0xaa, 0x60, 0x2a, 0x16, 0x91, 0x3f,
	0x1b, 0x1a, 0xa7, 0x0b, 0x84, 0xe3, 0x4a, 0xdd, 0x60, 0x28, 0x31, 0x5b, 0x0c, 0x76, 0xab, 0xb3,
	0x38, 0x41, 0x62, 0x15, 0x1b, 0xa6, 0xe3, 0x00, 0xb0, 0xe5, 0x72, 0x2c, 0x62, 0x4e, 0xf3, 0x84,
	0xd8, 0x1b, 0x09, 0xf7, 0x16, 0x3a, 0x43, 0x96, 0xa0, 0x1c, 0xa2, 0x3a, 0xf0, 0x1d, 0x30, 0xc5,
	0x7c, 0x8f, 0x9e, 0xf1, 0x37, 0xee, 0x05, 0x58, 0x93, 0x2c, 0x1a, 0x0d, 0x0a, 0x28, 0x1b, 0x75,
	0xd5, 0x78, 0xb4, 0xdd, 0x37, 0xa3, 0x54, 0x9f, 0x7a, 0xfe, 0xef, 0xa5, 0x55, 0x82, 0x1b, 0x41,
	0x5b, 0xd3, 0x52, 0x54, 0xe3, 0x3c, 0x49, 0xe9, 0x7d, 0xce, 0xe6, 0x33, 0x16, 0x9d, 0x17, 0xc5,
	0xce, 0xa8, 0x52, 0x66, 0xf4, 0x64, 0xbb, 0x3e, 0x10, 0x6d, 0x74, 0xf0, 0x29, 0x7d, 0x40, 0x4c,
	0x37, 0x4e, 0x5f, 0x2f, 0xf2, 0x94, 0xc8, 0xb3, 0xed, 0xf2, 0x12, 0x91, 0x33, 0x93, 0x3d, 0x8a,
	0xaa, 0xf2, 0x8d, 0xdf, 0xab, 0x01, 0x97, 0xda, 0x70, 0x7b, 0x63, 0xa7, 0xa3, 0xff, 0xe9, 0x77,
	0x3d, 0x05, 0xfb, 0x62, 0x7f, 0x04, 0x00, 0x00, 0xff, 0xff, 0xa5, 0x85, 0x33, 0x8d, 0x1e, 0x04,
	0x00, 0x00,
}
