// Code generated by protoc-gen-go.
// source: guess_compete.proto
// DO NOT EDIT!

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type GuessEntryS2C_MsgID int32

const (
	GuessEntryS2C_eMsgID GuessEntryS2C_MsgID = 18689
)

var GuessEntryS2C_MsgID_name = map[int32]string{
	18689: "eMsgID",
}
var GuessEntryS2C_MsgID_value = map[string]int32{
	"eMsgID": 18689,
}

func (x GuessEntryS2C_MsgID) Enum() *GuessEntryS2C_MsgID {
	p := new(GuessEntryS2C_MsgID)
	*p = x
	return p
}
func (x GuessEntryS2C_MsgID) String() string {
	return proto.EnumName(GuessEntryS2C_MsgID_name, int32(x))
}
func (x *GuessEntryS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GuessEntryS2C_MsgID_value, data, "GuessEntryS2C_MsgID")
	if err != nil {
		return err
	}
	*x = GuessEntryS2C_MsgID(value)
	return nil
}
func (GuessEntryS2C_MsgID) EnumDescriptor() ([]byte, []int) { return fileDescriptor31, []int{0, 0} }

type GuessShopS2C_MsgID int32

const (
	GuessShopS2C_eMsgID GuessShopS2C_MsgID = 18690
)

var GuessShopS2C_MsgID_name = map[int32]string{
	18690: "eMsgID",
}
var GuessShopS2C_MsgID_value = map[string]int32{
	"eMsgID": 18690,
}

func (x GuessShopS2C_MsgID) Enum() *GuessShopS2C_MsgID {
	p := new(GuessShopS2C_MsgID)
	*p = x
	return p
}
func (x GuessShopS2C_MsgID) String() string {
	return proto.EnumName(GuessShopS2C_MsgID_name, int32(x))
}
func (x *GuessShopS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GuessShopS2C_MsgID_value, data, "GuessShopS2C_MsgID")
	if err != nil {
		return err
	}
	*x = GuessShopS2C_MsgID(value)
	return nil
}
func (GuessShopS2C_MsgID) EnumDescriptor() ([]byte, []int) { return fileDescriptor31, []int{3, 0} }

type GuessRecordS2C_MsgID int32

const (
	GuessRecordS2C_eMsgID GuessRecordS2C_MsgID = 18691
)

var GuessRecordS2C_MsgID_name = map[int32]string{
	18691: "eMsgID",
}
var GuessRecordS2C_MsgID_value = map[string]int32{
	"eMsgID": 18691,
}

func (x GuessRecordS2C_MsgID) Enum() *GuessRecordS2C_MsgID {
	p := new(GuessRecordS2C_MsgID)
	*p = x
	return p
}
func (x GuessRecordS2C_MsgID) String() string {
	return proto.EnumName(GuessRecordS2C_MsgID_name, int32(x))
}
func (x *GuessRecordS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GuessRecordS2C_MsgID_value, data, "GuessRecordS2C_MsgID")
	if err != nil {
		return err
	}
	*x = GuessRecordS2C_MsgID(value)
	return nil
}
func (GuessRecordS2C_MsgID) EnumDescriptor() ([]byte, []int) { return fileDescriptor31, []int{5, 0} }

type GuessBuyGiftC2S_MsgID int32

const (
	GuessBuyGiftC2S_eMsgID GuessBuyGiftC2S_MsgID = 18692
)

var GuessBuyGiftC2S_MsgID_name = map[int32]string{
	18692: "eMsgID",
}
var GuessBuyGiftC2S_MsgID_value = map[string]int32{
	"eMsgID": 18692,
}

func (x GuessBuyGiftC2S_MsgID) Enum() *GuessBuyGiftC2S_MsgID {
	p := new(GuessBuyGiftC2S_MsgID)
	*p = x
	return p
}
func (x GuessBuyGiftC2S_MsgID) String() string {
	return proto.EnumName(GuessBuyGiftC2S_MsgID_name, int32(x))
}
func (x *GuessBuyGiftC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GuessBuyGiftC2S_MsgID_value, data, "GuessBuyGiftC2S_MsgID")
	if err != nil {
		return err
	}
	*x = GuessBuyGiftC2S_MsgID(value)
	return nil
}
func (GuessBuyGiftC2S_MsgID) EnumDescriptor() ([]byte, []int) { return fileDescriptor31, []int{8, 0} }

type GuessBuyGiftS2C_MsgID int32

const (
	GuessBuyGiftS2C_eMsgID GuessBuyGiftS2C_MsgID = 18692
)

var GuessBuyGiftS2C_MsgID_name = map[int32]string{
	18692: "eMsgID",
}
var GuessBuyGiftS2C_MsgID_value = map[string]int32{
	"eMsgID": 18692,
}

func (x GuessBuyGiftS2C_MsgID) Enum() *GuessBuyGiftS2C_MsgID {
	p := new(GuessBuyGiftS2C_MsgID)
	*p = x
	return p
}
func (x GuessBuyGiftS2C_MsgID) String() string {
	return proto.EnumName(GuessBuyGiftS2C_MsgID_name, int32(x))
}
func (x *GuessBuyGiftS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GuessBuyGiftS2C_MsgID_value, data, "GuessBuyGiftS2C_MsgID")
	if err != nil {
		return err
	}
	*x = GuessBuyGiftS2C_MsgID(value)
	return nil
}
func (GuessBuyGiftS2C_MsgID) EnumDescriptor() ([]byte, []int) { return fileDescriptor31, []int{9, 0} }

type GuessSetMatchS2C_MsgID int32

const (
	GuessSetMatchS2C_eMsgID GuessSetMatchS2C_MsgID = 18693
)

var GuessSetMatchS2C_MsgID_name = map[int32]string{
	18693: "eMsgID",
}
var GuessSetMatchS2C_MsgID_value = map[string]int32{
	"eMsgID": 18693,
}

func (x GuessSetMatchS2C_MsgID) Enum() *GuessSetMatchS2C_MsgID {
	p := new(GuessSetMatchS2C_MsgID)
	*p = x
	return p
}
func (x GuessSetMatchS2C_MsgID) String() string {
	return proto.EnumName(GuessSetMatchS2C_MsgID_name, int32(x))
}
func (x *GuessSetMatchS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GuessSetMatchS2C_MsgID_value, data, "GuessSetMatchS2C_MsgID")
	if err != nil {
		return err
	}
	*x = GuessSetMatchS2C_MsgID(value)
	return nil
}
func (GuessSetMatchS2C_MsgID) EnumDescriptor() ([]byte, []int) { return fileDescriptor31, []int{10, 0} }

type GuessPartInS2C_MsgID int32

const (
	GuessPartInS2C_eMsgID GuessPartInS2C_MsgID = 18694
)

var GuessPartInS2C_MsgID_name = map[int32]string{
	18694: "eMsgID",
}
var GuessPartInS2C_MsgID_value = map[string]int32{
	"eMsgID": 18694,
}

func (x GuessPartInS2C_MsgID) Enum() *GuessPartInS2C_MsgID {
	p := new(GuessPartInS2C_MsgID)
	*p = x
	return p
}
func (x GuessPartInS2C_MsgID) String() string {
	return proto.EnumName(GuessPartInS2C_MsgID_name, int32(x))
}
func (x *GuessPartInS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GuessPartInS2C_MsgID_value, data, "GuessPartInS2C_MsgID")
	if err != nil {
		return err
	}
	*x = GuessPartInS2C_MsgID(value)
	return nil
}
func (GuessPartInS2C_MsgID) EnumDescriptor() ([]byte, []int) { return fileDescriptor31, []int{11, 0} }

type GuessPartInC2S_MsgID int32

const (
	GuessPartInC2S_eMsgID GuessPartInC2S_MsgID = 18694
)

var GuessPartInC2S_MsgID_name = map[int32]string{
	18694: "eMsgID",
}
var GuessPartInC2S_MsgID_value = map[string]int32{
	"eMsgID": 18694,
}

func (x GuessPartInC2S_MsgID) Enum() *GuessPartInC2S_MsgID {
	p := new(GuessPartInC2S_MsgID)
	*p = x
	return p
}
func (x GuessPartInC2S_MsgID) String() string {
	return proto.EnumName(GuessPartInC2S_MsgID_name, int32(x))
}
func (x *GuessPartInC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GuessPartInC2S_MsgID_value, data, "GuessPartInC2S_MsgID")
	if err != nil {
		return err
	}
	*x = GuessPartInC2S_MsgID(value)
	return nil
}
func (GuessPartInC2S_MsgID) EnumDescriptor() ([]byte, []int) { return fileDescriptor31, []int{12, 0} }

type GuessMatchUpdateS2C_MsgID int32

const (
	GuessMatchUpdateS2C_eMsgID GuessMatchUpdateS2C_MsgID = 18695
)

var GuessMatchUpdateS2C_MsgID_name = map[int32]string{
	18695: "eMsgID",
}
var GuessMatchUpdateS2C_MsgID_value = map[string]int32{
	"eMsgID": 18695,
}

func (x GuessMatchUpdateS2C_MsgID) Enum() *GuessMatchUpdateS2C_MsgID {
	p := new(GuessMatchUpdateS2C_MsgID)
	*p = x
	return p
}
func (x GuessMatchUpdateS2C_MsgID) String() string {
	return proto.EnumName(GuessMatchUpdateS2C_MsgID_name, int32(x))
}
func (x *GuessMatchUpdateS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GuessMatchUpdateS2C_MsgID_value, data, "GuessMatchUpdateS2C_MsgID")
	if err != nil {
		return err
	}
	*x = GuessMatchUpdateS2C_MsgID(value)
	return nil
}
func (GuessMatchUpdateS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor31, []int{13, 0}
}

// 上线下发数据
type GuessEntryS2C struct {
	GuessInfo        []*GuessInfo `protobuf:"bytes,1,rep,name=guessInfo" json:"guessInfo,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *GuessEntryS2C) Reset()                    { *m = GuessEntryS2C{} }
func (m *GuessEntryS2C) String() string            { return proto.CompactTextString(m) }
func (*GuessEntryS2C) ProtoMessage()               {}
func (*GuessEntryS2C) Descriptor() ([]byte, []int) { return fileDescriptor31, []int{0} }

func (m *GuessEntryS2C) GetGuessInfo() []*GuessInfo {
	if m != nil {
		return m.GuessInfo
	}
	return nil
}

// 比赛信息
type GuessInfo struct {
	Match            *GuessMatch `protobuf:"bytes,1,opt,name=match" json:"match,omitempty"`
	SupportTeam      *int32      `protobuf:"varint,2,opt,name=supportTeam" json:"supportTeam,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *GuessInfo) Reset()                    { *m = GuessInfo{} }
func (m *GuessInfo) String() string            { return proto.CompactTextString(m) }
func (*GuessInfo) ProtoMessage()               {}
func (*GuessInfo) Descriptor() ([]byte, []int) { return fileDescriptor31, []int{1} }

func (m *GuessInfo) GetMatch() *GuessMatch {
	if m != nil {
		return m.Match
	}
	return nil
}

func (m *GuessInfo) GetSupportTeam() int32 {
	if m != nil && m.SupportTeam != nil {
		return *m.SupportTeam
	}
	return 0
}

// 竞猜球队信息
type GuessTeam struct {
	TeamId           *int32 `protobuf:"varint,1,opt,name=teamId" json:"teamId,omitempty"`
	TeamScore        *int32 `protobuf:"varint,2,opt,name=teamScore" json:"teamScore,omitempty"`
	SupportNum       *int32 `protobuf:"varint,3,opt,name=supportNum" json:"supportNum,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GuessTeam) Reset()                    { *m = GuessTeam{} }
func (m *GuessTeam) String() string            { return proto.CompactTextString(m) }
func (*GuessTeam) ProtoMessage()               {}
func (*GuessTeam) Descriptor() ([]byte, []int) { return fileDescriptor31, []int{2} }

func (m *GuessTeam) GetTeamId() int32 {
	if m != nil && m.TeamId != nil {
		return *m.TeamId
	}
	return 0
}

func (m *GuessTeam) GetTeamScore() int32 {
	if m != nil && m.TeamScore != nil {
		return *m.TeamScore
	}
	return 0
}

func (m *GuessTeam) GetSupportNum() int32 {
	if m != nil && m.SupportNum != nil {
		return *m.SupportNum
	}
	return 0
}

// 竞猜商店配置
type GuessShopS2C struct {
	GuessGiftSlot    []*GuessGiftSlot `protobuf:"bytes,1,rep,name=guessGiftSlot" json:"guessGiftSlot,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *GuessShopS2C) Reset()                    { *m = GuessShopS2C{} }
func (m *GuessShopS2C) String() string            { return proto.CompactTextString(m) }
func (*GuessShopS2C) ProtoMessage()               {}
func (*GuessShopS2C) Descriptor() ([]byte, []int) { return fileDescriptor31, []int{3} }

func (m *GuessShopS2C) GetGuessGiftSlot() []*GuessGiftSlot {
	if m != nil {
		return m.GuessGiftSlot
	}
	return nil
}

// 竞猜礼包配置
type GuessGiftSlot struct {
	Id               *int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Count            *int32 `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	RefreshTime      *int64 `protobuf:"varint,3,opt,name=refreshTime" json:"refreshTime,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GuessGiftSlot) Reset()                    { *m = GuessGiftSlot{} }
func (m *GuessGiftSlot) String() string            { return proto.CompactTextString(m) }
func (*GuessGiftSlot) ProtoMessage()               {}
func (*GuessGiftSlot) Descriptor() ([]byte, []int) { return fileDescriptor31, []int{4} }

func (m *GuessGiftSlot) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *GuessGiftSlot) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func (m *GuessGiftSlot) GetRefreshTime() int64 {
	if m != nil && m.RefreshTime != nil {
		return *m.RefreshTime
	}
	return 0
}

// 竞猜记录配置
type GuessRecordS2C struct {
	GuessRecord      []*GuessRecord `protobuf:"bytes,1,rep,name=guessRecord" json:"guessRecord,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *GuessRecordS2C) Reset()                    { *m = GuessRecordS2C{} }
func (m *GuessRecordS2C) String() string            { return proto.CompactTextString(m) }
func (*GuessRecordS2C) ProtoMessage()               {}
func (*GuessRecordS2C) Descriptor() ([]byte, []int) { return fileDescriptor31, []int{5} }

func (m *GuessRecordS2C) GetGuessRecord() []*GuessRecord {
	if m != nil {
		return m.GuessRecord
	}
	return nil
}

// 比赛数据
type GuessMatch struct {
	Id               *int64     `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	MatchDate        *int64     `protobuf:"varint,2,opt,name=matchDate" json:"matchDate,omitempty"`
	FirstTeam        *GuessTeam `protobuf:"bytes,3,opt,name=firstTeam" json:"firstTeam,omitempty"`
	SecondTeam       *GuessTeam `protobuf:"bytes,4,opt,name=secondTeam" json:"secondTeam,omitempty"`
	MatchType        *int32     `protobuf:"varint,5,opt,name=matchType" json:"matchType,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *GuessMatch) Reset()                    { *m = GuessMatch{} }
func (m *GuessMatch) String() string            { return proto.CompactTextString(m) }
func (*GuessMatch) ProtoMessage()               {}
func (*GuessMatch) Descriptor() ([]byte, []int) { return fileDescriptor31, []int{6} }

func (m *GuessMatch) GetId() int64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *GuessMatch) GetMatchDate() int64 {
	if m != nil && m.MatchDate != nil {
		return *m.MatchDate
	}
	return 0
}

func (m *GuessMatch) GetFirstTeam() *GuessTeam {
	if m != nil {
		return m.FirstTeam
	}
	return nil
}

func (m *GuessMatch) GetSecondTeam() *GuessTeam {
	if m != nil {
		return m.SecondTeam
	}
	return nil
}

func (m *GuessMatch) GetMatchType() int32 {
	if m != nil && m.MatchType != nil {
		return *m.MatchType
	}
	return 0
}

// 竞猜记录
type GuessRecord struct {
	Match            *GuessMatch `protobuf:"bytes,1,opt,name=match" json:"match,omitempty"`
	SupportTeam      *int32      `protobuf:"varint,2,opt,name=supportTeam" json:"supportTeam,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *GuessRecord) Reset()                    { *m = GuessRecord{} }
func (m *GuessRecord) String() string            { return proto.CompactTextString(m) }
func (*GuessRecord) ProtoMessage()               {}
func (*GuessRecord) Descriptor() ([]byte, []int) { return fileDescriptor31, []int{7} }

func (m *GuessRecord) GetMatch() *GuessMatch {
	if m != nil {
		return m.Match
	}
	return nil
}

func (m *GuessRecord) GetSupportTeam() int32 {
	if m != nil && m.SupportTeam != nil {
		return *m.SupportTeam
	}
	return 0
}

// 购买礼包
type GuessBuyGiftC2S struct {
	Id               *int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	BuyNum           *int32 `protobuf:"varint,2,opt,name=buyNum" json:"buyNum,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GuessBuyGiftC2S) Reset()                    { *m = GuessBuyGiftC2S{} }
func (m *GuessBuyGiftC2S) String() string            { return proto.CompactTextString(m) }
func (*GuessBuyGiftC2S) ProtoMessage()               {}
func (*GuessBuyGiftC2S) Descriptor() ([]byte, []int) { return fileDescriptor31, []int{8} }

func (m *GuessBuyGiftC2S) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *GuessBuyGiftC2S) GetBuyNum() int32 {
	if m != nil && m.BuyNum != nil {
		return *m.BuyNum
	}
	return 0
}

type GuessBuyGiftS2C struct {
	Id               *int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	BuyNum           *int32 `protobuf:"varint,2,opt,name=buyNum" json:"buyNum,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GuessBuyGiftS2C) Reset()                    { *m = GuessBuyGiftS2C{} }
func (m *GuessBuyGiftS2C) String() string            { return proto.CompactTextString(m) }
func (*GuessBuyGiftS2C) ProtoMessage()               {}
func (*GuessBuyGiftS2C) Descriptor() ([]byte, []int) { return fileDescriptor31, []int{9} }

func (m *GuessBuyGiftS2C) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *GuessBuyGiftS2C) GetBuyNum() int32 {
	if m != nil && m.BuyNum != nil {
		return *m.BuyNum
	}
	return 0
}

// 后台取消竞猜比赛
type GuessSetMatchS2C struct {
	Id               []int64 `protobuf:"varint,1,rep,name=id" json:"id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GuessSetMatchS2C) Reset()                    { *m = GuessSetMatchS2C{} }
func (m *GuessSetMatchS2C) String() string            { return proto.CompactTextString(m) }
func (*GuessSetMatchS2C) ProtoMessage()               {}
func (*GuessSetMatchS2C) Descriptor() ([]byte, []int) { return fileDescriptor31, []int{10} }

func (m *GuessSetMatchS2C) GetId() []int64 {
	if m != nil {
		return m.Id
	}
	return nil
}

// 参加竞猜
type GuessPartInS2C struct {
	MatchId          *int32 `protobuf:"varint,1,opt,name=matchId" json:"matchId,omitempty"`
	TeamId           *int32 `protobuf:"varint,2,opt,name=teamId" json:"teamId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GuessPartInS2C) Reset()                    { *m = GuessPartInS2C{} }
func (m *GuessPartInS2C) String() string            { return proto.CompactTextString(m) }
func (*GuessPartInS2C) ProtoMessage()               {}
func (*GuessPartInS2C) Descriptor() ([]byte, []int) { return fileDescriptor31, []int{11} }

func (m *GuessPartInS2C) GetMatchId() int32 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *GuessPartInS2C) GetTeamId() int32 {
	if m != nil && m.TeamId != nil {
		return *m.TeamId
	}
	return 0
}

type GuessPartInC2S struct {
	MatchId          *int32 `protobuf:"varint,1,opt,name=matchId" json:"matchId,omitempty"`
	TeamId           *int32 `protobuf:"varint,2,opt,name=teamId" json:"teamId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GuessPartInC2S) Reset()                    { *m = GuessPartInC2S{} }
func (m *GuessPartInC2S) String() string            { return proto.CompactTextString(m) }
func (*GuessPartInC2S) ProtoMessage()               {}
func (*GuessPartInC2S) Descriptor() ([]byte, []int) { return fileDescriptor31, []int{12} }

func (m *GuessPartInC2S) GetMatchId() int32 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *GuessPartInC2S) GetTeamId() int32 {
	if m != nil && m.TeamId != nil {
		return *m.TeamId
	}
	return 0
}

// 比赛记录增量更新
type GuessMatchUpdateS2C struct {
	Match            []*GuessMatch `protobuf:"bytes,1,rep,name=match" json:"match,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *GuessMatchUpdateS2C) Reset()                    { *m = GuessMatchUpdateS2C{} }
func (m *GuessMatchUpdateS2C) String() string            { return proto.CompactTextString(m) }
func (*GuessMatchUpdateS2C) ProtoMessage()               {}
func (*GuessMatchUpdateS2C) Descriptor() ([]byte, []int) { return fileDescriptor31, []int{13} }

func (m *GuessMatchUpdateS2C) GetMatch() []*GuessMatch {
	if m != nil {
		return m.Match
	}
	return nil
}

// GM后台撤销发奖
type GuessGmRevokeAward struct {
	Gid              *int32            `protobuf:"varint,1,opt,name=gid" json:"gid,omitempty"`
	Reward           []*ItemVaryConfig `protobuf:"bytes,2,rep,name=reward" json:"reward,omitempty"`
	Type             *int32            `protobuf:"varint,3,opt,name=type" json:"type,omitempty"`
	MatchId          *int64            `protobuf:"varint,4,opt,name=matchId" json:"matchId,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *GuessGmRevokeAward) Reset()                    { *m = GuessGmRevokeAward{} }
func (m *GuessGmRevokeAward) String() string            { return proto.CompactTextString(m) }
func (*GuessGmRevokeAward) ProtoMessage()               {}
func (*GuessGmRevokeAward) Descriptor() ([]byte, []int) { return fileDescriptor31, []int{14} }

func (m *GuessGmRevokeAward) GetGid() int32 {
	if m != nil && m.Gid != nil {
		return *m.Gid
	}
	return 0
}

func (m *GuessGmRevokeAward) GetReward() []*ItemVaryConfig {
	if m != nil {
		return m.Reward
	}
	return nil
}

func (m *GuessGmRevokeAward) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *GuessGmRevokeAward) GetMatchId() int64 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func init() {
	proto.RegisterType((*GuessEntryS2C)(nil), "GuessEntryS2C")
	proto.RegisterType((*GuessInfo)(nil), "GuessInfo")
	proto.RegisterType((*GuessTeam)(nil), "GuessTeam")
	proto.RegisterType((*GuessShopS2C)(nil), "GuessShopS2C")
	proto.RegisterType((*GuessGiftSlot)(nil), "GuessGiftSlot")
	proto.RegisterType((*GuessRecordS2C)(nil), "GuessRecordS2C")
	proto.RegisterType((*GuessMatch)(nil), "GuessMatch")
	proto.RegisterType((*GuessRecord)(nil), "GuessRecord")
	proto.RegisterType((*GuessBuyGiftC2S)(nil), "GuessBuyGiftC2S")
	proto.RegisterType((*GuessBuyGiftS2C)(nil), "GuessBuyGiftS2C")
	proto.RegisterType((*GuessSetMatchS2C)(nil), "GuessSetMatchS2C")
	proto.RegisterType((*GuessPartInS2C)(nil), "GuessPartInS2C")
	proto.RegisterType((*GuessPartInC2S)(nil), "GuessPartInC2S")
	proto.RegisterType((*GuessMatchUpdateS2C)(nil), "GuessMatchUpdateS2C")
	proto.RegisterType((*GuessGmRevokeAward)(nil), "GuessGmRevokeAward")
	proto.RegisterEnum("GuessEntryS2C_MsgID", GuessEntryS2C_MsgID_name, GuessEntryS2C_MsgID_value)
	proto.RegisterEnum("GuessShopS2C_MsgID", GuessShopS2C_MsgID_name, GuessShopS2C_MsgID_value)
	proto.RegisterEnum("GuessRecordS2C_MsgID", GuessRecordS2C_MsgID_name, GuessRecordS2C_MsgID_value)
	proto.RegisterEnum("GuessBuyGiftC2S_MsgID", GuessBuyGiftC2S_MsgID_name, GuessBuyGiftC2S_MsgID_value)
	proto.RegisterEnum("GuessBuyGiftS2C_MsgID", GuessBuyGiftS2C_MsgID_name, GuessBuyGiftS2C_MsgID_value)
	proto.RegisterEnum("GuessSetMatchS2C_MsgID", GuessSetMatchS2C_MsgID_name, GuessSetMatchS2C_MsgID_value)
	proto.RegisterEnum("GuessPartInS2C_MsgID", GuessPartInS2C_MsgID_name, GuessPartInS2C_MsgID_value)
	proto.RegisterEnum("GuessPartInC2S_MsgID", GuessPartInC2S_MsgID_name, GuessPartInC2S_MsgID_value)
	proto.RegisterEnum("GuessMatchUpdateS2C_MsgID", GuessMatchUpdateS2C_MsgID_name, GuessMatchUpdateS2C_MsgID_value)
}

func init() { proto.RegisterFile("guess_compete.proto", fileDescriptor31) }

var fileDescriptor31 = []byte{
	// 519 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x54, 0xcd, 0x6f, 0xd3, 0x4e,
	0x10, 0x55, 0xba, 0x75, 0x7e, 0xca, 0x38, 0x1f, 0xfd, 0x39, 0x42, 0x8a, 0x2a, 0xf1, 0x65, 0x09,
	0x89, 0x53, 0x0e, 0x91, 0xb8, 0x21, 0x10, 0x4d, 0xaa, 0x60, 0x44, 0x11, 0xaa, 0x03, 0x57, 0x64,
	0x9c, 0xb5, 0x63, 0x81, 0xbd, 0xd6, 0x7a, 0x0d, 0xf2, 0x81, 0x03, 0xdf, 0x77, 0xfe, 0x62, 0x66,
	0xd6, 0xeb, 0xc6, 0xb4, 0xe6, 0x40, 0x4f, 0xd9, 0xcc, 0xce, 0x7b, 0xfb, 0xe6, 0xbd, 0x49, 0x60,
	0x1a, 0x97, 0xbc, 0x28, 0xde, 0x84, 0x22, 0xcd, 0xb9, 0xe2, 0xf3, 0x5c, 0x0a, 0x25, 0x8e, 0x21,
	0x14, 0x59, 0x54, 0x9f, 0xdd, 0x53, 0x18, 0xad, 0xa9, 0xe5, 0x34, 0x53, 0xb2, 0xf2, 0x17, 0x4b,
	0xe7, 0x26, 0x0c, 0x34, 0xc6, 0xcb, 0x22, 0x31, 0xeb, 0xdd, 0x61, 0xf7, 0xed, 0x05, 0xcc, 0xd7,
	0x4d, 0xc5, 0xbd, 0x01, 0xd6, 0x59, 0x11, 0x7b, 0x2b, 0x67, 0x08, 0x7d, 0xae, 0x4f, 0x47, 0x9f,
	0x7f, 0xf5, 0xdc, 0x87, 0x30, 0xb8, 0xe8, 0x71, 0x8e, 0xc1, 0x4a, 0x03, 0x15, 0xee, 0x10, 0xde,
	0x43, 0xb8, 0x5d, 0xc3, 0xcf, 0xa8, 0xe4, 0x4c, 0xc1, 0x2e, 0xca, 0x3c, 0x17, 0x52, 0x6d, 0x78,
	0x90, 0xce, 0x0e, 0xb0, 0xc3, 0x72, 0x4f, 0x0c, 0x9a, 0x4a, 0xce, 0x18, 0xfa, 0x0a, 0x3f, 0xbd,
	0xad, 0x86, 0x5b, 0xce, 0xff, 0x30, 0xa0, 0xef, 0x7e, 0x28, 0x24, 0xaf, 0xfb, 0x1d, 0x07, 0xc0,
	0x90, 0xbc, 0x28, 0xd3, 0x19, 0xd3, 0x1c, 0xcf, 0x61, 0xa8, 0x39, 0xfc, 0x9d, 0xc8, 0x69, 0x8e,
	0x7b, 0x30, 0xd2, 0x73, 0xac, 0x93, 0x48, 0xf9, 0xef, 0x85, 0x32, 0xb3, 0x8c, 0x6b, 0x31, 0x4d,
	0xb5, 0x6b, 0x9e, 0x2f, 0x38, 0xcf, 0x63, 0x63, 0x4b, 0xd3, 0x87, 0x2f, 0x1e, 0x24, 0x8d, 0xa2,
	0x11, 0x58, 0xa1, 0x28, 0x33, 0x65, 0xd4, 0xe0, 0x48, 0x92, 0x47, 0x92, 0x17, 0xbb, 0x4d, 0x92,
	0x72, 0x2d, 0x87, 0xb9, 0xcf, 0x60, 0xac, 0x09, 0xce, 0x39, 0xea, 0xde, 0x92, 0xa0, 0xbb, 0x60,
	0xc7, 0xfb, 0x8a, 0x91, 0x33, 0x9c, 0xb7, 0xba, 0xba, 0xc4, 0x7c, 0x45, 0x31, 0x9f, 0x00, 0x5a,
	0x0e, 0xee, 0x95, 0x30, 0xf2, 0x46, 0x3b, 0xbd, 0x0a, 0x54, 0xed, 0x0d, 0xa3, 0xfc, 0xa2, 0x44,
	0x16, 0xb5, 0xbd, 0x4c, 0x07, 0x60, 0xf2, 0xd3, 0xee, 0xde, 0x42, 0xeb, 0xf0, 0xb1, 0x6c, 0xab,
	0xef, 0x0f, 0xaf, 0xdc, 0x37, 0x8c, 0x9b, 0x2a, 0xe7, 0x33, 0x4b, 0x3b, 0xfb, 0x08, 0xec, 0x96,
	0xc8, 0x7f, 0x4f, 0x77, 0x05, 0x13, 0xdd, 0x72, 0x52, 0x56, 0x64, 0xe7, 0x72, 0xe1, 0xff, 0xe1,
	0x26, 0xe6, 0xfd, 0xb6, 0xac, 0x28, 0xc8, 0xba, 0xbd, 0xc3, 0x84, 0x6f, 0x68, 0xc2, 0x25, 0x16,
	0x72, 0xf4, 0x1a, 0x2c, 0x0f, 0xe0, 0xa8, 0xde, 0x12, 0xae, 0xb4, 0xe2, 0x36, 0x0d, 0xc3, 0xd8,
	0x3a, 0x60, 0xdf, 0x11, 0xf6, 0xd4, 0xa4, 0xf9, 0x32, 0x90, 0xca, 0xcb, 0x08, 0x34, 0x81, 0xff,
	0xb4, 0x0b, 0x5e, 0x4b, 0x80, 0x59, 0xdb, 0xbf, 0x0a, 0xf8, 0x71, 0x85, 0x89, 0xbc, 0xb8, 0x3e,
	0xd3, 0x74, 0xef, 0xfc, 0xab, 0x7c, 0x8b, 0x2b, 0x40, 0xc2, 0x5a, 0xf1, 0xb0, 0x4b, 0xf1, 0x74,
	0x31, 0xfd, 0x44, 0xa6, 0x00, 0x9c, 0x7a, 0xd9, 0xd3, 0x73, 0xfe, 0x41, 0xbc, 0xe3, 0x4f, 0x3e,
	0x06, 0x98, 0xb3, 0x0d, 0x2c, 0xbe, 0xb0, 0xf7, 0x36, 0xf4, 0x25, 0xa7, 0x32, 0x6a, 0x22, 0xda,
	0xc9, 0xdc, 0x53, 0x3c, 0x7d, 0x1d, 0xc8, 0x6a, 0x89, 0xff, 0x25, 0x49, 0x8c, 0x8c, 0x87, 0x8a,
	0x56, 0x46, 0xff, 0x18, 0xdb, 0x33, 0xd1, 0x8a, 0xb1, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x8b,
	0xe0, 0x32, 0xb2, 0x88, 0x04, 0x00, 0x00,
}
