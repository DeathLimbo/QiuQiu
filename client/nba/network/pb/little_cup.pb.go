// Code generated by protoc-gen-go.
// source: little_cup.proto
// DO NOT EDIT!

package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 小型杯赛状态
type LittleCupStage int32

const (
	// 开始报名
	LittleCupStage_lcBegin LittleCupStage = 1
	// 第一轮
	LittleCupStage_lcRoundOne LittleCupStage = 2
	// 第二轮等待中
	LittleCupStage_lcRoundTwoWait LittleCupStage = 3
	// 第二轮
	LittleCupStage_lcRoundTwo LittleCupStage = 4
	// 第三轮等待中
	LittleCupStage_lcRoundThreeWait LittleCupStage = 5
	// 第三轮
	LittleCupStage_lcRoundThree LittleCupStage = 6
	// 结束
	LittleCupStage_lcEnd LittleCupStage = 7
)

var LittleCupStage_name = map[int32]string{
	1: "lcBegin",
	2: "lcRoundOne",
	3: "lcRoundTwoWait",
	4: "lcRoundTwo",
	5: "lcRoundThreeWait",
	6: "lcRoundThree",
	7: "lcEnd",
}
var LittleCupStage_value = map[string]int32{
	"lcBegin":          1,
	"lcRoundOne":       2,
	"lcRoundTwoWait":   3,
	"lcRoundTwo":       4,
	"lcRoundThreeWait": 5,
	"lcRoundThree":     6,
	"lcEnd":            7,
}

func (x LittleCupStage) Enum() *LittleCupStage {
	p := new(LittleCupStage)
	*p = x
	return p
}
func (x LittleCupStage) String() string {
	return proto.EnumName(LittleCupStage_name, int32(x))
}
func (x *LittleCupStage) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LittleCupStage_value, data, "LittleCupStage")
	if err != nil {
		return err
	}
	*x = LittleCupStage(value)
	return nil
}
func (LittleCupStage) EnumDescriptor() ([]byte, []int) { return fileDescriptor39, []int{0} }

type LittleCupCheckInC2S_MsgID int32

const (
	LittleCupCheckInC2S_eMsgID LittleCupCheckInC2S_MsgID = 15873
)

var LittleCupCheckInC2S_MsgID_name = map[int32]string{
	15873: "eMsgID",
}
var LittleCupCheckInC2S_MsgID_value = map[string]int32{
	"eMsgID": 15873,
}

func (x LittleCupCheckInC2S_MsgID) Enum() *LittleCupCheckInC2S_MsgID {
	p := new(LittleCupCheckInC2S_MsgID)
	*p = x
	return p
}
func (x LittleCupCheckInC2S_MsgID) String() string {
	return proto.EnumName(LittleCupCheckInC2S_MsgID_name, int32(x))
}
func (x *LittleCupCheckInC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LittleCupCheckInC2S_MsgID_value, data, "LittleCupCheckInC2S_MsgID")
	if err != nil {
		return err
	}
	*x = LittleCupCheckInC2S_MsgID(value)
	return nil
}
func (LittleCupCheckInC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor39, []int{25, 0}
}

type LittleCupCheckInS2C_MsgID int32

const (
	LittleCupCheckInS2C_eMsgID LittleCupCheckInS2C_MsgID = 15873
)

var LittleCupCheckInS2C_MsgID_name = map[int32]string{
	15873: "eMsgID",
}
var LittleCupCheckInS2C_MsgID_value = map[string]int32{
	"eMsgID": 15873,
}

func (x LittleCupCheckInS2C_MsgID) Enum() *LittleCupCheckInS2C_MsgID {
	p := new(LittleCupCheckInS2C_MsgID)
	*p = x
	return p
}
func (x LittleCupCheckInS2C_MsgID) String() string {
	return proto.EnumName(LittleCupCheckInS2C_MsgID_name, int32(x))
}
func (x *LittleCupCheckInS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LittleCupCheckInS2C_MsgID_value, data, "LittleCupCheckInS2C_MsgID")
	if err != nil {
		return err
	}
	*x = LittleCupCheckInS2C_MsgID(value)
	return nil
}
func (LittleCupCheckInS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor39, []int{26, 0}
}

type LittleCupCheckOutC2S_MsgID int32

const (
	LittleCupCheckOutC2S_eMsgID LittleCupCheckOutC2S_MsgID = 15874
)

var LittleCupCheckOutC2S_MsgID_name = map[int32]string{
	15874: "eMsgID",
}
var LittleCupCheckOutC2S_MsgID_value = map[string]int32{
	"eMsgID": 15874,
}

func (x LittleCupCheckOutC2S_MsgID) Enum() *LittleCupCheckOutC2S_MsgID {
	p := new(LittleCupCheckOutC2S_MsgID)
	*p = x
	return p
}
func (x LittleCupCheckOutC2S_MsgID) String() string {
	return proto.EnumName(LittleCupCheckOutC2S_MsgID_name, int32(x))
}
func (x *LittleCupCheckOutC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LittleCupCheckOutC2S_MsgID_value, data, "LittleCupCheckOutC2S_MsgID")
	if err != nil {
		return err
	}
	*x = LittleCupCheckOutC2S_MsgID(value)
	return nil
}
func (LittleCupCheckOutC2S_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor39, []int{27, 0}
}

type LittleCupCheckOutS2C_MsgID int32

const (
	LittleCupCheckOutS2C_eMsgID LittleCupCheckOutS2C_MsgID = 15874
)

var LittleCupCheckOutS2C_MsgID_name = map[int32]string{
	15874: "eMsgID",
}
var LittleCupCheckOutS2C_MsgID_value = map[string]int32{
	"eMsgID": 15874,
}

func (x LittleCupCheckOutS2C_MsgID) Enum() *LittleCupCheckOutS2C_MsgID {
	p := new(LittleCupCheckOutS2C_MsgID)
	*p = x
	return p
}
func (x LittleCupCheckOutS2C_MsgID) String() string {
	return proto.EnumName(LittleCupCheckOutS2C_MsgID_name, int32(x))
}
func (x *LittleCupCheckOutS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LittleCupCheckOutS2C_MsgID_value, data, "LittleCupCheckOutS2C_MsgID")
	if err != nil {
		return err
	}
	*x = LittleCupCheckOutS2C_MsgID(value)
	return nil
}
func (LittleCupCheckOutS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor39, []int{28, 0}
}

type LittleCupC2S_MsgID int32

const (
	LittleCupC2S_eMsgID LittleCupC2S_MsgID = 15875
)

var LittleCupC2S_MsgID_name = map[int32]string{
	15875: "eMsgID",
}
var LittleCupC2S_MsgID_value = map[string]int32{
	"eMsgID": 15875,
}

func (x LittleCupC2S_MsgID) Enum() *LittleCupC2S_MsgID {
	p := new(LittleCupC2S_MsgID)
	*p = x
	return p
}
func (x LittleCupC2S_MsgID) String() string {
	return proto.EnumName(LittleCupC2S_MsgID_name, int32(x))
}
func (x *LittleCupC2S_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LittleCupC2S_MsgID_value, data, "LittleCupC2S_MsgID")
	if err != nil {
		return err
	}
	*x = LittleCupC2S_MsgID(value)
	return nil
}
func (LittleCupC2S_MsgID) EnumDescriptor() ([]byte, []int) { return fileDescriptor39, []int{29, 0} }

type LittleCupS2C_MsgID int32

const (
	LittleCupS2C_eMsgID LittleCupS2C_MsgID = 15875
)

var LittleCupS2C_MsgID_name = map[int32]string{
	15875: "eMsgID",
}
var LittleCupS2C_MsgID_value = map[string]int32{
	"eMsgID": 15875,
}

func (x LittleCupS2C_MsgID) Enum() *LittleCupS2C_MsgID {
	p := new(LittleCupS2C_MsgID)
	*p = x
	return p
}
func (x LittleCupS2C_MsgID) String() string {
	return proto.EnumName(LittleCupS2C_MsgID_name, int32(x))
}
func (x *LittleCupS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LittleCupS2C_MsgID_value, data, "LittleCupS2C_MsgID")
	if err != nil {
		return err
	}
	*x = LittleCupS2C_MsgID(value)
	return nil
}
func (LittleCupS2C_MsgID) EnumDescriptor() ([]byte, []int) { return fileDescriptor39, []int{30, 0} }

type LoginSendLittleCupS2C_MsgID int32

const (
	LoginSendLittleCupS2C_eMsgID LoginSendLittleCupS2C_MsgID = 15876
)

var LoginSendLittleCupS2C_MsgID_name = map[int32]string{
	15876: "eMsgID",
}
var LoginSendLittleCupS2C_MsgID_value = map[string]int32{
	"eMsgID": 15876,
}

func (x LoginSendLittleCupS2C_MsgID) Enum() *LoginSendLittleCupS2C_MsgID {
	p := new(LoginSendLittleCupS2C_MsgID)
	*p = x
	return p
}
func (x LoginSendLittleCupS2C_MsgID) String() string {
	return proto.EnumName(LoginSendLittleCupS2C_MsgID_name, int32(x))
}
func (x *LoginSendLittleCupS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LoginSendLittleCupS2C_MsgID_value, data, "LoginSendLittleCupS2C_MsgID")
	if err != nil {
		return err
	}
	*x = LoginSendLittleCupS2C_MsgID(value)
	return nil
}
func (LoginSendLittleCupS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor39, []int{31, 0}
}

type LittleCupUpdateS2C_MsgID int32

const (
	LittleCupUpdateS2C_eMsgID LittleCupUpdateS2C_MsgID = 15877
)

var LittleCupUpdateS2C_MsgID_name = map[int32]string{
	15877: "eMsgID",
}
var LittleCupUpdateS2C_MsgID_value = map[string]int32{
	"eMsgID": 15877,
}

func (x LittleCupUpdateS2C_MsgID) Enum() *LittleCupUpdateS2C_MsgID {
	p := new(LittleCupUpdateS2C_MsgID)
	*p = x
	return p
}
func (x LittleCupUpdateS2C_MsgID) String() string {
	return proto.EnumName(LittleCupUpdateS2C_MsgID_name, int32(x))
}
func (x *LittleCupUpdateS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LittleCupUpdateS2C_MsgID_value, data, "LittleCupUpdateS2C_MsgID")
	if err != nil {
		return err
	}
	*x = LittleCupUpdateS2C_MsgID(value)
	return nil
}
func (LittleCupUpdateS2C_MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor39, []int{32, 0}
}

type LittleCupEndS2C_MsgID int32

const (
	LittleCupEndS2C_eMsgID LittleCupEndS2C_MsgID = 15878
)

var LittleCupEndS2C_MsgID_name = map[int32]string{
	15878: "eMsgID",
}
var LittleCupEndS2C_MsgID_value = map[string]int32{
	"eMsgID": 15878,
}

func (x LittleCupEndS2C_MsgID) Enum() *LittleCupEndS2C_MsgID {
	p := new(LittleCupEndS2C_MsgID)
	*p = x
	return p
}
func (x LittleCupEndS2C_MsgID) String() string {
	return proto.EnumName(LittleCupEndS2C_MsgID_name, int32(x))
}
func (x *LittleCupEndS2C_MsgID) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(LittleCupEndS2C_MsgID_value, data, "LittleCupEndS2C_MsgID")
	if err != nil {
		return err
	}
	*x = LittleCupEndS2C_MsgID(value)
	return nil
}
func (LittleCupEndS2C_MsgID) EnumDescriptor() ([]byte, []int) { return fileDescriptor39, []int{33, 0} }

// 一个赛区
type CupArea struct {
	// 赛区对应玩家等级（40、50、60...）
	Level *int32 `protobuf:"varint,1,opt,name=level" json:"level,omitempty"`
	// 期数 当前是第几个杯赛
	Term *int32 `protobuf:"varint,2,opt,name=term" json:"term,omitempty"`
	// 赛季
	Season *int32 `protobuf:"varint,3,opt,name=season" json:"season,omitempty"`
	// 赛季结束时间
	EndTime          *int64 `protobuf:"varint,4,opt,name=endTime" json:"endTime,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CupArea) Reset()                    { *m = CupArea{} }
func (m *CupArea) String() string            { return proto.CompactTextString(m) }
func (*CupArea) ProtoMessage()               {}
func (*CupArea) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{0} }

func (m *CupArea) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *CupArea) GetTerm() int32 {
	if m != nil && m.Term != nil {
		return *m.Term
	}
	return 0
}

func (m *CupArea) GetSeason() int32 {
	if m != nil && m.Season != nil {
		return *m.Season
	}
	return 0
}

func (m *CupArea) GetEndTime() int64 {
	if m != nil && m.EndTime != nil {
		return *m.EndTime
	}
	return 0
}

// 杯赛
type CupMatch struct {
	// 当前是第几个杯赛
	Term *int32 `protobuf:"varint,1,opt,name=term" json:"term,omitempty"`
	// 当前阶段
	Stage *LittleCupStage `protobuf:"varint,2,opt,name=stage,enum=LittleCupStage" json:"stage,omitempty"`
	// 进入当前阶段时间
	EnterTime *int64 `protobuf:"varint,4,opt,name=enterTime" json:"enterTime,omitempty"`
	// 报名成功的玩家
	Gamers []*CupGamer `protobuf:"bytes,5,rep,name=gamers" json:"gamers,omitempty"`
	// 比赛对局房间
	Rooms []*CupRoomInfo `protobuf:"bytes,6,rep,name=rooms" json:"rooms,omitempty"`
	// 已添加机器人列表
	Robots           []int32 `protobuf:"varint,7,rep,name=robots" json:"robots,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CupMatch) Reset()                    { *m = CupMatch{} }
func (m *CupMatch) String() string            { return proto.CompactTextString(m) }
func (*CupMatch) ProtoMessage()               {}
func (*CupMatch) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{1} }

func (m *CupMatch) GetTerm() int32 {
	if m != nil && m.Term != nil {
		return *m.Term
	}
	return 0
}

func (m *CupMatch) GetStage() LittleCupStage {
	if m != nil && m.Stage != nil {
		return *m.Stage
	}
	return LittleCupStage_lcBegin
}

func (m *CupMatch) GetEnterTime() int64 {
	if m != nil && m.EnterTime != nil {
		return *m.EnterTime
	}
	return 0
}

func (m *CupMatch) GetGamers() []*CupGamer {
	if m != nil {
		return m.Gamers
	}
	return nil
}

func (m *CupMatch) GetRooms() []*CupRoomInfo {
	if m != nil {
		return m.Rooms
	}
	return nil
}

func (m *CupMatch) GetRobots() []int32 {
	if m != nil {
		return m.Robots
	}
	return nil
}

// 杯赛单局对战信息
type CupRoomInfo struct {
	// 房间id（总共7场 编号1-7）
	Id *int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// 玩家1
	Gamer1 *int32 `protobuf:"varint,3,opt,name=gamer1" json:"gamer1,omitempty"`
	// 玩家2
	Gamer2           *int32 `protobuf:"varint,4,opt,name=gamer2" json:"gamer2,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CupRoomInfo) Reset()                    { *m = CupRoomInfo{} }
func (m *CupRoomInfo) String() string            { return proto.CompactTextString(m) }
func (*CupRoomInfo) ProtoMessage()               {}
func (*CupRoomInfo) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{2} }

func (m *CupRoomInfo) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *CupRoomInfo) GetGamer1() int32 {
	if m != nil && m.Gamer1 != nil {
		return *m.Gamer1
	}
	return 0
}

func (m *CupRoomInfo) GetGamer2() int32 {
	if m != nil && m.Gamer2 != nil {
		return *m.Gamer2
	}
	return 0
}

// 杯赛单局对战结果
type CupRoomResult struct {
	// 胜者
	Winner *int32 `protobuf:"varint,5,opt,name=winner" json:"winner,omitempty"`
	// 回放id
	Replay *int64 `protobuf:"varint,6,opt,name=replay" json:"replay,omitempty"`
	// 战斗id
	Console          *int64 `protobuf:"varint,7,opt,name=console" json:"console,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CupRoomResult) Reset()                    { *m = CupRoomResult{} }
func (m *CupRoomResult) String() string            { return proto.CompactTextString(m) }
func (*CupRoomResult) ProtoMessage()               {}
func (*CupRoomResult) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{3} }

func (m *CupRoomResult) GetWinner() int32 {
	if m != nil && m.Winner != nil {
		return *m.Winner
	}
	return 0
}

func (m *CupRoomResult) GetReplay() int64 {
	if m != nil && m.Replay != nil {
		return *m.Replay
	}
	return 0
}

func (m *CupRoomResult) GetConsole() int64 {
	if m != nil && m.Console != nil {
		return *m.Console
	}
	return 0
}

type CupGamer struct {
	// 玩家id
	Gid *int32 `protobuf:"varint,1,opt,name=gid" json:"gid,omitempty"`
	// 进程ID
	PsId *int32 `protobuf:"varint,2,opt,name=psId" json:"psId,omitempty"`
	// logic id
	LsId *int32 `protobuf:"varint,3,opt,name=lsId" json:"lsId,omitempty"`
	// 玩家名字
	GamerName *string `protobuf:"bytes,4,opt,name=gamer_name" json:"gamer_name,omitempty"`
	// 玩家头像
	TeamId *int32 `protobuf:"varint,5,opt,name=team_id" json:"team_id,omitempty"`
	// 玩家积分
	Score *int32 `protobuf:"varint,6,opt,name=score" json:"score,omitempty"`
	// 夺冠次数
	Cups             *int32 `protobuf:"varint,7,opt,name=cups" json:"cups,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CupGamer) Reset()                    { *m = CupGamer{} }
func (m *CupGamer) String() string            { return proto.CompactTextString(m) }
func (*CupGamer) ProtoMessage()               {}
func (*CupGamer) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{4} }

func (m *CupGamer) GetGid() int32 {
	if m != nil && m.Gid != nil {
		return *m.Gid
	}
	return 0
}

func (m *CupGamer) GetPsId() int32 {
	if m != nil && m.PsId != nil {
		return *m.PsId
	}
	return 0
}

func (m *CupGamer) GetLsId() int32 {
	if m != nil && m.LsId != nil {
		return *m.LsId
	}
	return 0
}

func (m *CupGamer) GetGamerName() string {
	if m != nil && m.GamerName != nil {
		return *m.GamerName
	}
	return ""
}

func (m *CupGamer) GetTeamId() int32 {
	if m != nil && m.TeamId != nil {
		return *m.TeamId
	}
	return 0
}

func (m *CupGamer) GetScore() int32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *CupGamer) GetCups() int32 {
	if m != nil && m.Cups != nil {
		return *m.Cups
	}
	return 0
}

// 榜首玩家
type CupTopGamer struct {
	// 玩家id
	Gid *int32 `protobuf:"varint,1,opt,name=gid" json:"gid,omitempty"`
	// 玩家积分
	Score *int32 `protobuf:"varint,2,opt,name=score" json:"score,omitempty"`
	// 拿到第一名的时间
	Time             *int64 `protobuf:"varint,3,opt,name=time" json:"time,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CupTopGamer) Reset()                    { *m = CupTopGamer{} }
func (m *CupTopGamer) String() string            { return proto.CompactTextString(m) }
func (*CupTopGamer) ProtoMessage()               {}
func (*CupTopGamer) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{5} }

func (m *CupTopGamer) GetGid() int32 {
	if m != nil && m.Gid != nil {
		return *m.Gid
	}
	return 0
}

func (m *CupTopGamer) GetScore() int32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *CupTopGamer) GetTime() int64 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

// 一场小型杯赛 比赛数据
type LittleCupMatchData struct {
	// 期数
	Term *int32 `protobuf:"varint,1,opt,name=term" json:"term,omitempty"`
	// 本阶段开始时间 时间戳
	Start *int64 `protobuf:"varint,3,opt,name=start" json:"start,omitempty"`
	// 对阵表
	Rooms            []*LittleCupMatchRoom `protobuf:"bytes,4,rep,name=rooms" json:"rooms,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *LittleCupMatchData) Reset()                    { *m = LittleCupMatchData{} }
func (m *LittleCupMatchData) String() string            { return proto.CompactTextString(m) }
func (*LittleCupMatchData) ProtoMessage()               {}
func (*LittleCupMatchData) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{6} }

func (m *LittleCupMatchData) GetTerm() int32 {
	if m != nil && m.Term != nil {
		return *m.Term
	}
	return 0
}

func (m *LittleCupMatchData) GetStart() int64 {
	if m != nil && m.Start != nil {
		return *m.Start
	}
	return 0
}

func (m *LittleCupMatchData) GetRooms() []*LittleCupMatchRoom {
	if m != nil {
		return m.Rooms
	}
	return nil
}

// 对阵房间
type LittleCupMatchRoom struct {
	// 对阵玩家
	Room *CupRoomInfo `protobuf:"bytes,1,opt,name=room" json:"room,omitempty"`
	// 对阵结果
	Result           *CupRoomResult `protobuf:"bytes,2,opt,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *LittleCupMatchRoom) Reset()                    { *m = LittleCupMatchRoom{} }
func (m *LittleCupMatchRoom) String() string            { return proto.CompactTextString(m) }
func (*LittleCupMatchRoom) ProtoMessage()               {}
func (*LittleCupMatchRoom) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{7} }

func (m *LittleCupMatchRoom) GetRoom() *CupRoomInfo {
	if m != nil {
		return m.Room
	}
	return nil
}

func (m *LittleCupMatchRoom) GetResult() *CupRoomResult {
	if m != nil {
		return m.Result
	}
	return nil
}

// 玩家个人相关数据
type LittleCupGamer struct {
	Gid                  *int32 `protobuf:"varint,1,opt,name=gid" json:"gid,omitempty"`
	Level                *int32 `protobuf:"varint,2,opt,name=level" json:"level,omitempty"`
	Term                 *int32 `protobuf:"varint,3,opt,name=term" json:"term,omitempty"`
	CheckInRefresh       *int64 `protobuf:"varint,4,opt,name=checkInRefresh" json:"checkInRefresh,omitempty"`
	JoinCount            *int32 `protobuf:"varint,5,opt,name=joinCount" json:"joinCount,omitempty"`
	JoinRefresh          *int64 `protobuf:"varint,6,opt,name=joinRefresh" json:"joinRefresh,omitempty"`
	RewardFlag           *int64 `protobuf:"varint,7,opt,name=rewardFlag" json:"rewardFlag,omitempty"`
	Score                *int32 `protobuf:"varint,8,opt,name=score" json:"score,omitempty"`
	Cups                 *int32 `protobuf:"varint,9,opt,name=cups" json:"cups,omitempty"`
	ContinueCheckinStart *int64 `protobuf:"varint,10,opt,name=continueCheckinStart" json:"continueCheckinStart,omitempty"`
	XXX_unrecognized     []byte `json:"-"`
}

func (m *LittleCupGamer) Reset()                    { *m = LittleCupGamer{} }
func (m *LittleCupGamer) String() string            { return proto.CompactTextString(m) }
func (*LittleCupGamer) ProtoMessage()               {}
func (*LittleCupGamer) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{8} }

func (m *LittleCupGamer) GetGid() int32 {
	if m != nil && m.Gid != nil {
		return *m.Gid
	}
	return 0
}

func (m *LittleCupGamer) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *LittleCupGamer) GetTerm() int32 {
	if m != nil && m.Term != nil {
		return *m.Term
	}
	return 0
}

func (m *LittleCupGamer) GetCheckInRefresh() int64 {
	if m != nil && m.CheckInRefresh != nil {
		return *m.CheckInRefresh
	}
	return 0
}

func (m *LittleCupGamer) GetJoinCount() int32 {
	if m != nil && m.JoinCount != nil {
		return *m.JoinCount
	}
	return 0
}

func (m *LittleCupGamer) GetJoinRefresh() int64 {
	if m != nil && m.JoinRefresh != nil {
		return *m.JoinRefresh
	}
	return 0
}

func (m *LittleCupGamer) GetRewardFlag() int64 {
	if m != nil && m.RewardFlag != nil {
		return *m.RewardFlag
	}
	return 0
}

func (m *LittleCupGamer) GetScore() int32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *LittleCupGamer) GetCups() int32 {
	if m != nil && m.Cups != nil {
		return *m.Cups
	}
	return 0
}

func (m *LittleCupGamer) GetContinueCheckinStart() int64 {
	if m != nil && m.ContinueCheckinStart != nil {
		return *m.ContinueCheckinStart
	}
	return 0
}

// 开赛通知战斗服创建房间
type CreateLittleCupRoomInfoM2F struct {
	Term             *int32    `protobuf:"varint,1,opt,name=term" json:"term,omitempty"`
	MatchId          *int32    `protobuf:"varint,2,opt,name=matchId" json:"matchId,omitempty"`
	OneGamer         *CupGamer `protobuf:"bytes,3,opt,name=one_gamer" json:"one_gamer,omitempty"`
	TwoGamer         *CupGamer `protobuf:"bytes,4,opt,name=two_gamer" json:"two_gamer,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *CreateLittleCupRoomInfoM2F) Reset()                    { *m = CreateLittleCupRoomInfoM2F{} }
func (m *CreateLittleCupRoomInfoM2F) String() string            { return proto.CompactTextString(m) }
func (*CreateLittleCupRoomInfoM2F) ProtoMessage()               {}
func (*CreateLittleCupRoomInfoM2F) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{9} }

func (m *CreateLittleCupRoomInfoM2F) GetTerm() int32 {
	if m != nil && m.Term != nil {
		return *m.Term
	}
	return 0
}

func (m *CreateLittleCupRoomInfoM2F) GetMatchId() int32 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *CreateLittleCupRoomInfoM2F) GetOneGamer() *CupGamer {
	if m != nil {
		return m.OneGamer
	}
	return nil
}

func (m *CreateLittleCupRoomInfoM2F) GetTwoGamer() *CupGamer {
	if m != nil {
		return m.TwoGamer
	}
	return nil
}

type LittleCupRoomInfoF2M struct {
	Term             *int32 `protobuf:"varint,1,opt,name=term" json:"term,omitempty"`
	MatchId          *int32 `protobuf:"varint,2,opt,name=matchId" json:"matchId,omitempty"`
	Replay           *int64 `protobuf:"varint,3,opt,name=replay" json:"replay,omitempty"`
	Console          *int64 `protobuf:"varint,4,opt,name=console" json:"console,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *LittleCupRoomInfoF2M) Reset()                    { *m = LittleCupRoomInfoF2M{} }
func (m *LittleCupRoomInfoF2M) String() string            { return proto.CompactTextString(m) }
func (*LittleCupRoomInfoF2M) ProtoMessage()               {}
func (*LittleCupRoomInfoF2M) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{10} }

func (m *LittleCupRoomInfoF2M) GetTerm() int32 {
	if m != nil && m.Term != nil {
		return *m.Term
	}
	return 0
}

func (m *LittleCupRoomInfoF2M) GetMatchId() int32 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *LittleCupRoomInfoF2M) GetReplay() int64 {
	if m != nil && m.Replay != nil {
		return *m.Replay
	}
	return 0
}

func (m *LittleCupRoomInfoF2M) GetConsole() int64 {
	if m != nil && m.Console != nil {
		return *m.Console
	}
	return 0
}

type LittleCupRoomResultF2M struct {
	Term             *int32 `protobuf:"varint,1,opt,name=term" json:"term,omitempty"`
	MatchId          *int32 `protobuf:"varint,2,opt,name=matchId" json:"matchId,omitempty"`
	Winner           *int32 `protobuf:"varint,4,opt,name=winner" json:"winner,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *LittleCupRoomResultF2M) Reset()                    { *m = LittleCupRoomResultF2M{} }
func (m *LittleCupRoomResultF2M) String() string            { return proto.CompactTextString(m) }
func (*LittleCupRoomResultF2M) ProtoMessage()               {}
func (*LittleCupRoomResultF2M) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{11} }

func (m *LittleCupRoomResultF2M) GetTerm() int32 {
	if m != nil && m.Term != nil {
		return *m.Term
	}
	return 0
}

func (m *LittleCupRoomResultF2M) GetMatchId() int32 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *LittleCupRoomResultF2M) GetWinner() int32 {
	if m != nil && m.Winner != nil {
		return *m.Winner
	}
	return 0
}

// 报名
type LittleCupCheckInL2M struct {
	Level            *int32    `protobuf:"varint,1,opt,name=level" json:"level,omitempty"`
	Term             *int32    `protobuf:"varint,2,opt,name=term" json:"term,omitempty"`
	Gamer            *CupGamer `protobuf:"bytes,3,opt,name=gamer" json:"gamer,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *LittleCupCheckInL2M) Reset()                    { *m = LittleCupCheckInL2M{} }
func (m *LittleCupCheckInL2M) String() string            { return proto.CompactTextString(m) }
func (*LittleCupCheckInL2M) ProtoMessage()               {}
func (*LittleCupCheckInL2M) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{12} }

func (m *LittleCupCheckInL2M) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *LittleCupCheckInL2M) GetTerm() int32 {
	if m != nil && m.Term != nil {
		return *m.Term
	}
	return 0
}

func (m *LittleCupCheckInL2M) GetGamer() *CupGamer {
	if m != nil {
		return m.Gamer
	}
	return nil
}

// 取消报名
type LittleCupCheckOutL2M struct {
	Level            *int32 `protobuf:"varint,1,opt,name=level" json:"level,omitempty"`
	Term             *int32 `protobuf:"varint,2,opt,name=term" json:"term,omitempty"`
	Gid              *int32 `protobuf:"varint,3,opt,name=gid" json:"gid,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *LittleCupCheckOutL2M) Reset()                    { *m = LittleCupCheckOutL2M{} }
func (m *LittleCupCheckOutL2M) String() string            { return proto.CompactTextString(m) }
func (*LittleCupCheckOutL2M) ProtoMessage()               {}
func (*LittleCupCheckOutL2M) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{13} }

func (m *LittleCupCheckOutL2M) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *LittleCupCheckOutL2M) GetTerm() int32 {
	if m != nil && m.Term != nil {
		return *m.Term
	}
	return 0
}

func (m *LittleCupCheckOutL2M) GetGid() int32 {
	if m != nil && m.Gid != nil {
		return *m.Gid
	}
	return 0
}

// 报名结果
type LittleCupCheckInResultM2L struct {
	Code             *int32 `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *LittleCupCheckInResultM2L) Reset()                    { *m = LittleCupCheckInResultM2L{} }
func (m *LittleCupCheckInResultM2L) String() string            { return proto.CompactTextString(m) }
func (*LittleCupCheckInResultM2L) ProtoMessage()               {}
func (*LittleCupCheckInResultM2L) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{14} }

func (m *LittleCupCheckInResultM2L) GetCode() int32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

// 同步玩家信息
type LittleCupSyncL2M struct {
	Level            *int32 `protobuf:"varint,1,opt,name=level" json:"level,omitempty"`
	Term             *int32 `protobuf:"varint,2,opt,name=term" json:"term,omitempty"`
	Gid              *int32 `protobuf:"varint,3,opt,name=gid" json:"gid,omitempty"`
	Psid             *int32 `protobuf:"varint,4,opt,name=psid" json:"psid,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *LittleCupSyncL2M) Reset()                    { *m = LittleCupSyncL2M{} }
func (m *LittleCupSyncL2M) String() string            { return proto.CompactTextString(m) }
func (*LittleCupSyncL2M) ProtoMessage()               {}
func (*LittleCupSyncL2M) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{15} }

func (m *LittleCupSyncL2M) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *LittleCupSyncL2M) GetTerm() int32 {
	if m != nil && m.Term != nil {
		return *m.Term
	}
	return 0
}

func (m *LittleCupSyncL2M) GetGid() int32 {
	if m != nil && m.Gid != nil {
		return *m.Gid
	}
	return 0
}

func (m *LittleCupSyncL2M) GetPsid() int32 {
	if m != nil && m.Psid != nil {
		return *m.Psid
	}
	return 0
}

// 同步玩家信息结果
type LittleCupSyncM2L struct {
	Code             *int32 `protobuf:"varint,1,opt,name=code" json:"code,omitempty"`
	Rank             *int32 `protobuf:"varint,2,opt,name=rank" json:"rank,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *LittleCupSyncM2L) Reset()                    { *m = LittleCupSyncM2L{} }
func (m *LittleCupSyncM2L) String() string            { return proto.CompactTextString(m) }
func (*LittleCupSyncM2L) ProtoMessage()               {}
func (*LittleCupSyncM2L) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{16} }

func (m *LittleCupSyncM2L) GetCode() int32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *LittleCupSyncM2L) GetRank() int32 {
	if m != nil && m.Rank != nil {
		return *m.Rank
	}
	return 0
}

// 比赛结束通知玩家结算
type LittleCupNotifyEndM2L struct {
	Rank             *int32 `protobuf:"varint,1,opt,name=rank" json:"rank,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *LittleCupNotifyEndM2L) Reset()                    { *m = LittleCupNotifyEndM2L{} }
func (m *LittleCupNotifyEndM2L) String() string            { return proto.CompactTextString(m) }
func (*LittleCupNotifyEndM2L) ProtoMessage()               {}
func (*LittleCupNotifyEndM2L) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{17} }

func (m *LittleCupNotifyEndM2L) GetRank() int32 {
	if m != nil && m.Rank != nil {
		return *m.Rank
	}
	return 0
}

// 获取当前杯赛信息
type LittleCupGetInfoL2M struct {
	Level            *int32 `protobuf:"varint,1,opt,name=level" json:"level,omitempty"`
	Term             *int32 `protobuf:"varint,2,opt,name=term" json:"term,omitempty"`
	Gid              *int32 `protobuf:"varint,3,opt,name=gid" json:"gid,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *LittleCupGetInfoL2M) Reset()                    { *m = LittleCupGetInfoL2M{} }
func (m *LittleCupGetInfoL2M) String() string            { return proto.CompactTextString(m) }
func (*LittleCupGetInfoL2M) ProtoMessage()               {}
func (*LittleCupGetInfoL2M) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{18} }

func (m *LittleCupGetInfoL2M) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *LittleCupGetInfoL2M) GetTerm() int32 {
	if m != nil && m.Term != nil {
		return *m.Term
	}
	return 0
}

func (m *LittleCupGetInfoL2M) GetGid() int32 {
	if m != nil && m.Gid != nil {
		return *m.Gid
	}
	return 0
}

// 获取当前杯赛信息
type LittleCupGetInfoM2L struct {
	Info             *CupArea            `protobuf:"bytes,1,opt,name=info" json:"info,omitempty"`
	MatchState       *LittleCupStage     `protobuf:"varint,2,opt,name=match_state,enum=LittleCupStage" json:"match_state,omitempty"`
	CheckInNum       *int32              `protobuf:"varint,3,opt,name=checkInNum" json:"checkInNum,omitempty"`
	MatchData        *LittleCupMatchData `protobuf:"bytes,4,opt,name=matchData" json:"matchData,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *LittleCupGetInfoM2L) Reset()                    { *m = LittleCupGetInfoM2L{} }
func (m *LittleCupGetInfoM2L) String() string            { return proto.CompactTextString(m) }
func (*LittleCupGetInfoM2L) ProtoMessage()               {}
func (*LittleCupGetInfoM2L) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{19} }

func (m *LittleCupGetInfoM2L) GetInfo() *CupArea {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *LittleCupGetInfoM2L) GetMatchState() LittleCupStage {
	if m != nil && m.MatchState != nil {
		return *m.MatchState
	}
	return LittleCupStage_lcBegin
}

func (m *LittleCupGetInfoM2L) GetCheckInNum() int32 {
	if m != nil && m.CheckInNum != nil {
		return *m.CheckInNum
	}
	return 0
}

func (m *LittleCupGetInfoM2L) GetMatchData() *LittleCupMatchData {
	if m != nil {
		return m.MatchData
	}
	return nil
}

// GM重赛
type GMCreateLittleCupRoom struct {
	Extral           []int64 `protobuf:"varint,1,rep,name=extral" json:"extral,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GMCreateLittleCupRoom) Reset()                    { *m = GMCreateLittleCupRoom{} }
func (m *GMCreateLittleCupRoom) String() string            { return proto.CompactTextString(m) }
func (*GMCreateLittleCupRoom) ProtoMessage()               {}
func (*GMCreateLittleCupRoom) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{20} }

func (m *GMCreateLittleCupRoom) GetExtral() []int64 {
	if m != nil {
		return m.Extral
	}
	return nil
}

// 一场小型杯赛 比赛数据
type LittleCupMatchShowData struct {
	// 期数
	Term *int32 `protobuf:"varint,1,opt,name=term" json:"term,omitempty"`
	// 本阶段开始时间 时间戳
	Start *int64 `protobuf:"varint,3,opt,name=start" json:"start,omitempty"`
	// 对阵表
	Rooms []*LittleCupMatchShowRoom `protobuf:"bytes,4,rep,name=rooms" json:"rooms,omitempty"`
	// 玩家当前的战斗id
	ConsoleId        *int64 `protobuf:"varint,5,opt,name=consoleId" json:"consoleId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *LittleCupMatchShowData) Reset()                    { *m = LittleCupMatchShowData{} }
func (m *LittleCupMatchShowData) String() string            { return proto.CompactTextString(m) }
func (*LittleCupMatchShowData) ProtoMessage()               {}
func (*LittleCupMatchShowData) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{21} }

func (m *LittleCupMatchShowData) GetTerm() int32 {
	if m != nil && m.Term != nil {
		return *m.Term
	}
	return 0
}

func (m *LittleCupMatchShowData) GetStart() int64 {
	if m != nil && m.Start != nil {
		return *m.Start
	}
	return 0
}

func (m *LittleCupMatchShowData) GetRooms() []*LittleCupMatchShowRoom {
	if m != nil {
		return m.Rooms
	}
	return nil
}

func (m *LittleCupMatchShowData) GetConsoleId() int64 {
	if m != nil && m.ConsoleId != nil {
		return *m.ConsoleId
	}
	return 0
}

// 对阵房间
type LittleCupMatchShowRoom struct {
	// 对阵玩家
	Room *CupRoomShowInfo `protobuf:"bytes,1,opt,name=room" json:"room,omitempty"`
	// 对阵结果
	Result           *CupRoomResult `protobuf:"bytes,2,opt,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *LittleCupMatchShowRoom) Reset()                    { *m = LittleCupMatchShowRoom{} }
func (m *LittleCupMatchShowRoom) String() string            { return proto.CompactTextString(m) }
func (*LittleCupMatchShowRoom) ProtoMessage()               {}
func (*LittleCupMatchShowRoom) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{22} }

func (m *LittleCupMatchShowRoom) GetRoom() *CupRoomShowInfo {
	if m != nil {
		return m.Room
	}
	return nil
}

func (m *LittleCupMatchShowRoom) GetResult() *CupRoomResult {
	if m != nil {
		return m.Result
	}
	return nil
}

// 杯赛单局对战信息(前端展示)
type CupRoomShowInfo struct {
	// 房间id（总共7场 编号1-7）
	Id *int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// 玩家1
	Gamer1 *CupGamerInfo `protobuf:"bytes,3,opt,name=gamer1" json:"gamer1,omitempty"`
	// 玩家2
	Gamer2           *CupGamerInfo `protobuf:"bytes,4,opt,name=gamer2" json:"gamer2,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *CupRoomShowInfo) Reset()                    { *m = CupRoomShowInfo{} }
func (m *CupRoomShowInfo) String() string            { return proto.CompactTextString(m) }
func (*CupRoomShowInfo) ProtoMessage()               {}
func (*CupRoomShowInfo) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{23} }

func (m *CupRoomShowInfo) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *CupRoomShowInfo) GetGamer1() *CupGamerInfo {
	if m != nil {
		return m.Gamer1
	}
	return nil
}

func (m *CupRoomShowInfo) GetGamer2() *CupGamerInfo {
	if m != nil {
		return m.Gamer2
	}
	return nil
}

// 对阵玩家信息
type CupGamerInfo struct {
	Gid              *int32  `protobuf:"varint,1,opt,name=gid" json:"gid,omitempty"`
	Name             *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	LsId             *int32  `protobuf:"varint,3,opt,name=lsId" json:"lsId,omitempty"`
	Icon             *int32  `protobuf:"varint,4,opt,name=icon" json:"icon,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CupGamerInfo) Reset()                    { *m = CupGamerInfo{} }
func (m *CupGamerInfo) String() string            { return proto.CompactTextString(m) }
func (*CupGamerInfo) ProtoMessage()               {}
func (*CupGamerInfo) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{24} }

func (m *CupGamerInfo) GetGid() int32 {
	if m != nil && m.Gid != nil {
		return *m.Gid
	}
	return 0
}

func (m *CupGamerInfo) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CupGamerInfo) GetLsId() int32 {
	if m != nil && m.LsId != nil {
		return *m.LsId
	}
	return 0
}

func (m *CupGamerInfo) GetIcon() int32 {
	if m != nil && m.Icon != nil {
		return *m.Icon
	}
	return 0
}

// 报名
type LittleCupCheckInC2S struct {
	Term             *int32 `protobuf:"varint,1,opt,name=term" json:"term,omitempty"`
	Level            *int32 `protobuf:"varint,2,opt,name=level" json:"level,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *LittleCupCheckInC2S) Reset()                    { *m = LittleCupCheckInC2S{} }
func (m *LittleCupCheckInC2S) String() string            { return proto.CompactTextString(m) }
func (*LittleCupCheckInC2S) ProtoMessage()               {}
func (*LittleCupCheckInC2S) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{25} }

func (m *LittleCupCheckInC2S) GetTerm() int32 {
	if m != nil && m.Term != nil {
		return *m.Term
	}
	return 0
}

func (m *LittleCupCheckInC2S) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

// 返回报名结果
type LittleCupCheckInS2C struct {
	Result           *int32 `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *LittleCupCheckInS2C) Reset()                    { *m = LittleCupCheckInS2C{} }
func (m *LittleCupCheckInS2C) String() string            { return proto.CompactTextString(m) }
func (*LittleCupCheckInS2C) ProtoMessage()               {}
func (*LittleCupCheckInS2C) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{26} }

func (m *LittleCupCheckInS2C) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

// 取消报名
type LittleCupCheckOutC2S struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *LittleCupCheckOutC2S) Reset()                    { *m = LittleCupCheckOutC2S{} }
func (m *LittleCupCheckOutC2S) String() string            { return proto.CompactTextString(m) }
func (*LittleCupCheckOutC2S) ProtoMessage()               {}
func (*LittleCupCheckOutC2S) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{27} }

// 取消报名结果
type LittleCupCheckOutS2C struct {
	Result           *bool  `protobuf:"varint,1,opt,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *LittleCupCheckOutS2C) Reset()                    { *m = LittleCupCheckOutS2C{} }
func (m *LittleCupCheckOutS2C) String() string            { return proto.CompactTextString(m) }
func (*LittleCupCheckOutS2C) ProtoMessage()               {}
func (*LittleCupCheckOutS2C) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{28} }

func (m *LittleCupCheckOutS2C) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

// 查看小型杯赛信息
type LittleCupC2S struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *LittleCupC2S) Reset()                    { *m = LittleCupC2S{} }
func (m *LittleCupC2S) String() string            { return proto.CompactTextString(m) }
func (*LittleCupC2S) ProtoMessage()               {}
func (*LittleCupC2S) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{29} }

// 返回小型杯赛信息
type LittleCupS2C struct {
	Info             *CupArea                `protobuf:"bytes,1,opt,name=info" json:"info,omitempty"`
	MatchState       *LittleCupStage         `protobuf:"varint,2,opt,name=match_state,enum=LittleCupStage" json:"match_state,omitempty"`
	CheckInNum       *int32                  `protobuf:"varint,3,opt,name=checkInNum" json:"checkInNum,omitempty"`
	MatchData        *LittleCupMatchShowData `protobuf:"bytes,4,opt,name=matchData" json:"matchData,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *LittleCupS2C) Reset()                    { *m = LittleCupS2C{} }
func (m *LittleCupS2C) String() string            { return proto.CompactTextString(m) }
func (*LittleCupS2C) ProtoMessage()               {}
func (*LittleCupS2C) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{30} }

func (m *LittleCupS2C) GetInfo() *CupArea {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *LittleCupS2C) GetMatchState() LittleCupStage {
	if m != nil && m.MatchState != nil {
		return *m.MatchState
	}
	return LittleCupStage_lcBegin
}

func (m *LittleCupS2C) GetCheckInNum() int32 {
	if m != nil && m.CheckInNum != nil {
		return *m.CheckInNum
	}
	return 0
}

func (m *LittleCupS2C) GetMatchData() *LittleCupMatchShowData {
	if m != nil {
		return m.MatchData
	}
	return nil
}

// 上线推送杯赛个人信息
type LoginSendLittleCupS2C struct {
	JoinCount        *int32 `protobuf:"varint,1,opt,name=joinCount" json:"joinCount,omitempty"`
	Term             *int32 `protobuf:"varint,2,opt,name=term" json:"term,omitempty"`
	Level            *int32 `protobuf:"varint,3,opt,name=level" json:"level,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *LoginSendLittleCupS2C) Reset()                    { *m = LoginSendLittleCupS2C{} }
func (m *LoginSendLittleCupS2C) String() string            { return proto.CompactTextString(m) }
func (*LoginSendLittleCupS2C) ProtoMessage()               {}
func (*LoginSendLittleCupS2C) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{31} }

func (m *LoginSendLittleCupS2C) GetJoinCount() int32 {
	if m != nil && m.JoinCount != nil {
		return *m.JoinCount
	}
	return 0
}

func (m *LoginSendLittleCupS2C) GetTerm() int32 {
	if m != nil && m.Term != nil {
		return *m.Term
	}
	return 0
}

func (m *LoginSendLittleCupS2C) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

// 杯赛信息更新通知
type LittleCupUpdateS2C struct {
	CheckInNum       *int32              `protobuf:"varint,1,opt,name=checkInNum" json:"checkInNum,omitempty"`
	MatchState       *LittleCupStage     `protobuf:"varint,2,opt,name=match_state,enum=LittleCupStage" json:"match_state,omitempty"`
	MatchData        *LittleCupMatchData `protobuf:"bytes,3,opt,name=matchData" json:"matchData,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *LittleCupUpdateS2C) Reset()                    { *m = LittleCupUpdateS2C{} }
func (m *LittleCupUpdateS2C) String() string            { return proto.CompactTextString(m) }
func (*LittleCupUpdateS2C) ProtoMessage()               {}
func (*LittleCupUpdateS2C) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{32} }

func (m *LittleCupUpdateS2C) GetCheckInNum() int32 {
	if m != nil && m.CheckInNum != nil {
		return *m.CheckInNum
	}
	return 0
}

func (m *LittleCupUpdateS2C) GetMatchState() LittleCupStage {
	if m != nil && m.MatchState != nil {
		return *m.MatchState
	}
	return LittleCupStage_lcBegin
}

func (m *LittleCupUpdateS2C) GetMatchData() *LittleCupMatchData {
	if m != nil {
		return m.MatchData
	}
	return nil
}

// 小型杯赛淘汰通知
type LittleCupEndS2C struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *LittleCupEndS2C) Reset()                    { *m = LittleCupEndS2C{} }
func (m *LittleCupEndS2C) String() string            { return proto.CompactTextString(m) }
func (*LittleCupEndS2C) ProtoMessage()               {}
func (*LittleCupEndS2C) Descriptor() ([]byte, []int) { return fileDescriptor39, []int{33} }

func init() {
	proto.RegisterType((*CupArea)(nil), "CupArea")
	proto.RegisterType((*CupMatch)(nil), "CupMatch")
	proto.RegisterType((*CupRoomInfo)(nil), "CupRoomInfo")
	proto.RegisterType((*CupRoomResult)(nil), "CupRoomResult")
	proto.RegisterType((*CupGamer)(nil), "CupGamer")
	proto.RegisterType((*CupTopGamer)(nil), "CupTopGamer")
	proto.RegisterType((*LittleCupMatchData)(nil), "LittleCupMatchData")
	proto.RegisterType((*LittleCupMatchRoom)(nil), "LittleCupMatchRoom")
	proto.RegisterType((*LittleCupGamer)(nil), "LittleCupGamer")
	proto.RegisterType((*CreateLittleCupRoomInfoM2F)(nil), "CreateLittleCupRoomInfoM2F")
	proto.RegisterType((*LittleCupRoomInfoF2M)(nil), "LittleCupRoomInfoF2M")
	proto.RegisterType((*LittleCupRoomResultF2M)(nil), "LittleCupRoomResultF2M")
	proto.RegisterType((*LittleCupCheckInL2M)(nil), "LittleCupCheckInL2M")
	proto.RegisterType((*LittleCupCheckOutL2M)(nil), "LittleCupCheckOutL2M")
	proto.RegisterType((*LittleCupCheckInResultM2L)(nil), "LittleCupCheckInResultM2L")
	proto.RegisterType((*LittleCupSyncL2M)(nil), "LittleCupSyncL2M")
	proto.RegisterType((*LittleCupSyncM2L)(nil), "LittleCupSyncM2L")
	proto.RegisterType((*LittleCupNotifyEndM2L)(nil), "LittleCupNotifyEndM2L")
	proto.RegisterType((*LittleCupGetInfoL2M)(nil), "LittleCupGetInfoL2M")
	proto.RegisterType((*LittleCupGetInfoM2L)(nil), "LittleCupGetInfoM2L")
	proto.RegisterType((*GMCreateLittleCupRoom)(nil), "GMCreateLittleCupRoom")
	proto.RegisterType((*LittleCupMatchShowData)(nil), "LittleCupMatchShowData")
	proto.RegisterType((*LittleCupMatchShowRoom)(nil), "LittleCupMatchShowRoom")
	proto.RegisterType((*CupRoomShowInfo)(nil), "CupRoomShowInfo")
	proto.RegisterType((*CupGamerInfo)(nil), "CupGamerInfo")
	proto.RegisterType((*LittleCupCheckInC2S)(nil), "LittleCupCheckInC2S")
	proto.RegisterType((*LittleCupCheckInS2C)(nil), "LittleCupCheckInS2C")
	proto.RegisterType((*LittleCupCheckOutC2S)(nil), "LittleCupCheckOutC2S")
	proto.RegisterType((*LittleCupCheckOutS2C)(nil), "LittleCupCheckOutS2C")
	proto.RegisterType((*LittleCupC2S)(nil), "LittleCupC2S")
	proto.RegisterType((*LittleCupS2C)(nil), "LittleCupS2C")
	proto.RegisterType((*LoginSendLittleCupS2C)(nil), "loginSendLittleCupS2C")
	proto.RegisterType((*LittleCupUpdateS2C)(nil), "littleCupUpdateS2C")
	proto.RegisterType((*LittleCupEndS2C)(nil), "littleCupEndS2C")
	proto.RegisterEnum("LittleCupStage", LittleCupStage_name, LittleCupStage_value)
	proto.RegisterEnum("LittleCupCheckInC2S_MsgID", LittleCupCheckInC2S_MsgID_name, LittleCupCheckInC2S_MsgID_value)
	proto.RegisterEnum("LittleCupCheckInS2C_MsgID", LittleCupCheckInS2C_MsgID_name, LittleCupCheckInS2C_MsgID_value)
	proto.RegisterEnum("LittleCupCheckOutC2S_MsgID", LittleCupCheckOutC2S_MsgID_name, LittleCupCheckOutC2S_MsgID_value)
	proto.RegisterEnum("LittleCupCheckOutS2C_MsgID", LittleCupCheckOutS2C_MsgID_name, LittleCupCheckOutS2C_MsgID_value)
	proto.RegisterEnum("LittleCupC2S_MsgID", LittleCupC2S_MsgID_name, LittleCupC2S_MsgID_value)
	proto.RegisterEnum("LittleCupS2C_MsgID", LittleCupS2C_MsgID_name, LittleCupS2C_MsgID_value)
	proto.RegisterEnum("LoginSendLittleCupS2C_MsgID", LoginSendLittleCupS2C_MsgID_name, LoginSendLittleCupS2C_MsgID_value)
	proto.RegisterEnum("LittleCupUpdateS2C_MsgID", LittleCupUpdateS2C_MsgID_name, LittleCupUpdateS2C_MsgID_value)
	proto.RegisterEnum("LittleCupEndS2C_MsgID", LittleCupEndS2C_MsgID_name, LittleCupEndS2C_MsgID_value)
}

func init() { proto.RegisterFile("little_cup.proto", fileDescriptor39) }

var fileDescriptor39 = []byte{
	// 1095 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xac, 0x56, 0x5f, 0x6f, 0xdb, 0x54,
	0x14, 0x57, 0xe2, 0x38, 0x69, 0x4e, 0xd2, 0xd4, 0xb8, 0x69, 0xc9, 0xca, 0x56, 0x4d, 0x57, 0x63,
	0x8c, 0x09, 0x45, 0xc2, 0x2f, 0x08, 0x81, 0xc4, 0x9f, 0x6c, 0x0d, 0x41, 0xcd, 0x86, 0x9a, 0x0e,
	0x90, 0x10, 0x8a, 0x8c, 0x73, 0x9b, 0x98, 0x39, 0xbe, 0x91, 0x7d, 0x43, 0xa8, 0x94, 0x17, 0x60,
	0xf0, 0x84, 0xc4, 0x03, 0xdf, 0x80, 0x6f, 0xc3, 0xb7, 0xe2, 0xdc, 0x3f, 0x71, 0x62, 0xc7, 0x5d,
	0x5b, 0x89, 0x37, 0x9f, 0x7b, 0xcf, 0xf9, 0x9d, 0x73, 0x7f, 0xe7, 0x9f, 0xc1, 0x0a, 0x7c, 0xce,
	0x03, 0x3a, 0xf4, 0xe6, 0xb3, 0xf6, 0x2c, 0x62, 0x9c, 0x1d, 0xd5, 0x3d, 0x36, 0x9d, 0xb2, 0x50,
	0x49, 0xa4, 0x0b, 0x95, 0xce, 0x7c, 0xf6, 0x59, 0x44, 0x5d, 0x7b, 0x17, 0xcc, 0x80, 0xfe, 0x44,
	0x83, 0x56, 0xe1, 0x7e, 0xe1, 0x91, 0x69, 0xd7, 0xa1, 0xc4, 0x69, 0x34, 0x6d, 0x15, 0xa5, 0xd4,
	0x80, 0x72, 0x4c, 0xdd, 0x98, 0x85, 0x2d, 0x43, 0xca, 0x7b, 0x50, 0xa1, 0xe1, 0xe8, 0xdc, 0x9f,
	0xd2, 0x56, 0x09, 0x0f, 0x0c, 0xf2, 0x77, 0x01, 0x76, 0x10, 0xa9, 0xef, 0x72, 0x6f, 0x92, 0xd8,
	0x2a, 0xa4, 0x63, 0x30, 0x63, 0xee, 0x8e, 0xa9, 0x84, 0x6a, 0x38, 0x7b, 0xed, 0x53, 0x19, 0x13,
	0x6a, 0x0f, 0xc4, 0xb1, 0xfd, 0x06, 0x54, 0x69, 0x88, 0xfa, 0x6b, 0x34, 0xfb, 0x0e, 0x94, 0xc7,
	0xee, 0x94, 0x46, 0x71, 0xcb, 0xbc, 0x6f, 0x3c, 0xaa, 0x39, 0xd5, 0x36, 0x6a, 0x77, 0xc5, 0x89,
	0xfd, 0x16, 0x98, 0x11, 0x63, 0xd3, 0xb8, 0x55, 0x96, 0x37, 0x75, 0x71, 0x73, 0x86, 0x07, 0xbd,
	0xf0, 0x82, 0x89, 0x30, 0x23, 0xf6, 0x03, 0xe3, 0x71, 0xab, 0x82, 0xb7, 0x26, 0xf9, 0x10, 0x6a,
	0x9b, 0xd7, 0x00, 0x45, 0x7f, 0xa4, 0xa3, 0x6a, 0x68, 0x17, 0xef, 0xeb, 0x17, 0xad, 0x64, 0x47,
	0x86, 0x60, 0x92, 0x4f, 0x61, 0x57, 0x9b, 0x9e, 0xd1, 0x78, 0x1e, 0x70, 0xa1, 0xb0, 0xf0, 0xc3,
	0x90, 0x46, 0x18, 0x93, 0x36, 0x88, 0xe8, 0x2c, 0x70, 0x2f, 0x31, 0x12, 0x11, 0x33, 0x52, 0xe2,
	0xb1, 0x30, 0x66, 0x01, 0x45, 0xe7, 0x82, 0x92, 0xb9, 0x64, 0x44, 0x45, 0x5d, 0x03, 0x63, 0x9c,
	0xb8, 0x46, 0x7a, 0x66, 0x71, 0x6f, 0xa4, 0xa9, 0x45, 0x29, 0x10, 0x92, 0x0a, 0x03, 0x63, 0x94,
	0x61, 0x0c, 0x43, 0x57, 0xb3, 0x51, 0x15, 0xc8, 0x9c, 0xba, 0xd3, 0x21, 0x02, 0x28, 0xd7, 0x98,
	0xaa, 0xd8, 0x63, 0x11, 0x95, 0x9e, 0x25, 0x02, 0xe6, 0x37, 0x96, 0x6e, 0x4d, 0xf2, 0x81, 0x7c,
	0xf3, 0x39, 0xcb, 0xf3, 0x9c, 0x18, 0x26, 0xae, 0xb9, 0x20, 0xdd, 0x90, 0xf1, 0xbe, 0x00, 0x3b,
	0xc9, 0x8c, 0xcc, 0xe3, 0x13, 0x97, 0xbb, 0x99, 0x5c, 0xee, 0xca, 0x5c, 0x46, 0x5c, 0x99, 0xd8,
	0x64, 0x95, 0x8c, 0x92, 0x4c, 0xc6, 0x7e, 0x3b, 0x0d, 0x20, 0xd8, 0x23, 0x5f, 0x65, 0x61, 0xc5,
	0xa9, 0x7d, 0x04, 0x25, 0x61, 0x29, 0x61, 0xb3, 0x59, 0x3c, 0x16, 0xcc, 0x0a, 0xce, 0x65, 0x98,
	0x35, 0xa7, 0xd1, 0x4e, 0x65, 0x82, 0xfc, 0x5b, 0x80, 0x46, 0x02, 0x99, 0xff, 0x4a, 0x55, 0xc9,
	0xc5, 0x54, 0x25, 0x2b, 0x82, 0x0f, 0xa1, 0xe1, 0x4d, 0xa8, 0xf7, 0xb2, 0x17, 0x9e, 0xd1, 0x0b,
	0x74, 0x33, 0xd1, 0x25, 0x87, 0x55, 0xf8, 0x23, 0xf3, 0xc3, 0x0e, 0x9b, 0x87, 0x5c, 0xd3, 0xbc,
	0x0f, 0x35, 0x71, 0xb4, 0xd2, 0x53, 0x69, 0xc6, 0x04, 0x45, 0x74, 0xe1, 0x46, 0xa3, 0x93, 0xc0,
	0x1d, 0xab, 0x4c, 0xaf, 0x69, 0xdd, 0x49, 0xe5, 0xa3, 0x2a, 0xa5, 0xbb, 0xd0, 0xc4, 0xba, 0xe0,
	0x7e, 0x38, 0xa7, 0x1d, 0xe1, 0xd8, 0x0f, 0x07, 0x92, 0x41, 0x90, 0xa4, 0x2f, 0xe0, 0xa8, 0x83,
	0xdd, 0xc7, 0x69, 0xf2, 0xa0, 0x15, 0x0d, 0x7d, 0xe7, 0x24, 0x43, 0x3e, 0xd6, 0xc1, 0x54, 0x10,
	0x98, 0x94, 0xce, 0x5d, 0xa8, 0xb2, 0x90, 0x0e, 0x65, 0xc1, 0xc8, 0xe7, 0xa5, 0x3a, 0x05, 0x6f,
	0xf9, 0x82, 0xe9, 0xdb, 0x52, 0xe6, 0x96, 0x7c, 0x0d, 0xcd, 0x2d, 0x97, 0x27, 0x4e, 0xff, 0x3a,
	0x97, 0xeb, 0xaa, 0x37, 0xb2, 0x55, 0xaf, 0x06, 0x41, 0x17, 0x0e, 0x53, 0xb8, 0x2a, 0x67, 0x37,
	0x43, 0xd6, 0xfd, 0xa5, 0x1a, 0xf0, 0x14, 0xf6, 0x13, 0xa0, 0x8e, 0xca, 0xd8, 0x29, 0xa2, 0xbc,
	0x76, 0x4c, 0xb5, 0xc0, 0xcc, 0x27, 0x03, 0xdb, 0xb9, 0x99, 0x46, 0x7b, 0x3e, 0xe7, 0xd7, 0xc2,
	0xe9, 0xaa, 0x92, 0x85, 0x43, 0xde, 0x85, 0x3b, 0xd9, 0x78, 0xd4, 0xdb, 0xfa, 0xce, 0xa9, 0x4c,
	0x39, 0x1b, 0x51, 0x85, 0x42, 0xbe, 0x04, 0x6b, 0x3d, 0xe3, 0x2e, 0x43, 0xef, 0x56, 0x8e, 0xd4,
	0x78, 0x40, 0x49, 0xd1, 0xd0, 0xce, 0x60, 0x6d, 0x79, 0x13, 0x52, 0xe4, 0x86, 0x2f, 0x15, 0x14,
	0x79, 0x1b, 0x0e, 0x12, 0xfd, 0x67, 0x8c, 0xfb, 0x17, 0x97, 0x4f, 0xc3, 0x91, 0x36, 0x92, 0x6a,
	0x2a, 0xc4, 0x4f, 0x36, 0xd8, 0xed, 0x52, 0x2e, 0xb2, 0x7f, 0x3b, 0x3a, 0xfe, 0x2a, 0x6c, 0x23,
	0x08, 0x37, 0x87, 0x50, 0xf2, 0xf1, 0x53, 0x37, 0xf6, 0x4e, 0x7b, 0xb5, 0x5e, 0x1e, 0x40, 0x4d,
	0xe6, 0x7b, 0x88, 0xf3, 0x83, 0x5f, 0xb9, 0x0b, 0xb0, 0xbb, 0x74, 0x77, 0x3e, 0x9b, 0xaf, 0x3a,
	0xf6, 0x21, 0x54, 0xa7, 0xab, 0x71, 0xa4, 0xeb, 0x38, 0x3b, 0x68, 0xc4, 0x15, 0x79, 0x07, 0x0e,
	0xba, 0xfd, 0x9c, 0x66, 0x12, 0x95, 0x45, 0x7f, 0xe6, 0x91, 0x2b, 0x5e, 0x65, 0x60, 0x89, 0xce,
	0x36, 0x4a, 0x54, 0x9a, 0x0f, 0x26, 0x6c, 0x71, 0xfd, 0xb0, 0x7b, 0x98, 0x1e, 0x76, 0x6f, 0xb6,
	0xb7, 0x41, 0xa4, 0x3b, 0x9c, 0x24, 0xba, 0x25, 0x7a, 0x6a, 0x60, 0x1b, 0xe4, 0xdb, 0x3c, 0x8f,
	0x52, 0xf9, 0x38, 0x35, 0x07, 0xad, 0xd5, 0xa4, 0x13, 0xf7, 0x37, 0x9a, 0x85, 0xdf, 0xc1, 0x5e,
	0xd6, 0x64, 0x73, 0xcb, 0xdd, 0x4b, 0x6d, 0xb9, 0x9a, 0xb3, 0x9b, 0x74, 0x84, 0x54, 0xbd, 0x97,
	0x5a, 0x7a, 0xd9, 0x6b, 0xf2, 0x14, 0xea, 0x29, 0xf5, 0xec, 0x16, 0x93, 0x3b, 0xaa, 0x28, 0x77,
	0x54, 0x7a, 0x8b, 0xa1, 0xe4, 0x23, 0x07, 0xba, 0x84, 0xbf, 0xd8, 0xee, 0xe4, 0x8e, 0x33, 0xd8,
	0x26, 0x7b, 0x63, 0x68, 0x93, 0x26, 0x98, 0xfd, 0x78, 0xdc, 0x7b, 0x82, 0x3e, 0xcb, 0x54, 0x7e,
	0x59, 0xbf, 0x2c, 0xc9, 0x47, 0xdb, 0x48, 0x03, 0xa7, 0xa3, 0x86, 0x92, 0x24, 0xa9, 0xf0, 0x1a,
	0xe3, 0xf7, 0x72, 0x46, 0x00, 0xc6, 0x91, 0xa7, 0xfd, 0xeb, 0x92, 0x7c, 0x9c, 0xa3, 0xbd, 0xed,
	0x6b, 0xe7, 0x0a, 0xeb, 0x07, 0x50, 0x5f, 0x5b, 0xe7, 0xfb, 0xf8, 0x6d, 0x49, 0xfe, 0x29, 0x6c,
	0xa8, 0x09, 0xf0, 0xff, 0xbf, 0x79, 0x1e, 0x6f, 0x37, 0x4f, 0x5e, 0xe1, 0xca, 0x06, 0xca, 0x0f,
	0xf2, 0x7b, 0x38, 0x08, 0xd8, 0x18, 0xb7, 0x16, 0xfe, 0xf0, 0xa5, 0x82, 0x4d, 0x6d, 0xcc, 0xbc,
	0x79, 0x91, 0xa4, 0xd4, 0xb8, 0x2a, 0x2b, 0xaf, 0x96, 0xe4, 0xcf, 0x02, 0xd8, 0xc1, 0x0a, 0xf6,
	0xc5, 0x6c, 0x84, 0xef, 0x13, 0xe0, 0xe9, 0xb7, 0x28, 0xf4, 0x9b, 0xb1, 0x90, 0x1a, 0x17, 0xc6,
	0xd5, 0xe3, 0x22, 0x27, 0x9c, 0xdf, 0x97, 0x38, 0x44, 0xf6, 0x92, 0x68, 0x70, 0x70, 0x62, 0x28,
	0x79, 0x8a, 0x7f, 0x2c, 0x1f, 0xbf, 0xda, 0xfc, 0x09, 0x51, 0x9e, 0x6b, 0x50, 0x09, 0xbc, 0xcf,
	0x29, 0x72, 0x65, 0x15, 0xb0, 0x4e, 0x20, 0xf0, 0xce, 0x90, 0x9b, 0xd1, 0xf3, 0x90, 0x5a, 0x45,
	0x7c, 0x50, 0x43, 0xcb, 0xe7, 0x0b, 0xf6, 0x8d, 0xeb, 0x73, 0xcb, 0xd8, 0xd0, 0xc1, 0x33, 0xab,
	0x64, 0x37, 0xf1, 0x7f, 0x5d, 0xcb, 0x93, 0x88, 0x52, 0xa9, 0x65, 0xda, 0x16, 0xd4, 0x37, 0x4f,
	0xad, 0xb2, 0x5d, 0x45, 0x62, 0x3d, 0x8c, 0xce, 0xaa, 0xfc, 0x17, 0x00, 0x00, 0xff, 0xff, 0x66,
	0x48, 0xc6, 0x46, 0xe1, 0x0b, 0x00, 0x00,
}
